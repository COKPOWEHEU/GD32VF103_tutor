
res/firmware.elf:     file format elf32-littleriscv


Disassembly of section .text:

00000000 <_vector_table>:
   0:	15c0006f          	j	15c <_start>
	...
  e0:	01f4                	addi	a3,sp,204
	...

0000015c <_start>:
 15c:	20008117          	auipc	sp,0x20008
 160:	ea410113          	addi	sp,sp,-348 # 20008000 <_stack_end>
 164:	1e600293          	li	t0,486
 168:	7c32a073          	csrs	0x7c3,t0
 16c:	20000293          	li	t0,512
 170:	7d02a073          	csrs	0x7d0,t0
 174:	00000293          	li	t0,0
 178:	30729073          	csrw	mtvt,t0
 17c:	1e600293          	li	t0,486
 180:	7ec29073          	csrw	0x7ec,t0
 184:	7ec0e073          	csrsi	0x7ec,1
 188:	1e600293          	li	t0,486
 18c:	fc02f293          	andi	t0,t0,-64
 190:	0032e293          	ori	t0,t0,3
 194:	30529073          	csrw	mtvec,t0
 198:	79c00513          	li	a0,1948
 19c:	20000597          	auipc	a1,0x20000
 1a0:	e6458593          	addi	a1,a1,-412 # 20000000 <_data_end>
 1a4:	20000617          	auipc	a2,0x20000
 1a8:	e5c60613          	addi	a2,a2,-420 # 20000000 <_data_end>
 1ac:	00c5fa63          	bgeu	a1,a2,1c0 <copy_data_end>

000001b0 <copy_data_loop>:
 1b0:	00052283          	lw	t0,0(a0)
 1b4:	0055a023          	sw	t0,0(a1)
 1b8:	0511                	addi	a0,a0,4
 1ba:	0591                	addi	a1,a1,4
 1bc:	fec5eae3          	bltu	a1,a2,1b0 <copy_data_loop>

000001c0 <copy_data_end>:
 1c0:	20000517          	auipc	a0,0x20000
 1c4:	e4450513          	addi	a0,a0,-444 # 20000004 <_bss_end>
 1c8:	20000597          	auipc	a1,0x20000
 1cc:	e3c58593          	addi	a1,a1,-452 # 20000004 <_bss_end>
 1d0:	00b57763          	bgeu	a0,a1,1de <clear_bss_end>

000001d4 <clear_bss_loop>:
 1d4:	00052023          	sw	zero,0(a0)
 1d8:	0511                	addi	a0,a0,4
 1da:	feb56de3          	bltu	a0,a1,1d4 <clear_bss_loop>

000001de <clear_bss_end>:
 1de:	4501                	li	a0,0
 1e0:	4581                	li	a1,0
 1e2:	2071                	jal	26e <main>

000001e4 <UnhandledInterruptHandler>:
 1e4:	a001                	j	1e4 <UnhandledInterruptHandler>

000001e6 <IRQHandler>:
 1e6:	fffff06f          	j	1e4 <UnhandledInterruptHandler>

000001ea <sleep>:
#define UART0_RX A,10,0,GPIO_HIZ

uint32_t SystemCoreClock = 8000000;

void sleep(uint32_t time){
  for(;time;time--)asm volatile("nop");
 1ea:	e111                	bnez	a0,1ee <sleep+0x4>
}
 1ec:	8082                	ret
  for(;time;time--)asm volatile("nop");
 1ee:	0001                	nop
 1f0:	157d                	addi	a0,a0,-1
 1f2:	bfe5                	j	1ea <sleep>

000001f4 <USART0_IRQHandler>:
    if( GPI_ON(RBTN) )USART_CTL0(USART0) |= USART_CTL0_TBEIE;
    sleep(100000);
  }
}

void USART0_IRQHandler(void){
 1f4:	7139                	addi	sp,sp,-64
 1f6:	cc3e                	sw	a5,24(sp)
  USART_CTL0(USART0) &=~ USART_CTL0_TBEIE;
 1f8:	400147b7          	lui	a5,0x40014
void USART0_IRQHandler(void){
 1fc:	ce3a                	sw	a4,28(sp)
  USART_CTL0(USART0) &=~ USART_CTL0_TBEIE;
 1fe:	80c7a703          	lw	a4,-2036(a5) # 4001380c <_stack_end+0x2000b80c>
void USART0_IRQHandler(void){
 202:	d62a                	sw	a0,44(sp)
 204:	de06                	sw	ra,60(sp)
 206:	dc16                	sw	t0,56(sp)
 208:	da1a                	sw	t1,52(sp)
 20a:	d81e                	sw	t2,48(sp)
 20c:	d42e                	sw	a1,40(sp)
 20e:	d232                	sw	a2,36(sp)
 210:	d036                	sw	a3,32(sp)
 212:	ca42                	sw	a6,20(sp)
 214:	c846                	sw	a7,16(sp)
 216:	c672                	sw	t3,12(sp)
 218:	c476                	sw	t4,8(sp)
 21a:	c27a                	sw	t5,4(sp)
 21c:	c07e                	sw	t6,0(sp)
  USART_CTL0(USART0) &=~ USART_CTL0_TBEIE;
 21e:	f7f77713          	andi	a4,a4,-129
 222:	80e7a623          	sw	a4,-2036(a5)
  USART_DATA(USART0) = 'U';
 226:	05500713          	li	a4,85
 22a:	80e7a223          	sw	a4,-2044(a5)
  GPO_T(RLED);
 22e:	40011737          	lui	a4,0x40011
 232:	c0c72783          	lw	a5,-1012(a4) # 40010c0c <_stack_end+0x20008c0c>
  sleep(300000);
 236:	00049537          	lui	a0,0x49
 23a:	3e050513          	addi	a0,a0,992 # 493e0 <CSR_MTVT2+0x48bf4>
  GPO_T(RLED);
 23e:	0207c793          	xori	a5,a5,32
 242:	c0f72623          	sw	a5,-1012(a4)
  sleep(300000);
 246:	3755                	jal	1ea <sleep>
}
 248:	50f2                	lw	ra,60(sp)
 24a:	52e2                	lw	t0,56(sp)
 24c:	5352                	lw	t1,52(sp)
 24e:	53c2                	lw	t2,48(sp)
 250:	5532                	lw	a0,44(sp)
 252:	55a2                	lw	a1,40(sp)
 254:	5612                	lw	a2,36(sp)
 256:	5682                	lw	a3,32(sp)
 258:	4772                	lw	a4,28(sp)
 25a:	47e2                	lw	a5,24(sp)
 25c:	4852                	lw	a6,20(sp)
 25e:	48c2                	lw	a7,16(sp)
 260:	4e32                	lw	t3,12(sp)
 262:	4ea2                	lw	t4,8(sp)
 264:	4f12                	lw	t5,4(sp)
 266:	4f82                	lw	t6,0(sp)
 268:	6121                	addi	sp,sp,64
 26a:	30200073          	mret

0000026e <main>:
  eclic_init(ECLIC_NUM_INTERRUPTS);
 26e:	05700513          	li	a0,87
 272:	2acd                	jal	464 <eclic_init>
  RCU_APB2EN |= RCU_APB2EN_PAEN | RCU_APB2EN_PBEN | RCU_APB2EN_PCEN;
 274:	400216b7          	lui	a3,0x40021
 278:	4e9c                	lw	a5,24(a3)
  GPIO_config(RLED); GPIO_config(YLED); GPIO_config(GLED);
 27a:	ff100637          	lui	a2,0xff100
 27e:	167d                	addi	a2,a2,-1
  RCU_APB2EN |= RCU_APB2EN_PAEN | RCU_APB2EN_PBEN | RCU_APB2EN_PCEN;
 280:	01c7e793          	ori	a5,a5,28
 284:	ce9c                	sw	a5,24(a3)
  GPIO_config(RLED); GPIO_config(YLED); GPIO_config(GLED);
 286:	400117b7          	lui	a5,0x40011
 28a:	c007a703          	lw	a4,-1024(a5) # 40010c00 <_stack_end+0x20008c00>
  eclic_set_vmode( USART0_IRQn );
 28e:	03800513          	li	a0,56
  GPIO_config(RLED); GPIO_config(YLED); GPIO_config(GLED);
 292:	8f71                	and	a4,a4,a2
 294:	00300637          	lui	a2,0x300
 298:	8f51                	or	a4,a4,a2
 29a:	c0e7a023          	sw	a4,-1024(a5)
 29e:	c007a703          	lw	a4,-1024(a5)
 2a2:	f1000637          	lui	a2,0xf1000
 2a6:	167d                	addi	a2,a2,-1
 2a8:	8f71                	and	a4,a4,a2
 2aa:	03000637          	lui	a2,0x3000
 2ae:	8f51                	or	a4,a4,a2
 2b0:	c0e7a023          	sw	a4,-1024(a5)
 2b4:	c007a703          	lw	a4,-1024(a5)
 2b8:	30000637          	lui	a2,0x30000
 2bc:	0712                	slli	a4,a4,0x4
 2be:	8311                	srli	a4,a4,0x4
 2c0:	8f51                	or	a4,a4,a2
 2c2:	c0e7a023          	sw	a4,-1024(a5)
  GPIO_config(SBTN); GPIO_config(RBTN);
 2c6:	c007a703          	lw	a4,-1024(a5)
  GPIO_config(UART0_RX); GPIO_config(UART0_TX);
 2ca:	767d                	lui	a2,0xfffff
 2cc:	0ff60613          	addi	a2,a2,255 # fffff0ff <_stack_end+0xdfff70ff>
  GPIO_config(SBTN); GPIO_config(RBTN);
 2d0:	9b41                	andi	a4,a4,-16
 2d2:	00476713          	ori	a4,a4,4
 2d6:	c0e7a023          	sw	a4,-1024(a5)
 2da:	c007a703          	lw	a4,-1024(a5)
 2de:	f0f77713          	andi	a4,a4,-241
 2e2:	04076713          	ori	a4,a4,64
 2e6:	c0e7a023          	sw	a4,-1024(a5)
  GPIO_config(UART0_RX); GPIO_config(UART0_TX);
 2ea:	8047a703          	lw	a4,-2044(a5)
 2ee:	8f71                	and	a4,a4,a2
 2f0:	40076713          	ori	a4,a4,1024
 2f4:	80e7a223          	sw	a4,-2044(a5)
 2f8:	8047a703          	lw	a4,-2044(a5)
 2fc:	f0f77713          	andi	a4,a4,-241
 300:	0b076713          	ori	a4,a4,176
 304:	80e7a223          	sw	a4,-2044(a5)
  RCU_APB2EN |= RCU_APB2EN_USART0EN | RCU_APB2EN_AFEN;
 308:	4e9c                	lw	a5,24(a3)
 30a:	6711                	lui	a4,0x4
 30c:	0705                	addi	a4,a4,1
 30e:	8fd9                	or	a5,a5,a4
 310:	ce9c                	sw	a5,24(a3)
  USART_BAUD(USART0) = 8000000 / 9600;
 312:	40014737          	lui	a4,0x40014
 316:	34100793          	li	a5,833
 31a:	80f72423          	sw	a5,-2040(a4) # 40013808 <_stack_end+0x2000b808>
  USART_CTL0(USART0) = USART_CTL0_UEN | USART_CTL0_REN | USART_CTL0_TEN;
 31e:	6789                	lui	a5,0x2
 320:	07b1                	addi	a5,a5,12
 322:	80f72623          	sw	a5,-2036(a4)
  eclic_set_vmode( USART0_IRQn );
 326:	2efd                	jal	724 <eclic_set_vmode>
  eclic_enable_interrupt( USART0_IRQn );
 328:	03800513          	li	a0,56
 32c:	2aa9                	jal	486 <eclic_enable_interrupt>
  eclic_global_interrupt_enable();
 32e:	300467f3          	csrrsi	a5,mstatus,8
    sleep(100000);
 332:	64e1                	lui	s1,0x18
    GPO_T(YLED);
 334:	40011437          	lui	s0,0x40011
    if( GPI_ON(SBTN) )GPO_ON(GLED); else GPO_OFF(GLED);
 338:	008009b7          	lui	s3,0x800
 33c:	08000a13          	li	s4,128
    if( GPI_ON(RBTN) )USART_CTL0(USART0) |= USART_CTL0_TBEIE;
 340:	40014937          	lui	s2,0x40014
    sleep(100000);
 344:	6a048493          	addi	s1,s1,1696 # 186a0 <CSR_MTVT2+0x17eb4>
    GPO_T(YLED);
 348:	c0c42783          	lw	a5,-1012(s0) # 40010c0c <_stack_end+0x20008c0c>
 34c:	0407c793          	xori	a5,a5,64
 350:	c0f42623          	sw	a5,-1012(s0)
    if( GPI_ON(SBTN) )GPO_ON(GLED); else GPO_OFF(GLED);
 354:	c0842783          	lw	a5,-1016(s0)
 358:	8b85                	andi	a5,a5,1
 35a:	e385                	bnez	a5,37a <CSR_MCAUSE+0x38>
 35c:	c1442823          	sw	s4,-1008(s0)
    if( GPI_ON(RBTN) )USART_CTL0(USART0) |= USART_CTL0_TBEIE;
 360:	c0842783          	lw	a5,-1016(s0)
 364:	8b89                	andi	a5,a5,2
 366:	e799                	bnez	a5,374 <CSR_MCAUSE+0x32>
 368:	80c92783          	lw	a5,-2036(s2) # 4001380c <_stack_end+0x2000b80c>
 36c:	0807e793          	ori	a5,a5,128
 370:	80f92623          	sw	a5,-2036(s2)
    sleep(100000);
 374:	8526                	mv	a0,s1
 376:	3d95                	jal	1ea <sleep>
    GPO_T(YLED);
 378:	bfc1                	j	348 <CSR_MCAUSE+0x6>
    if( GPI_ON(SBTN) )GPO_ON(GLED); else GPO_OFF(GLED);
 37a:	c1342823          	sw	s3,-1008(s0)
 37e:	b7cd                	j	360 <CSR_MCAUSE+0x1e>

00000380 <pmp_open_all_space>:
#include "n200_func.h"

    // Configure PMP to make all the address space accesable and executable
void pmp_open_all_space(){
    // Config entry0 addr to all 1s to make the range cover all space
    asm volatile ("li x6, 0xffffffff":::"x6");
 380:	fff00313          	li	t1,-1
    asm volatile ("csrw pmpaddr0, x6":::);
 384:	3b031073          	csrw	pmpaddr0,t1
    // Config entry0 cfg to make it NAPOT address mode, and R/W/X okay
    asm volatile ("li x6, 0x7f":::"x6");
 388:	07f00313          	li	t1,127
    asm volatile ("csrw pmpcfg0, x6":::);
 38c:	3a031073          	csrw	pmpcfg0,t1
}
 390:	8082                	ret

00000392 <switch_m2u_mode>:

void switch_m2u_mode(){
    clear_csr (mstatus,MSTATUS_MPP);
 392:	6789                	lui	a5,0x2
 394:	80078793          	addi	a5,a5,-2048 # 1800 <CSR_MTVT2+0x1014>
 398:	3007b7f3          	csrrc	a5,mstatus,a5
    //printf("\nIn the m2u function, the mstatus is 0x%x\n", read_csr(mstatus));
    //printf("\nIn the m2u function, the mepc is 0x%x\n", read_csr(mepc));
    asm volatile ("la x6, 1f    ":::"x6");
 39c:	00000317          	auipc	t1,0x0
 3a0:	01030313          	addi	t1,t1,16 # 3ac <switch_m2u_mode+0x1a>
    asm volatile ("csrw mepc, x6":::);
 3a4:	34131073          	csrw	mepc,t1
    asm volatile ("mret":::);
 3a8:	30200073          	mret
    asm volatile ("1:":::);
} 
 3ac:	8082                	ret

000003ae <mtime_lo>:

uint32_t mtime_lo(void)
{
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME);
 3ae:	d10007b7          	lui	a5,0xd1000
 3b2:	4388                	lw	a0,0(a5)
}
 3b4:	8082                	ret

000003b6 <mtime_hi>:


uint32_t mtime_hi(void)
{
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME + 4);
 3b6:	d10007b7          	lui	a5,0xd1000
 3ba:	43c8                	lw	a0,4(a5)
}
 3bc:	8082                	ret

000003be <get_timer_value>:
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME + 4);
 3be:	d10007b7          	lui	a5,0xd1000
 3c2:	43d8                	lw	a4,4(a5)
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME);
 3c4:	4388                	lw	a0,0(a5)
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME + 4);
 3c6:	43cc                	lw	a1,4(a5)
uint64_t get_timer_value()
{
  while (1) {
    uint32_t hi = mtime_hi();
    uint32_t lo = mtime_lo();
    if (hi == mtime_hi())
 3c8:	fee59de3          	bne	a1,a4,3c2 <get_timer_value+0x4>
      return ((uint64_t)hi << 32) | lo;
  }
}
 3cc:	8082                	ret

000003ce <get_timer_freq>:

uint32_t get_timer_freq()
{
  return TIMER_FREQ;
 3ce:	20000797          	auipc	a5,0x20000
 3d2:	c3278793          	addi	a5,a5,-974 # 20000000 <_data_end>
 3d6:	4388                	lw	a0,0(a5)
}
 3d8:	8109                	srli	a0,a0,0x2
 3da:	8082                	ret

000003dc <get_instret_value>:

uint64_t get_instret_value()
{
  while (1) {
    uint32_t hi = read_csr(minstreth);
 3dc:	b82025f3          	csrr	a1,minstreth
    uint32_t lo = read_csr(minstret);
 3e0:	b0202573          	csrr	a0,minstret
    if (hi == read_csr(minstreth))
 3e4:	b82027f3          	csrr	a5,minstreth
 3e8:	fef59ae3          	bne	a1,a5,3dc <get_instret_value>
      return ((uint64_t)hi << 32) | lo;
  }
}
 3ec:	8082                	ret

000003ee <get_cycle_value>:

uint64_t get_cycle_value()
{
  while (1) {
    uint32_t hi = read_csr(mcycleh);
 3ee:	b80025f3          	csrr	a1,mcycleh
    uint32_t lo = read_csr(mcycle);
 3f2:	b0002573          	csrr	a0,mcycle
    if (hi == read_csr(mcycleh))
 3f6:	b80027f3          	csrr	a5,mcycleh
 3fa:	fef59ae3          	bne	a1,a5,3ee <get_cycle_value>
      return ((uint64_t)hi << 32) | lo;
  }
}
 3fe:	8082                	ret

00000400 <measure_cpu_freq>:
  return TIMER_FREQ;
 400:	20000797          	auipc	a5,0x20000
 404:	c0078793          	addi	a5,a5,-1024 # 20000000 <_data_end>
 408:	439c                	lw	a5,0(a5)
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME);
 40a:	d10006b7          	lui	a3,0xd1000
  return TIMER_FREQ;
 40e:	0027d613          	srli	a2,a5,0x2
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME);
 412:	d10007b7          	lui	a5,0xd1000
 416:	439c                	lw	a5,0(a5)
 418:	4298                	lw	a4,0(a3)

  // Don't start measuruing until we see an mtime tick
  uint32_t tmp = mtime_lo();
  do {
    start_mtime = mtime_lo();
  } while (start_mtime == tmp);
 41a:	fee78fe3          	beq	a5,a4,418 <measure_cpu_freq+0x18>

  uint32_t start_mcycle = read_csr(mcycle);
 41e:	b00025f3          	csrr	a1,mcycle
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME);
 422:	d1000837          	lui	a6,0xd1000
 426:	00082783          	lw	a5,0(a6) # d1000000 <_stack_end+0xb0ff8000>

  do {
    delta_mtime = mtime_lo() - start_mtime;
 42a:	40e786b3          	sub	a3,a5,a4
  } while (delta_mtime < n);
 42e:	fea6ece3          	bltu	a3,a0,426 <measure_cpu_freq+0x26>

  uint32_t delta_mcycle = read_csr(mcycle) - start_mcycle;
 432:	b0002773          	csrr	a4,mcycle
 436:	40b707b3          	sub	a5,a4,a1

  return (delta_mcycle / delta_mtime) * mtime_freq
         + ((delta_mcycle % delta_mtime) * mtime_freq) / delta_mtime;
 43a:	02d7f533          	remu	a0,a5,a3
  return (delta_mcycle / delta_mtime) * mtime_freq
 43e:	02d7d7b3          	divu	a5,a5,a3
         + ((delta_mcycle % delta_mtime) * mtime_freq) / delta_mtime;
 442:	02c50533          	mul	a0,a0,a2
 446:	02d55533          	divu	a0,a0,a3
  return (delta_mcycle / delta_mtime) * mtime_freq
 44a:	02c787b3          	mul	a5,a5,a2
}
 44e:	953e                	add	a0,a0,a5
 450:	8082                	ret

00000452 <get_cpu_freq>:

uint32_t get_cpu_freq()
{
 452:	1141                	addi	sp,sp,-16
  uint32_t cpu_freq;

  // warm up
  measure_cpu_freq(1);
 454:	4505                	li	a0,1
{
 456:	c606                	sw	ra,12(sp)
  measure_cpu_freq(1);
 458:	3765                	jal	400 <measure_cpu_freq>
  // measure for real
  cpu_freq = measure_cpu_freq(100);

  return cpu_freq;
}
 45a:	40b2                	lw	ra,12(sp)
  cpu_freq = measure_cpu_freq(100);
 45c:	06400513          	li	a0,100
}
 460:	0141                	addi	sp,sp,16
  cpu_freq = measure_cpu_freq(100);
 462:	bf79                	j	400 <measure_cpu_freq>

00000464 <eclic_init>:
{

  typedef volatile uint32_t vuint32_t;

  //clear cfg register 
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_CFG_OFFSET)=0;
 464:	d20007b7          	lui	a5,0xd2000
 468:	00078023          	sb	zero,0(a5) # d2000000 <_stack_end+0xb1ff8000>

  //clear minthresh register 
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_MTH_OFFSET)=0;
 46c:	000785a3          	sb	zero,11(a5)

  //clear all IP/IE/ATTR/CTRL bits for all interrupt sources
  vuint32_t * ptr;

  vuint32_t * base = (vuint32_t*)(ECLIC_ADDR_BASE + ECLIC_INT_IP_OFFSET);
  vuint32_t * upper = (vuint32_t*)(base + num_irq*4);
 470:	0512                	slli	a0,a0,0x4
 472:	d20017b7          	lui	a5,0xd2001
 476:	953e                	add	a0,a0,a5

  for (ptr = base; ptr < upper; ptr=ptr+4){
 478:	00a7e363          	bltu	a5,a0,47e <eclic_init+0x1a>
    *ptr = 0;
  }
}
 47c:	8082                	ret
    *ptr = 0;
 47e:	0007a023          	sw	zero,0(a5) # d2001000 <_stack_end+0xb1ff9000>
  for (ptr = base; ptr < upper; ptr=ptr+4){
 482:	07c1                	addi	a5,a5,16
 484:	bfd5                	j	478 <eclic_init+0x14>

00000486 <eclic_enable_interrupt>:



void eclic_enable_interrupt (uint32_t source) {
    *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_IE_OFFSET+source*4) = 1;
 486:	d20017b7          	lui	a5,0xd2001
 48a:	0785                	addi	a5,a5,1
 48c:	050a                	slli	a0,a0,0x2
 48e:	953e                	add	a0,a0,a5
 490:	4785                	li	a5,1
 492:	00f50023          	sb	a5,0(a0)
}
 496:	8082                	ret

00000498 <eclic_disable_interrupt>:

void eclic_disable_interrupt (uint32_t source){
    *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_IE_OFFSET+source*4) = 0;
 498:	d20017b7          	lui	a5,0xd2001
 49c:	050a                	slli	a0,a0,0x2
 49e:	0785                	addi	a5,a5,1
 4a0:	953e                	add	a0,a0,a5
 4a2:	00050023          	sb	zero,0(a0)
}
 4a6:	8082                	ret

000004a8 <eclic_set_pending>:

void eclic_set_pending(uint32_t source){
    *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_IP_OFFSET+source*4) = 1;
 4a8:	348007b7          	lui	a5,0x34800
 4ac:	40078793          	addi	a5,a5,1024 # 34800400 <_stack_end+0x147f8400>
 4b0:	953e                	add	a0,a0,a5
 4b2:	050a                	slli	a0,a0,0x2
 4b4:	4785                	li	a5,1
 4b6:	00f50023          	sb	a5,0(a0)
}
 4ba:	8082                	ret

000004bc <eclic_clear_pending>:

void eclic_clear_pending(uint32_t source){
    *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_IP_OFFSET+source*4) = 0;
 4bc:	348007b7          	lui	a5,0x34800
 4c0:	40078793          	addi	a5,a5,1024 # 34800400 <_stack_end+0x147f8400>
 4c4:	953e                	add	a0,a0,a5
 4c6:	050a                	slli	a0,a0,0x2
 4c8:	00050023          	sb	zero,0(a0)
}
 4cc:	8082                	ret

000004ce <eclic_set_intctrl>:

void eclic_set_intctrl (uint32_t source, uint8_t intctrl){
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4) = intctrl;
 4ce:	d20017b7          	lui	a5,0xd2001
 4d2:	050a                	slli	a0,a0,0x2
 4d4:	078d                	addi	a5,a5,3
 4d6:	953e                	add	a0,a0,a5
 4d8:	00b50023          	sb	a1,0(a0)
}
 4dc:	8082                	ret

000004de <eclic_get_intctrl>:

uint8_t eclic_get_intctrl  (uint32_t source){
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
 4de:	d20017b7          	lui	a5,0xd2001
 4e2:	078d                	addi	a5,a5,3
 4e4:	050a                	slli	a0,a0,0x2
 4e6:	953e                	add	a0,a0,a5
 4e8:	00054503          	lbu	a0,0(a0)
}
 4ec:	8082                	ret

000004ee <eclic_set_intattr>:

void eclic_set_intattr (uint32_t source, uint8_t intattr){
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4) = intattr;
 4ee:	d20017b7          	lui	a5,0xd2001
 4f2:	050a                	slli	a0,a0,0x2
 4f4:	0789                	addi	a5,a5,2
 4f6:	953e                	add	a0,a0,a5
 4f8:	00b50023          	sb	a1,0(a0)
}
 4fc:	8082                	ret

000004fe <eclic_get_intattr>:

uint8_t eclic_get_intattr  (uint32_t source){
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4);
 4fe:	d20017b7          	lui	a5,0xd2001
 502:	0789                	addi	a5,a5,2
 504:	050a                	slli	a0,a0,0x2
 506:	953e                	add	a0,a0,a5
 508:	00054503          	lbu	a0,0(a0)
}
 50c:	8082                	ret

0000050e <eclic_set_cliccfg>:

void eclic_set_cliccfg (uint8_t cliccfg){
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_CFG_OFFSET) = cliccfg;
 50e:	d20007b7          	lui	a5,0xd2000
 512:	00a78023          	sb	a0,0(a5) # d2000000 <_stack_end+0xb1ff8000>
}
 516:	8082                	ret

00000518 <eclic_get_cliccfg>:

uint8_t eclic_get_cliccfg  (){
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_CFG_OFFSET);
 518:	d20007b7          	lui	a5,0xd2000
 51c:	0007c503          	lbu	a0,0(a5) # d2000000 <_stack_end+0xb1ff8000>
}
 520:	8082                	ret

00000522 <eclic_set_mth>:

void eclic_set_mth (uint8_t mth){
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_MTH_OFFSET) = mth;
 522:	d20007b7          	lui	a5,0xd2000
 526:	00a785a3          	sb	a0,11(a5) # d200000b <_stack_end+0xb1ff800b>
}
 52a:	8082                	ret

0000052c <eclic_get_mth>:

uint8_t eclic_get_mth  (){
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_MTH_OFFSET);
 52c:	d20007b7          	lui	a5,0xd2000
 530:	00b7c503          	lbu	a0,11(a5) # d200000b <_stack_end+0xb1ff800b>
}
 534:	8082                	ret

00000536 <eclic_set_nlbits>:
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_CFG_OFFSET);
 536:	d2000737          	lui	a4,0xd2000
 53a:	00074783          	lbu	a5,0(a4) # d2000000 <_stack_end+0xb1ff8000>

//sets nlbits 
void eclic_set_nlbits(uint8_t nlbits) {
  //shift nlbits to correct position
  uint8_t nlbits_shifted = nlbits << ECLIC_CFG_NLBITS_LSB;
 53e:	0506                	slli	a0,a0,0x1

  //read the current cliccfg 
  uint8_t old_cliccfg = eclic_get_cliccfg();
  uint8_t new_cliccfg = (old_cliccfg & (~ECLIC_CFG_NLBITS_MASK)) | (ECLIC_CFG_NLBITS_MASK & nlbits_shifted); 
 540:	8979                	andi	a0,a0,30
 542:	0e17f793          	andi	a5,a5,225
 546:	8d5d                	or	a0,a0,a5
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_CFG_OFFSET) = cliccfg;
 548:	00a70023          	sb	a0,0(a4)

  eclic_set_cliccfg(new_cliccfg);
}
 54c:	8082                	ret

0000054e <eclic_get_nlbits>:
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_CFG_OFFSET);
 54e:	d20007b7          	lui	a5,0xd2000
 552:	0007c503          	lbu	a0,0(a5) # d2000000 <_stack_end+0xb1ff8000>

//get nlbits 
uint8_t eclic_get_nlbits(void) {
  //extract nlbits
  uint8_t nlbits = eclic_get_cliccfg();
  nlbits = (nlbits & ECLIC_CFG_NLBITS_MASK) >> ECLIC_CFG_NLBITS_LSB;
 556:	8105                	srli	a0,a0,0x1
  return nlbits;
}
 558:	893d                	andi	a0,a0,15
 55a:	8082                	ret

0000055c <eclic_set_irq_lvl>:

//sets an interrupt level based encoding of nlbits and ECLICINTCTLBITS
void eclic_set_irq_lvl(uint32_t source, uint8_t lvl) {
 55c:	1101                	addi	sp,sp,-32
 55e:	cc22                	sw	s0,24(sp)
 560:	c62e                	sw	a1,12(sp)
 562:	ce06                	sw	ra,28(sp)
 564:	842a                	mv	s0,a0
  //extract nlbits
  uint8_t nlbits = eclic_get_nlbits();
 566:	37e5                	jal	54e <eclic_get_nlbits>
  if (nlbits > ECLICINTCTLBITS) {
    nlbits = ECLICINTCTLBITS;
  }

  //shift lvl right to mask off unused bits
  lvl = lvl >> (8-nlbits);
 568:	4791                	li	a5,4
 56a:	45b2                	lw	a1,12(sp)
 56c:	4711                	li	a4,4
 56e:	00a7e363          	bltu	a5,a0,574 <eclic_set_irq_lvl+0x18>
 572:	872a                	mv	a4,a0
 574:	0ff77693          	andi	a3,a4,255
 578:	47a1                	li	a5,8
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
 57a:	d2001537          	lui	a0,0xd2001
  lvl = lvl >> (8-nlbits);
 57e:	8f95                	sub	a5,a5,a3
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
 580:	040a                	slli	s0,s0,0x2
 582:	050d                	addi	a0,a0,3
 584:	9522                	add	a0,a0,s0
  lvl = lvl >> (8-nlbits);
 586:	40f5d5b3          	sra	a1,a1,a5
  //shift lvl into correct bit position
  lvl = lvl << (8-nlbits);
 58a:	00f595b3          	sll	a1,a1,a5
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
 58e:	00054783          	lbu	a5,0(a0) # d2001000 <_stack_end+0xb1ff9000>
 
  //write to clicintctrl
  uint8_t current_intctrl = eclic_get_intctrl(source);
  //shift intctrl left to mask off unused bits
  current_intctrl = current_intctrl << nlbits;
 592:	00e797b3          	sll	a5,a5,a4
  //shift intctrl into correct bit position
  current_intctrl = current_intctrl >> nlbits;
 596:	0ff7f793          	andi	a5,a5,255
 59a:	40e7d7b3          	sra	a5,a5,a4

  eclic_set_intctrl(source, (current_intctrl | lvl));
 59e:	8fcd                	or	a5,a5,a1
 5a0:	0ff7f793          	andi	a5,a5,255
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4) = intctrl;
 5a4:	00f50023          	sb	a5,0(a0)
}
 5a8:	40f2                	lw	ra,28(sp)
 5aa:	4462                	lw	s0,24(sp)
 5ac:	6105                	addi	sp,sp,32
 5ae:	8082                	ret

000005b0 <eclic_get_irq_lvl>:

//gets an interrupt level based encoding of nlbits
uint8_t eclic_get_irq_lvl(uint32_t source) {
 5b0:	1141                	addi	sp,sp,-16
 5b2:	c422                	sw	s0,8(sp)
 5b4:	c606                	sw	ra,12(sp)
 5b6:	842a                	mv	s0,a0
  //extract nlbits
  uint8_t nlbits = eclic_get_nlbits();
 5b8:	3f59                	jal	54e <eclic_get_nlbits>
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
 5ba:	d20017b7          	lui	a5,0xd2001
 5be:	078d                	addi	a5,a5,3
 5c0:	040a                	slli	s0,s0,0x2
 5c2:	943e                	add	s0,s0,a5
 5c4:	00044783          	lbu	a5,0(s0)
  }

  uint8_t intctrl = eclic_get_intctrl(source);

  //shift intctrl
  intctrl = intctrl >> (8-nlbits);
 5c8:	4691                	li	a3,4
 5ca:	4711                	li	a4,4
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
 5cc:	0ff7f793          	andi	a5,a5,255
  intctrl = intctrl >> (8-nlbits);
 5d0:	00a6e463          	bltu	a3,a0,5d8 <eclic_get_irq_lvl+0x28>
 5d4:	0ff57713          	andi	a4,a0,255
 5d8:	4521                	li	a0,8
 5da:	8d19                	sub	a0,a0,a4
  //shift intctrl
  uint8_t lvl = intctrl << (8-nlbits);

  return lvl;
}
 5dc:	40b2                	lw	ra,12(sp)
 5de:	4422                	lw	s0,8(sp)
  intctrl = intctrl >> (8-nlbits);
 5e0:	40a7d7b3          	sra	a5,a5,a0
  uint8_t lvl = intctrl << (8-nlbits);
 5e4:	00a79533          	sll	a0,a5,a0
}
 5e8:	0ff57513          	andi	a0,a0,255
 5ec:	0141                	addi	sp,sp,16
 5ee:	8082                	ret

000005f0 <eclic_set_irq_lvl_abs>:

void eclic_set_irq_lvl_abs(uint32_t source, uint8_t lvl_abs) {
 5f0:	1141                	addi	sp,sp,-16
 5f2:	c422                	sw	s0,8(sp)
 5f4:	c226                	sw	s1,4(sp)
 5f6:	c606                	sw	ra,12(sp)
 5f8:	842a                	mv	s0,a0
 5fa:	84ae                	mv	s1,a1
  //extract nlbits
  uint8_t nlbits = eclic_get_nlbits();
 5fc:	3f89                	jal	54e <eclic_get_nlbits>
  if (nlbits > ECLICINTCTLBITS) {
    nlbits = ECLICINTCTLBITS;
  }

  //shift lvl_abs into correct bit position
  uint8_t lvl = lvl_abs << (8-nlbits);
 5fe:	4791                	li	a5,4
 600:	4711                	li	a4,4
 602:	00a7e363          	bltu	a5,a0,608 <eclic_set_irq_lvl_abs+0x18>
 606:	872a                	mv	a4,a0
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
 608:	d2001537          	lui	a0,0xd2001
 60c:	040a                	slli	s0,s0,0x2
 60e:	050d                	addi	a0,a0,3
 610:	9522                	add	a0,a0,s0
 612:	00054783          	lbu	a5,0(a0) # d2001000 <_stack_end+0xb1ff9000>
  uint8_t lvl = lvl_abs << (8-nlbits);
 616:	0ff77693          	andi	a3,a4,255
 61a:	45a1                	li	a1,8
 
  //write to clicintctrl
  uint8_t current_intctrl = eclic_get_intctrl(source);
  //shift intctrl left to mask off unused bits
  current_intctrl = current_intctrl << nlbits;
 61c:	00e797b3          	sll	a5,a5,a4
  //shift intctrl into correct bit position
  current_intctrl = current_intctrl >> nlbits;
 620:	0ff7f793          	andi	a5,a5,255
  uint8_t lvl = lvl_abs << (8-nlbits);
 624:	8d95                	sub	a1,a1,a3
 626:	00b494b3          	sll	s1,s1,a1
  current_intctrl = current_intctrl >> nlbits;
 62a:	40e7d7b3          	sra	a5,a5,a4

  eclic_set_intctrl(source, (current_intctrl | lvl));
 62e:	8fc5                	or	a5,a5,s1
 630:	0ff7f793          	andi	a5,a5,255
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4) = intctrl;
 634:	00f50023          	sb	a5,0(a0)
}
 638:	40b2                	lw	ra,12(sp)
 63a:	4422                	lw	s0,8(sp)
 63c:	4492                	lw	s1,4(sp)
 63e:	0141                	addi	sp,sp,16
 640:	8082                	ret

00000642 <eclic_get_irq_lvl_abs>:

uint8_t eclic_get_irq_lvl_abs(uint32_t source) {
 642:	1141                	addi	sp,sp,-16
 644:	c422                	sw	s0,8(sp)
 646:	c606                	sw	ra,12(sp)
 648:	842a                	mv	s0,a0
  //extract nlbits
  uint8_t nlbits = eclic_get_nlbits();
 64a:	3711                	jal	54e <eclic_get_nlbits>
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
 64c:	d20017b7          	lui	a5,0xd2001
 650:	078d                	addi	a5,a5,3
 652:	040a                	slli	s0,s0,0x2
 654:	943e                	add	s0,s0,a5
 656:	00044783          	lbu	a5,0(s0)
  }

  uint8_t intctrl = eclic_get_intctrl(source);

  //shift intctrl
  intctrl = intctrl >> (8-nlbits);
 65a:	4691                	li	a3,4
 65c:	4711                	li	a4,4
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
 65e:	0ff7f793          	andi	a5,a5,255
  intctrl = intctrl >> (8-nlbits);
 662:	00a6e463          	bltu	a3,a0,66a <eclic_get_irq_lvl_abs+0x28>
 666:	0ff57713          	andi	a4,a0,255
 66a:	4521                	li	a0,8
  //shift intctrl
  uint8_t lvl_abs = intctrl;

  return lvl_abs;
}
 66c:	40b2                	lw	ra,12(sp)
 66e:	4422                	lw	s0,8(sp)
  intctrl = intctrl >> (8-nlbits);
 670:	40e50733          	sub	a4,a0,a4
 674:	40e7d533          	sra	a0,a5,a4
}
 678:	0ff57513          	andi	a0,a0,255
 67c:	0141                	addi	sp,sp,16
 67e:	8082                	ret

00000680 <eclic_set_irq_priority>:

//sets an interrupt priority based encoding of nlbits and ECLICINTCTLBITS
uint8_t eclic_set_irq_priority(uint32_t source, uint8_t priority) {
 680:	1101                	addi	sp,sp,-32
 682:	cc22                	sw	s0,24(sp)
 684:	c62e                	sw	a1,12(sp)
 686:	ce06                	sw	ra,28(sp)
 688:	842a                	mv	s0,a0
	//extract nlbits
	uint8_t nlbits = eclic_get_nlbits();
 68a:	35d1                	jal	54e <eclic_get_nlbits>
	if (nlbits >= ECLICINTCTLBITS) {
 68c:	478d                	li	a5,3
		nlbits = ECLICINTCTLBITS;
		return 0;
 68e:	4581                	li	a1,0
	if (nlbits >= ECLICINTCTLBITS) {
 690:	02a7e963          	bltu	a5,a0,6c2 <eclic_set_irq_priority+0x42>
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
 694:	d2001737          	lui	a4,0xd2001
 698:	040a                	slli	s0,s0,0x2
 69a:	070d                	addi	a4,a4,3
 69c:	9722                	add	a4,a4,s0
 69e:	00074783          	lbu	a5,0(a4) # d2001000 <_stack_end+0xb1ff9000>
	}

	//shift priority into correct bit position
	priority = priority << (8 - ECLICINTCTLBITS);
 6a2:	45b2                	lw	a1,12(sp)

	//write to eclicintctrl
	uint8_t current_intctrl = eclic_get_intctrl(source);
	//shift intctrl right to mask off unused bits
	current_intctrl = current_intctrl >> (8-nlbits);
 6a4:	46a1                	li	a3,8
 6a6:	40a68533          	sub	a0,a3,a0
	priority = priority << (8 - ECLICINTCTLBITS);
 6aa:	0592                	slli	a1,a1,0x4
	current_intctrl = current_intctrl >> (8-nlbits);
 6ac:	40a7d7b3          	sra	a5,a5,a0
	priority = priority << (8 - ECLICINTCTLBITS);
 6b0:	0ff5f593          	andi	a1,a1,255
	//shift intctrl into correct bit position
	current_intctrl = current_intctrl << (8-nlbits);
 6b4:	00a797b3          	sll	a5,a5,a0

	eclic_set_intctrl(source, (current_intctrl | priority));
 6b8:	8fcd                	or	a5,a5,a1
 6ba:	0ff7f793          	andi	a5,a5,255
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4) = intctrl;
 6be:	00f70023          	sb	a5,0(a4)

	return priority;
}
 6c2:	40f2                	lw	ra,28(sp)
 6c4:	4462                	lw	s0,24(sp)
 6c6:	852e                	mv	a0,a1
 6c8:	6105                	addi	sp,sp,32
 6ca:	8082                	ret

000006cc <eclic_get_irq_priority>:

//gets an interrupt priority based encoding of nlbits
uint8_t eclic_get_irq_priority(uint32_t source) {
 6cc:	1141                	addi	sp,sp,-16
 6ce:	c422                	sw	s0,8(sp)
 6d0:	c606                	sw	ra,12(sp)
 6d2:	842a                	mv	s0,a0
	//extract nlbits
	uint8_t nlbits = eclic_get_nlbits();
 6d4:	3dad                	jal	54e <eclic_get_nlbits>
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
 6d6:	d20017b7          	lui	a5,0xd2001
 6da:	078d                	addi	a5,a5,3
 6dc:	040a                	slli	s0,s0,0x2
 6de:	943e                	add	s0,s0,a5
 6e0:	00044783          	lbu	a5,0(s0)
	}

	uint8_t intctrl = eclic_get_intctrl(source);

	//shift intctrl
	intctrl = intctrl << nlbits;
 6e4:	4711                	li	a4,4
 6e6:	4691                	li	a3,4
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
 6e8:	0ff7f793          	andi	a5,a5,255
	intctrl = intctrl << nlbits;
 6ec:	00a76363          	bltu	a4,a0,6f2 <eclic_get_irq_priority+0x26>
 6f0:	86aa                	mv	a3,a0
 6f2:	00d79533          	sll	a0,a5,a3
	//shift intctrl
	uint8_t priority = intctrl >> (nlbits+(8 - ECLICINTCTLBITS));

	return priority;
}
 6f6:	40b2                	lw	ra,12(sp)
 6f8:	4422                	lw	s0,8(sp)
	intctrl = intctrl << nlbits;
 6fa:	0ff6f713          	andi	a4,a3,255
	uint8_t priority = intctrl >> (nlbits+(8 - ECLICINTCTLBITS));
 6fe:	0ff57513          	andi	a0,a0,255
 702:	00470793          	addi	a5,a4,4
 706:	40f55533          	sra	a0,a0,a5
}
 70a:	0ff57513          	andi	a0,a0,255
 70e:	0141                	addi	sp,sp,16
 710:	8082                	ret

00000712 <eclic_mode_enable>:

void eclic_mode_enable() {
  uint32_t mtvec_value = read_csr(mtvec);
 712:	305027f3          	csrr	a5,mtvec
  mtvec_value = mtvec_value & 0xFFFFFFC0;
 716:	fc07f793          	andi	a5,a5,-64
  mtvec_value = mtvec_value | 0x00000003;
 71a:	0037e793          	ori	a5,a5,3
  write_csr(mtvec,mtvec_value);
 71e:	30579073          	csrw	mtvec,a5
}
 722:	8082                	ret

00000724 <eclic_set_vmode>:
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4);
 724:	d20017b7          	lui	a5,0xd2001
 728:	0789                	addi	a5,a5,2
 72a:	050a                	slli	a0,a0,0x2
 72c:	953e                	add	a0,a0,a5
 72e:	00054783          	lbu	a5,0(a0)
//sets vector-mode or non-vector mode 
void eclic_set_vmode(uint32_t source) {
  //read the current attr 
  uint8_t old_intattr = eclic_get_intattr(source);
      // Keep other bits unchanged and only set the LSB bit
  uint8_t new_intattr = (old_intattr | 0x1); 
 732:	0017e793          	ori	a5,a5,1
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4) = intattr;
 736:	00f50023          	sb	a5,0(a0)

  eclic_set_intattr(source,new_intattr);
}
 73a:	8082                	ret

0000073c <eclic_set_nonvmode>:
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4);
 73c:	d20017b7          	lui	a5,0xd2001
 740:	0789                	addi	a5,a5,2
 742:	050a                	slli	a0,a0,0x2
 744:	953e                	add	a0,a0,a5
 746:	00054783          	lbu	a5,0(a0)

void eclic_set_nonvmode(uint32_t source) {
  //read the current attr 
  uint8_t old_intattr = eclic_get_intattr(source);
      // Keep other bits unchanged and only clear the LSB bit
  uint8_t new_intattr = (old_intattr & (~0x1));
 74a:	0fe7f793          	andi	a5,a5,254
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4) = intattr;
 74e:	00f50023          	sb	a5,0(a0)

  eclic_set_intattr(source,new_intattr);
}
 752:	8082                	ret

00000754 <eclic_set_level_trig>:
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4);
 754:	d20017b7          	lui	a5,0xd2001
 758:	0789                	addi	a5,a5,2
 75a:	050a                	slli	a0,a0,0x2
 75c:	953e                	add	a0,a0,a5
 75e:	00054783          	lbu	a5,0(a0)

void eclic_set_level_trig(uint32_t source) {
  //read the current attr 
  uint8_t old_intattr = eclic_get_intattr(source);
      // Keep other bits unchanged and only clear the bit 1
  uint8_t new_intattr = (old_intattr & (~0x2));
 762:	0fd7f793          	andi	a5,a5,253
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4) = intattr;
 766:	00f50023          	sb	a5,0(a0)

  eclic_set_intattr(source,new_intattr);
}
 76a:	8082                	ret

0000076c <eclic_set_posedge_trig>:
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4);
 76c:	d20017b7          	lui	a5,0xd2001
 770:	0789                	addi	a5,a5,2
 772:	050a                	slli	a0,a0,0x2
 774:	953e                	add	a0,a0,a5
 776:	00054783          	lbu	a5,0(a0)
  //read the current attr 
  uint8_t old_intattr = eclic_get_intattr(source);
      // Keep other bits unchanged and only set the bit 1
  uint8_t new_intattr = (old_intattr | 0x2);
      // Keep other bits unchanged and only clear the bit 2
  new_intattr = (old_intattr & (~0x4));
 77a:	0fb7f793          	andi	a5,a5,251
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4) = intattr;
 77e:	00f50023          	sb	a5,0(a0)

  eclic_set_intattr(source,new_intattr);
}
 782:	8082                	ret

00000784 <eclic_set_negedge_trig>:
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4);
 784:	d20017b7          	lui	a5,0xd2001
 788:	0789                	addi	a5,a5,2
 78a:	050a                	slli	a0,a0,0x2
 78c:	953e                	add	a0,a0,a5
 78e:	00054783          	lbu	a5,0(a0)
  //read the current attr 
  uint8_t old_intattr = eclic_get_intattr(source);
      // Keep other bits unchanged and only set the bit 1
  uint8_t new_intattr = (old_intattr | 0x2);
      // Keep other bits unchanged and only set the bit 2
  new_intattr = (old_intattr | 0x4);
 792:	0047e793          	ori	a5,a5,4
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4) = intattr;
 796:	00f50023          	sb	a5,0(a0)

  eclic_set_intattr(source,new_intattr);
}
 79a:	8082                	ret

Disassembly of section .sdata:

20000000 <SystemCoreClock>:
20000000:	1200                	addi	s0,sp,288
20000002:	007a                	c.slli	zero,0x1e

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	047a                	slli	s0,s0,0x1e
       2:	0000                	unimp
       4:	0004                	0x4
       6:	0000                	unimp
       8:	0000                	unimp
       a:	0104                	addi	s1,sp,128
       c:	03f2                	slli	t2,t2,0x1c
       e:	0000                	unimp
      10:	3a0c                	fld	fa1,48(a2)
      12:	e3000003          	lb	zero,-464(zero) # fffffe30 <_stack_end+0xdfff7e30>
      16:	0002                	c.slli64	zero
      18:	5000                	lw	s0,32(s0)
	...
      22:	0000                	unimp
      24:	0200                	addi	s0,sp,256
      26:	034a                	slli	t1,t1,0x12
      28:	0000                	unimp
      2a:	01c40407          	0x1c40407
      2e:	0000                	unimp
      30:	6004                	flw	fs1,0(s0)
      32:	c40e                	sw	gp,8(sp)
      34:	0001                	nop
      36:	0300                	addi	s0,sp,384
      38:	04ec                	addi	a1,sp,588
      3a:	0000                	unimp
      3c:	0300                	addi	s0,sp,384
      3e:	035c                	addi	a5,sp,388
      40:	0000                	unimp
      42:	02150303          	lb	t1,33(a0)
      46:	0000                	unimp
      48:	04710307          	0x4710307
      4c:	0000                	unimp
      4e:	0311                	addi	t1,t1,4
      50:	03c5                	addi	t2,t2,17
      52:	0000                	unimp
      54:	0312                	slli	t1,t1,0x4
      56:	04ca                	slli	s1,s1,0x12
      58:	0000                	unimp
      5a:	01470313          	addi	t1,a4,20
      5e:	0000                	unimp
      60:	0314                	addi	a3,sp,384
      62:	0069                	c.nop	26
      64:	0000                	unimp
      66:	0315                	addi	t1,t1,5
      68:	00000193          	li	gp,0
      6c:	0316                	slli	t1,t1,0x5
      6e:	01a8                	addi	a0,sp,200
      70:	0000                	unimp
      72:	01d30317          	auipc	t1,0x1d30
      76:	0000                	unimp
      78:	0318                	addi	a4,sp,384
      7a:	02a0                	addi	s0,sp,328
      7c:	0000                	unimp
      7e:	0319                	addi	t1,t1,6
      80:	005e                	c.slli	zero,0x17
      82:	0000                	unimp
      84:	031a                	slli	t1,t1,0x6
      86:	0295                	addi	t0,t0,5
      88:	0000                	unimp
      8a:	04aa031b          	0x4aa031b
      8e:	0000                	unimp
      90:	031c                	addi	a5,sp,384
      92:	0048                	addi	a0,sp,4
      94:	0000                	unimp
      96:	031d                	addi	t1,t1,7
      98:	00aa                	slli	ra,ra,0xa
      9a:	0000                	unimp
      9c:	031e                	slli	t1,t1,0x7
      9e:	0035                	c.nop	13
      a0:	0000                	unimp
      a2:	031f 026b 0000      	0x26b031f
      a8:	0320                	addi	s0,sp,392
      aa:	01c0                	addi	s0,sp,196
      ac:	0000                	unimp
      ae:	0321                	addi	t1,t1,8
      b0:	0000                	unimp
      b2:	0000                	unimp
      b4:	0322                	slli	t1,t1,0x8
      b6:	0258                	addi	a4,sp,260
      b8:	0000                	unimp
      ba:	04fe0323          	sb	a5,70(t3)
      be:	0000                	unimp
      c0:	0324                	addi	s1,sp,392
      c2:	0075                	c.nop	29
      c4:	0000                	unimp
      c6:	0325                	addi	t1,t1,9
      c8:	0150                	addi	a2,sp,132
      ca:	0000                	unimp
      cc:	0326                	slli	t1,t1,0x9
      ce:	0185                	addi	gp,gp,1
      d0:	0000                	unimp
      d2:	015d0327          	0x15d0327
      d6:	0000                	unimp
      d8:	0328                	addi	a0,sp,392
      da:	01b1                	addi	gp,gp,12
      dc:	0000                	unimp
      de:	0329                	addi	t1,t1,10
      e0:	0000034f          	fnmadd.s	ft6,ft0,ft0,ft0,rne
      e4:	032a                	slli	t1,t1,0xa
      e6:	00cc                	addi	a1,sp,68
      e8:	0000                	unimp
      ea:	0013032b          	0x13032b
      ee:	0000                	unimp
      f0:	032c                	addi	a1,sp,392
      f2:	0379                	addi	t1,t1,30
      f4:	0000                	unimp
      f6:	032d                	addi	t1,t1,11
      f8:	0096                	slli	ra,ra,0x5
      fa:	0000                	unimp
      fc:	032e                	slli	t1,t1,0xb
      fe:	0465                	addi	s0,s0,25
     100:	0000                	unimp
     102:	013b032f          	0x13b032f
     106:	0000                	unimp
     108:	0330                	addi	a2,sp,392
     10a:	03d4                	addi	a3,sp,452
     10c:	0000                	unimp
     10e:	0331                	addi	t1,t1,12
     110:	01e0                	addi	s0,sp,204
     112:	0000                	unimp
     114:	0332                	slli	t1,t1,0xc
     116:	01f8                	addi	a4,sp,204
     118:	0000                	unimp
     11a:	02220333          	mul	t1,tp,sp
     11e:	0000                	unimp
     120:	0334                	addi	a3,sp,392
     122:	04d5                	addi	s1,s1,21
     124:	0000                	unimp
     126:	0335                	addi	t1,t1,13
     128:	0345                	addi	t1,t1,17
     12a:	0000                	unimp
     12c:	0336                	slli	t1,t1,0xd
     12e:	00c2                	slli	ra,ra,0x10
     130:	0000                	unimp
     132:	01790337          	lui	t1,0x1790
     136:	0000                	unimp
     138:	0338                	addi	a4,sp,392
     13a:	049e                	slli	s1,s1,0x7
     13c:	0000                	unimp
     13e:	0339                	addi	t1,t1,14
     140:	0492                	slli	s1,s1,0x4
     142:	0000                	unimp
     144:	033a                	slli	t1,t1,0xe
     146:	0000022f          	0x22f
     14a:	031e033b          	0x31e033b
     14e:	0000                	unimp
     150:	033c                	addi	a5,sp,392
     152:	0205                	addi	tp,tp,1
     154:	0000                	unimp
     156:	033d                	addi	t1,t1,15
     158:	04e2                	slli	s1,s1,0x18
     15a:	0000                	unimp
     15c:	019c0343          	fmadd.s	ft6,fs8,fs9,ft0,rne
     160:	0000                	unimp
     162:	0345                	addi	t1,t1,17
     164:	04b5                	addi	s1,s1,13
     166:	0000                	unimp
     168:	0346                	slli	t1,t1,0x11
     16a:	000004bf 01ed0347 	0x1ed0347000004bf
     172:	0000                	unimp
     174:	0348                	addi	a0,sp,388
     176:	011c                	addi	a5,sp,128
     178:	0000                	unimp
     17a:	0349                	addi	t1,t1,18
     17c:	03a6                	slli	t2,t2,0x9
     17e:	0000                	unimp
     180:	034a                	slli	t1,t1,0x12
     182:	0022                	c.slli	zero,0x8
     184:	0000                	unimp
     186:	0128034b          	fnmsub.s	ft6,fa6,fs2,ft0,rne
     18a:	0000                	unimp
     18c:	034c                	addi	a1,sp,388
     18e:	03b2                	slli	t2,t2,0xc
     190:	0000                	unimp
     192:	034d                	addi	t1,t1,19
     194:	047f                	0x47f
     196:	0000                	unimp
     198:	034e                	slli	t1,t1,0x13
     19a:	0109                	addi	sp,sp,2
     19c:	0000                	unimp
     19e:	032d034f          	fnmadd.d	ft6,fs10,fs2,ft0,rne
     1a2:	0000                	unimp
     1a4:	0352                	slli	t1,t1,0x14
     1a6:	00dc                	addi	a5,sp,68
     1a8:	0000                	unimp
     1aa:	038d0353          	fadd.d	ft6,fs10,fs8,rne
     1ae:	0000                	unimp
     1b0:	0354                	addi	a3,sp,388
     1b2:	0456                	slli	s0,s0,0x15
     1b4:	0000                	unimp
     1b6:	0355                	addi	t1,t1,21
     1b8:	0000039b          	0x39b
     1bc:	0356                	slli	t1,t1,0x15
     1be:	02be                	slli	t0,t0,0xf
     1c0:	0000                	unimp
     1c2:	04040057          	0x4040057
     1c6:	00028807          	0x28807
     1ca:	0400                	addi	s0,sp,512
     1cc:	0601                	addi	a2,a2,0
     1ce:	024c                	addi	a1,sp,260
     1d0:	0000                	unimp
     1d2:	0204                	addi	s1,sp,256
     1d4:	8605                	srai	a2,a2,0x1
     1d6:	0000                	unimp
     1d8:	0400                	addi	s0,sp,512
     1da:	0504                	addi	s1,sp,640
     1dc:	0170                	addi	a2,sp,140
     1de:	0000                	unimp
     1e0:	0804                	addi	s1,sp,16
     1e2:	6b05                	lui	s6,0x1
     1e4:	0001                	nop
     1e6:	0500                	addi	s0,sp,640
     1e8:	00ea                	slli	ra,ra,0x1a
  for(;time;time--)asm volatile("nop");
     1ea:	0000                	unimp
}
     1ec:	2e02                	fld	ft8,0(sp)
  for(;time;time--)asm volatile("nop");
     1ee:	f318                	fsw	fa4,32(a4)
     1f0:	0001                	nop
     1f2:	0400                	addi	s0,sp,512
void USART0_IRQHandler(void){
     1f4:	0801                	addi	a6,a6,0
     1f6:	024a                	slli	tp,tp,0x12
  USART_CTL0(USART0) &=~ USART_CTL0_TBEIE;
     1f8:	0000                	unimp
     1fa:	0204                	addi	s1,sp,256
void USART0_IRQHandler(void){
     1fc:	0002ab07          	flw	fs6,0(t0)
  USART_CTL0(USART0) &=~ USART_CTL0_TBEIE;
     200:	0500                	addi	s0,sp,640
void USART0_IRQHandler(void){
     202:	078c                	addi	a1,sp,960
     204:	0000                	unimp
     206:	3402                	fld	fs0,32(sp)
     208:	0d19                	addi	s10,s10,6
     20a:	0002                	c.slli64	zero
     20c:	0400                	addi	s0,sp,512
     20e:	0704                	addi	s1,sp,896
     210:	00000283          	lb	t0,0(zero) # 0 <_vector_table>
     214:	0804                	addi	s1,sp,16
     216:	00027e07          	0x27e07
     21a:	0600                	addi	s0,sp,768
     21c:	0504                	addi	s1,sp,640
  USART_CTL0(USART0) &=~ USART_CTL0_TBEIE;
     21e:	6e69                	lui	t3,0x1a
     220:	0074                	addi	a3,sp,12
     222:	00036907          	0x36907
  USART_DATA(USART0) = 'U';
     226:	0500                	addi	s0,sp,640
     228:	1130                	addi	a2,sp,168
     22a:	0201                	addi	tp,tp,0
     22c:	0000                	unimp
  GPO_T(RLED);
     22e:	1004                	addi	s1,sp,32
     230:	3e04                	fld	fs1,56(a2)
     232:	0002                	c.slli64	zero
     234:	0800                	addi	s0,sp,16
  sleep(300000);
     236:	0222                	slli	tp,tp,0x8
     238:	0000                	unimp
     23a:	0e01                	addi	t3,t3,0
     23c:	050a                	slli	a0,a0,0x2
  GPO_T(RLED);
     23e:	00000003          	lb	zero,0(zero) # 0 <_vector_table>
     242:	0920                	addi	s0,sp,152
     244:	03e0                	addi	s0,sp,460
  sleep(300000);
     246:	0000                	unimp
}
     248:	3001                	jal	fffffa48 <_stack_end+0xdfff7a48>
     24a:	f406                	fsw	ft1,40(sp)
     24c:	0001                	nop
     24e:	7a00                	flw	fs0,48(a2)
     250:	0000                	unimp
     252:	0100                	addi	s0,sp,128
     254:	6d9c                	flw	fa5,24(a1)
     256:	0002                	c.slli64	zero
     258:	0a00                	addi	s0,sp,272
     25a:	0248                	addi	a0,sp,260
     25c:	0000                	unimp
     25e:	0432                	slli	s0,s0,0xc
     260:	0000                	unimp
     262:	055a010b          	0x55a010b
     266:	e00c                	fsw	fa1,0(s0)
     268:	00000493          	li	s1,0
     26c:	0c00                	addi	s0,sp,528
  eclic_init(ECLIC_NUM_INTERRUPTS);
     26e:	00bd                	addi	ra,ra,15
     270:	0000                	unimp
     272:	1401                	addi	s0,s0,-32
  RCU_APB2EN |= RCU_APB2EN_PAEN | RCU_APB2EN_PBEN | RCU_APB2EN_PCEN;
     274:	1b05                	addi	s6,s6,-31
     276:	0002                	c.slli64	zero
     278:	6e00                	flw	fs0,24(a2)
  GPIO_config(RLED); GPIO_config(YLED); GPIO_config(GLED);
     27a:	0002                	c.slli64	zero
     27c:	1200                	addi	s0,sp,288
     27e:	0001                	nop
  RCU_APB2EN |= RCU_APB2EN_PAEN | RCU_APB2EN_PBEN | RCU_APB2EN_PCEN;
     280:	0100                	addi	s0,sp,128
     282:	329c                	fld	fa5,32(a3)
     284:	0004                	0x4
  GPIO_config(RLED); GPIO_config(YLED); GPIO_config(GLED);
     286:	0d00                	addi	s0,sp,656
     288:	0000                	unimp
     28a:	0000                	unimp
     28c:	02a1                	addi	t0,t0,8
  eclic_set_vmode( USART0_IRQn );
     28e:	0000                	unimp
     290:	810e                	mv	sp,gp
  GPIO_config(RLED); GPIO_config(YLED); GPIO_config(GLED);
     292:	0000                	unimp
     294:	0100                	addi	s0,sp,128
     296:	031a                	slli	t1,t1,0x6
     298:	0201                	addi	tp,tp,0
     29a:	0000                	unimp
     29c:	0000                	unimp
     29e:	0000                	unimp
     2a0:	0f00                	addi	s0,sp,912
     2a2:	000002b3          	add	t0,zero,zero
     2a6:	8110                	0x8110
     2a8:	0000                	unimp
     2aa:	0100                	addi	s0,sp,128
     2ac:	031a                	slli	t1,t1,0x6
     2ae:	0201                	addi	tp,tp,0
     2b0:	0000                	unimp
     2b2:	1100                	addi	s0,sp,160
     2b4:	029e                	slli	t0,t0,0x7
     2b6:	0000                	unimp
     2b8:	0016                	c.slli	zero,0x5
     2ba:	0000                	unimp
     2bc:	02d1                	addi	t0,t0,20
     2be:	0000                	unimp
     2c0:	810e                	mv	sp,gp
     2c2:	0000                	unimp
     2c4:	0100                	addi	s0,sp,128
  GPIO_config(SBTN); GPIO_config(RBTN);
     2c6:	161a                	slli	a2,a2,0x26
     2c8:	0201                	addi	tp,tp,0
  GPIO_config(UART0_RX); GPIO_config(UART0_TX);
     2ca:	0000                	unimp
     2cc:	0020                	addi	s0,sp,8
     2ce:	0000                	unimp
  GPIO_config(SBTN); GPIO_config(RBTN);
     2d0:	0f00                	addi	s0,sp,912
     2d2:	000002e3          	beqz	zero,ad6 <CSR_MTVT2+0x2ea>
     2d6:	8110                	0x8110
     2d8:	0000                	unimp
     2da:	0100                	addi	s0,sp,128
     2dc:	161a                	slli	a2,a2,0x26
     2de:	0201                	addi	tp,tp,0
     2e0:	0000                	unimp
     2e2:	1100                	addi	s0,sp,160
     2e4:	02b4                	addi	a3,sp,328
     2e6:	0000                	unimp
     2e8:	0012                	c.slli	zero,0x4
  GPIO_config(UART0_RX); GPIO_config(UART0_TX);
     2ea:	0000                	unimp
     2ec:	0301                	addi	t1,t1,0
     2ee:	0000                	unimp
     2f0:	810e                	mv	sp,gp
     2f2:	0000                	unimp
     2f4:	0100                	addi	s0,sp,128
     2f6:	291a                	fld	fs2,384(sp)
     2f8:	0201                	addi	tp,tp,0
     2fa:	0000                	unimp
     2fc:	0040                	addi	s0,sp,4
     2fe:	0000                	unimp
     300:	0f00                	addi	s0,sp,912
     302:	00000313          	li	t1,0
     306:	8110                	0x8110
  RCU_APB2EN |= RCU_APB2EN_USART0EN | RCU_APB2EN_AFEN;
     308:	0000                	unimp
     30a:	0100                	addi	s0,sp,128
     30c:	291a                	fld	fs2,384(sp)
     30e:	0201                	addi	tp,tp,0
     310:	0000                	unimp
  USART_BAUD(USART0) = 8000000 / 9600;
     312:	0d00                	addi	s0,sp,656
     314:	0020                	addi	s0,sp,8
     316:	0000                	unimp
     318:	032d                	addi	t1,t1,11
     31a:	0000                	unimp
     31c:	810e                	mv	sp,gp
  USART_CTL0(USART0) = USART_CTL0_UEN | USART_CTL0_REN | USART_CTL0_TEN;
     31e:	0000                	unimp
     320:	0100                	addi	s0,sp,128
     322:	0201031b          	0x201031b
  eclic_set_vmode( USART0_IRQn );
     326:	0000                	unimp
  eclic_enable_interrupt( USART0_IRQn );
     328:	0000006b          	0x6b
     32c:	0f00                	addi	s0,sp,912
  eclic_global_interrupt_enable();
     32e:	0000033f 00008110 	0x81100000033f
    GPO_T(YLED);
     336:	0100                	addi	s0,sp,128
    if( GPI_ON(SBTN) )GPO_ON(GLED); else GPO_OFF(GLED);
     338:	0201031b          	0x201031b
     33c:	0000                	unimp
     33e:	1100                	addi	s0,sp,160
    if( GPI_ON(RBTN) )USART_CTL0(USART0) |= USART_CTL0_TBEIE;
     340:	02da                	slli	t0,t0,0x16
     342:	0000                	unimp
    sleep(100000);
     344:	0010                	0x10
     346:	0000                	unimp
    GPO_T(YLED);
     348:	035d                	addi	t1,t1,23
     34a:	0000                	unimp
     34c:	810e                	mv	sp,gp
     34e:	0000                	unimp
     350:	0100                	addi	s0,sp,128
     352:	0201161b          	0x201161b
    if( GPI_ON(SBTN) )GPO_ON(GLED); else GPO_OFF(GLED);
     356:	0000                	unimp
     358:	0000008b          	0x8b
     35c:	0f00                	addi	s0,sp,912
     35e:	0000036f          	jal	t1,35e <CSR_MCAUSE+0x1c>
    if( GPI_ON(RBTN) )USART_CTL0(USART0) |= USART_CTL0_TBEIE;
     362:	8110                	0x8110
     364:	0000                	unimp
     366:	0100                	addi	s0,sp,128
     368:	0201161b          	0x201161b
     36c:	0000                	unimp
     36e:	0f00                	addi	s0,sp,912
     370:	0381                	addi	t2,t2,0
     372:	0000                	unimp
    sleep(100000);
     374:	8110                	0x8110
     376:	0000                	unimp
    GPO_T(YLED);
     378:	0100                	addi	s0,sp,128
    if( GPI_ON(SBTN) )GPO_ON(GLED); else GPO_OFF(GLED);
     37a:	031e                	slli	t1,t1,0x7
     37c:	0201                	addi	tp,tp,0
     37e:	0000                	unimp
    asm volatile ("li x6, 0xffffffff":::"x6");
     380:	0d00                	addi	s0,sp,656
     382:	0038                	addi	a4,sp,8
    asm volatile ("csrw pmpaddr0, x6":::);
     384:	0000                	unimp
     386:	0000039b          	0x39b
    asm volatile ("li x6, 0x7f":::"x6");
     38a:	810e                	mv	sp,gp
    asm volatile ("csrw pmpcfg0, x6":::);
     38c:	0000                	unimp
     38e:	0100                	addi	s0,sp,128
}
     390:	031e                	slli	t1,t1,0x7
    clear_csr (mstatus,MSTATUS_MPP);
     392:	0201                	addi	tp,tp,0
     394:	0000                	unimp
     396:	000000ab          	0xab
     39a:	0f00                	addi	s0,sp,912
    asm volatile ("la x6, 1f    ":::"x6");
     39c:	03ad                	addi	t2,t2,11
     39e:	0000                	unimp
     3a0:	8110                	0x8110
     3a2:	0000                	unimp
    asm volatile ("csrw mepc, x6":::);
     3a4:	0100                	addi	s0,sp,128
     3a6:	1a1e                	slli	s4,s4,0x27
    asm volatile ("mret":::);
     3a8:	0201                	addi	tp,tp,0
     3aa:	0000                	unimp
} 
     3ac:	1100                	addi	s0,sp,160
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME);
     3ae:	02f8                	addi	a4,sp,332
     3b0:	0000                	unimp
     3b2:	0010                	0x10
}
     3b4:	0000                	unimp
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME + 4);
     3b6:	000003cb          	fnmsub.s	ft7,ft0,ft0,ft0,rne
     3ba:	810e                	mv	sp,gp
}
     3bc:	0000                	unimp
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME + 4);
     3be:	0100                	addi	s0,sp,128
     3c0:	1a1e                	slli	s4,s4,0x27
     3c2:	0201                	addi	tp,tp,0
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME);
     3c4:	0000                	unimp
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME + 4);
     3c6:	000000cb          	fnmsub.s	ft1,ft0,ft0,ft0,rne
    if (hi == mtime_hi())
     3ca:	1100                	addi	s0,sp,160
}
     3cc:	032e                	slli	t1,t1,0xb
  return TIMER_FREQ;
     3ce:	0000                	unimp
     3d0:	0004                	0x4
     3d2:	0000                	unimp
     3d4:	03e5                	addi	t2,t2,25
     3d6:	0000                	unimp
}
     3d8:	9010                	0x9010
     3da:	0000                	unimp
    uint32_t hi = read_csr(minstreth);
     3dc:	0100                	addi	s0,sp,128
     3de:	0326                	slli	t1,t1,0x9
    uint32_t lo = read_csr(minstret);
     3e0:	020d                	addi	tp,tp,3
     3e2:	0000                	unimp
    if (hi == read_csr(minstreth))
     3e4:	1200                	addi	s0,sp,288
     3e6:	0274                	addi	a3,sp,268
     3e8:	0000                	unimp
     3ea:	0459                	addi	s0,s0,22
}
     3ec:	0000                	unimp
    uint32_t hi = read_csr(mcycleh);
     3ee:	03f9                	addi	t2,t2,30
     3f0:	0000                	unimp
    uint32_t lo = read_csr(mcycle);
     3f2:	025a010b          	0x25a010b
    if (hi == read_csr(mcycleh))
     3f6:	5708                	lw	a0,40(a4)
     3f8:	1200                	addi	s0,sp,288
     3fa:	0328                	addi	a0,sp,392
     3fc:	0000                	unimp
}
     3fe:	0465                	addi	s0,s0,25
  return TIMER_FREQ;
     400:	0000                	unimp
     402:	040d                	addi	s0,s0,3
     404:	0000                	unimp
     406:	025a010b          	0x25a010b
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME);
     40a:	3808                	fld	fa0,48(s0)
     40c:	1200                	addi	s0,sp,288
  return TIMER_FREQ;
     40e:	032e                	slli	t1,t1,0xb
     410:	0000                	unimp
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME);
     412:	0471                	addi	s0,s0,28
     414:	0000                	unimp
     416:	0421                	addi	s0,s0,8
     418:	0000                	unimp
  } while (start_mtime == tmp);
     41a:	025a010b          	0x25a010b
  uint32_t start_mcycle = read_csr(mcycle);
     41e:	3808                	fld	fa0,48(s0)
     420:	0a00                	addi	s0,sp,272
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME);
     422:	0378                	addi	a4,sp,396
     424:	0000                	unimp
     426:	0432                	slli	s0,s0,0xc
     428:	0000                	unimp
    delta_mtime = mtime_lo() - start_mtime;
     42a:	025a010b          	0x25a010b
  } while (delta_mtime < n);
     42e:	0079                	c.nop	30
     430:	0000                	unimp
  uint32_t delta_mcycle = read_csr(mcycle) - start_mcycle;
     432:	1109                	addi	sp,sp,-30
     434:	0005                	c.nop	1
     436:	0100                	addi	s0,sp,128
     438:	0610                	addi	a2,sp,768
         + ((delta_mcycle % delta_mtime) * mtime_freq) / delta_mtime;
     43a:	01ea                	slli	gp,gp,0x1a
     43c:	0000                	unimp
  return (delta_mcycle / delta_mtime) * mtime_freq
     43e:	000a                	c.slli	zero,0x2
     440:	0000                	unimp
         + ((delta_mcycle % delta_mtime) * mtime_freq) / delta_mtime;
     442:	9c01                	0x9c01
     444:	0459                	addi	s0,s0,22
     446:	0000                	unimp
     448:	00081e13          	slli	t3,a6,0x0
  return (delta_mcycle / delta_mtime) * mtime_freq
     44c:	0100                	addi	s0,sp,128
}
     44e:	1510                	addi	a2,sp,672
     450:	0201                	addi	tp,tp,0
{
     452:	0000                	unimp
  measure_cpu_freq(1);
     454:	00ed                	addi	ra,ra,27
{
     456:	0000                	unimp
  measure_cpu_freq(1);
     458:	1400                	addi	s0,sp,544
}
     45a:	00000053          	fadd.s	ft0,ft0,ft0,rne
  cpu_freq = measure_cpu_freq(100);
     45e:	00000053          	fadd.s	ft0,ft0,ft0,rne
     462:	14062903          	lw	s2,320(a2)
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_CFG_OFFSET)=0;
     466:	000002d3          	fadd.s	ft5,ft0,ft0,rne
     46a:	000002d3          	fadd.s	ft5,ft0,ft0,rne
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_MTH_OFFSET)=0;
     46e:	14064f03          	lbu	t5,320(a2)
  vuint32_t * upper = (vuint32_t*)(base + num_irq*4);
     472:	00f2                	slli	ra,ra,0x1c
     474:	0000                	unimp
     476:	00f2                	slli	ra,ra,0x1c
  for (ptr = base; ptr < upper; ptr=ptr+4){
     478:	0000                	unimp
     47a:	00062b03          	lw	s6,0(a2)
    *ptr = 0;
     47e:	00000de3          	beqz	zero,c98 <CSR_MTVT2+0x4ac>
  for (ptr = base; ptr < upper; ptr=ptr+4){
     482:	0004                	0x4
     484:	0134                	addi	a3,sp,136
    *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_IE_OFFSET+source*4) = 1;
     486:	0000                	unimp
     488:	0104                	addi	s1,sp,128
     48a:	03f2                	slli	t2,t2,0x1c
     48c:	0000                	unimp
     48e:	480c                	lw	a1,16(s0)
     490:	e3000007          	0xe3000007
     494:	0002                	c.slli64	zero
}
     496:	8000                	0x8000
    *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_IE_OFFSET+source*4) = 0;
     498:	1c000003          	lb	zero,448(zero) # 1c0 <copy_data_end>
     49c:	0004                	0x4
     49e:	b900                	fsd	fs0,48(a0)
     4a0:	0004                	0x4
     4a2:	0200                	addi	s0,sp,256
     4a4:	0704                	addi	s1,sp,896
}
     4a6:	0288                	addi	a0,sp,320
    *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_IP_OFFSET+source*4) = 1;
     4a8:	0000                	unimp
     4aa:	0102                	c.slli64	sp
     4ac:	4c06                	lw	s8,64(sp)
     4ae:	0002                	c.slli64	zero
     4b0:	0200                	addi	s0,sp,256
     4b2:	0502                	c.slli64	a0
     4b4:	0086                	slli	ra,ra,0x1
     4b6:	0000                	unimp
     4b8:	0402                	c.slli64	s0
}
     4ba:	7005                	c.lui	zero,0xfffe1
    *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_IP_OFFSET+source*4) = 0;
     4bc:	0001                	nop
     4be:	0200                	addi	s0,sp,256
     4c0:	0508                	addi	a0,sp,640
     4c2:	0000016b          	0x16b
     4c6:	0000ea03          	0xea03
     4ca:	0200                	addi	s0,sp,256
}
     4cc:	182e                	slli	a6,a6,0x2b
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4) = intctrl;
     4ce:	0054                	addi	a3,sp,4
     4d0:	0000                	unimp
     4d2:	0102                	c.slli64	sp
     4d4:	4a08                	lw	a0,16(a2)
     4d6:	0002                	c.slli64	zero
     4d8:	0200                	addi	s0,sp,256
     4da:	0702                	c.slli64	a4
}
     4dc:	000002ab          	0x2ab
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
     4e0:	00078c03          	lb	s8,0(a5) # d2001000 <_stack_end+0xb1ff9000>
     4e4:	0200                	addi	s0,sp,256
     4e6:	1934                	addi	a3,sp,184
     4e8:	00000073          	ecall
}
     4ec:	6204                	flw	fs1,0(a2)
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4) = intattr;
     4ee:	0000                	unimp
     4f0:	0200                	addi	s0,sp,256
     4f2:	0704                	addi	s1,sp,896
     4f4:	00000283          	lb	t0,0(zero) # 0 <_vector_table>
     4f8:	00057803          	0x57803
}
     4fc:	0200                	addi	s0,sp,256
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4);
     4fe:	00861937          	lui	s2,0x861
     502:	0000                	unimp
     504:	0802                	c.slli64	a6
     506:	00027e07          	0x27e07
     50a:	0500                	addi	s0,sp,640
}
     50c:	0504                	addi	s1,sp,640
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_CFG_OFFSET) = cliccfg;
     50e:	6e69                	lui	t3,0x1a
     510:	0074                	addi	a3,sp,12
     512:	6906                	flw	fs2,64(sp)
     514:	04000003          	lb	zero,64(zero) # 40 <MSTATUS_MIE+0x38>
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_CFG_OFFSET);
     518:	1130                	addi	a2,sp,168
     51a:	0062                	c.slli	zero,0x18
     51c:	0000                	unimp
     51e:	00059803          	lh	a6,0(a1)
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_MTH_OFFSET) = mth;
     522:	0300                	addi	s0,sp,384
     524:	17d8                	addi	a4,sp,996
     526:	0025                	c.nop	9
     528:	0000                	unimp
}
     52a:	1002                	c.slli	zero,0x20
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_MTH_OFFSET);
     52c:	3e04                	fld	fs1,56(a2)
     52e:	0002                	c.slli64	zero
     530:	0700                	addi	s0,sp,896
     532:	071f 0000 7e01      	0x7e010000071f
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_CFG_OFFSET);
     538:	0601                	addi	a2,a2,0
     53a:	0784                	addi	s1,sp,960
     53c:	0000                	unimp
  uint8_t nlbits_shifted = nlbits << ECLIC_CFG_NLBITS_LSB;
     53e:	0018                	0x18
  uint8_t new_cliccfg = (old_cliccfg & (~ECLIC_CFG_NLBITS_MASK)) | (ECLIC_CFG_NLBITS_MASK & nlbits_shifted); 
     540:	0000                	unimp
     542:	9c01                	0x9c01
     544:	013d                	addi	sp,sp,15
     546:	0000                	unimp
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_CFG_OFFSET) = cliccfg;
     548:	9008                	0x9008
     54a:	0006                	c.slli	zero,0x1
}
     54c:	0100                	addi	s0,sp,128
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_CFG_OFFSET);
     54e:	017e                	slli	sp,sp,0x1f
     550:	6226                	flw	ft4,72(sp)
     552:	0000                	unimp
     554:	0b00                	addi	s0,sp,400
  nlbits = (nlbits & ECLIC_CFG_NLBITS_MASK) >> ECLIC_CFG_NLBITS_LSB;
     556:	0001                	nop
}
     558:	0900                	addi	s0,sp,144
     55a:	056c                	addi	a1,sp,652
void eclic_set_irq_lvl(uint32_t source, uint8_t lvl) {
     55c:	0000                	unimp
     55e:	8001                	c.srli64	s0
     560:	0b01                	addi	s6,s6,0
     562:	0048                	addi	a0,sp,4
     564:	0000                	unimp
  uint8_t nlbits = eclic_get_nlbits();
     566:	012c                	addi	a1,sp,136
  lvl = lvl >> (8-nlbits);
     568:	0000                	unimp
     56a:	3c09                	jal	ffffff7c <_stack_end+0xdfff7f7c>
     56c:	0005                	c.nop	1
     56e:	0100                	addi	s0,sp,128
     570:	0182                	c.slli64	gp
     572:	0000480b          	0x480b
     576:	3f00                	fld	fs0,56(a4)
     578:	0001                	nop
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
     57a:	0a00                	addi	s0,sp,272
     57c:	0000084f          	fnmadd.s	fa6,ft0,ft0,ft0,rne
     580:	0784                	addi	s1,sp,960
     582:	0000                	unimp
     584:	000e                	c.slli	zero,0x3
  lvl = lvl >> (8-nlbits);
     586:	0000                	unimp
     588:	8001                	c.srli64	s0
  lvl = lvl << (8-nlbits);
     58a:	1901                	addi	s2,s2,-32
     58c:	0118                	addi	a4,sp,128
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
     58e:	0000                	unimp
     590:	0008600b          	0x8600b
  current_intctrl = current_intctrl << nlbits;
     594:	0000                	unimp
  current_intctrl = current_intctrl >> nlbits;
     596:	6d0c                	flw	fa1,24(a0)
     598:	0008                	0x8
     59a:	9600                	0x9600
     59c:	04000007          	0x4000007
  eclic_set_intctrl(source, (current_intctrl | lvl));
     5a0:	0000                	unimp
     5a2:	0100                	addi	s0,sp,128
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4) = intctrl;
     5a4:	0186                	slli	gp,gp,0x1
     5a6:	08860d03          	lb	s10,136(a2)
}
     5aa:	0000                	unimp
     5ac:	0161                	addi	sp,sp,24
     5ae:	0000                	unimp
uint8_t eclic_get_irq_lvl(uint32_t source) {
     5b0:	7a0d                	lui	s4,0xfffe3
     5b2:	0008                	0x8
     5b4:	7400                	flw	fs0,40(s0)
     5b6:	0001                	nop
  uint8_t nlbits = eclic_get_nlbits();
     5b8:	0000                	unimp
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
     5ba:	0700                	addi	s0,sp,896
     5bc:	06cd                	addi	a3,a3,19
     5be:	0000                	unimp
     5c0:	7301                	lui	t1,0xfffe0
     5c2:	0601                	addi	a2,a2,0
     5c4:	076c                	addi	a1,sp,908
     5c6:	0000                	unimp
  intctrl = intctrl >> (8-nlbits);
     5c8:	0018                	0x18
     5ca:	0000                	unimp
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
     5cc:	9c01                	0x9c01
     5ce:	000001c7          	fmsub.s	ft3,ft0,ft0,ft0,rne
  intctrl = intctrl >> (8-nlbits);
     5d2:	9008                	0x9008
     5d4:	0006                	c.slli	zero,0x1
     5d6:	0100                	addi	s0,sp,128
     5d8:	62260173          	0x62260173
}
     5dc:	0000                	unimp
     5de:	8a00                	0x8a00
  intctrl = intctrl >> (8-nlbits);
     5e0:	0001                	nop
     5e2:	0900                	addi	s0,sp,144
  uint8_t lvl = intctrl << (8-nlbits);
     5e4:	056c                	addi	a1,sp,652
     5e6:	0000                	unimp
}
     5e8:	7501                	lui	a0,0xfffe0
     5ea:	0b01                	addi	s6,s6,0
     5ec:	0048                	addi	a0,sp,4
     5ee:	0000                	unimp
void eclic_set_irq_lvl_abs(uint32_t source, uint8_t lvl_abs) {
     5f0:	000001ab          	0x1ab
     5f4:	3c09                	jal	6 <CSR_MTVEC_ECLIC+0x3>
     5f6:	0005                	c.nop	1
     5f8:	0100                	addi	s0,sp,128
     5fa:	480b0177          	0x480b0177
  uint8_t lvl = lvl_abs << (8-nlbits);
     5fe:	0000                	unimp
     600:	be00                	fsd	fs0,56(a2)
     602:	0001                	nop
     604:	0a00                	addi	s0,sp,272
     606:	0000084f          	fnmadd.s	fa6,ft0,ft0,ft0,rne
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
     60a:	076c                	addi	a1,sp,908
     60c:	0000                	unimp
     60e:	000e                	c.slli	zero,0x3
     610:	0000                	unimp
     612:	7501                	lui	a0,0xfffe0
     614:	1901                	addi	s2,s2,-32
  uint8_t lvl = lvl_abs << (8-nlbits);
     616:	01a2                	slli	gp,gp,0x8
     618:	0000                	unimp
     61a:	0008600b          	0x8600b
  current_intctrl = current_intctrl << nlbits;
     61e:	0000                	unimp
  current_intctrl = current_intctrl >> nlbits;
     620:	6d0c                	flw	fa1,24(a0)
     622:	0008                	0x8
  uint8_t lvl = lvl_abs << (8-nlbits);
     624:	7e00                	flw	fs0,56(a2)
     626:	04000007          	0x4000007
  current_intctrl = current_intctrl >> nlbits;
     62a:	0000                	unimp
     62c:	0100                	addi	s0,sp,128
  eclic_set_intctrl(source, (current_intctrl | lvl));
     62e:	0d03017b          	0xd03017b
     632:	0886                	slli	a7,a7,0x1
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4) = intctrl;
     634:	0000                	unimp
     636:	01e0                	addi	s0,sp,204
}
     638:	0000                	unimp
     63a:	7a0d                	lui	s4,0xfffe3
     63c:	0008                	0x8
     63e:	f300                	fsw	fs0,32(a4)
     640:	0001                	nop
uint8_t eclic_get_irq_lvl_abs(uint32_t source) {
     642:	0000                	unimp
     644:	0700                	addi	s0,sp,896
     646:	061e                	slli	a2,a2,0x7
     648:	0000                	unimp
  uint8_t nlbits = eclic_get_nlbits();
     64a:	6a01                	0x6a01
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
     64c:	0601                	addi	a2,a2,0
     64e:	0754                	addi	a3,sp,900
     650:	0000                	unimp
     652:	0018                	0x18
     654:	0000                	unimp
     656:	9c01                	0x9c01
     658:	0000024f          	fnmadd.s	ft4,ft0,ft0,ft0,rne
  intctrl = intctrl >> (8-nlbits);
     65c:	9008                	0x9008
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
     65e:	0006                	c.slli	zero,0x1
     660:	0100                	addi	s0,sp,128
  intctrl = intctrl >> (8-nlbits);
     662:	016a                	slli	sp,sp,0x1a
     664:	6224                	flw	fs1,64(a2)
     666:	0000                	unimp
     668:	0900                	addi	s0,sp,144
     66a:	0002                	c.slli64	zero
}
     66c:	0900                	addi	s0,sp,144
     66e:	056c                	addi	a1,sp,652
  intctrl = intctrl >> (8-nlbits);
     670:	0000                	unimp
     672:	6c01                	0x6c01
     674:	0b01                	addi	s6,s6,0
     676:	0048                	addi	a0,sp,4
}
     678:	0000                	unimp
     67a:	022a                	slli	tp,tp,0xa
     67c:	0000                	unimp
     67e:	3c0e                	fld	fs8,224(sp)
uint8_t eclic_set_irq_priority(uint32_t source, uint8_t priority) {
     680:	0005                	c.nop	1
     682:	0100                	addi	s0,sp,128
     684:	016e                	slli	sp,sp,0x1b
     686:	0000480b          	0x480b
	uint8_t nlbits = eclic_get_nlbits();
     68a:	0100                	addi	s0,sp,128
	if (nlbits >= ECLICINTCTLBITS) {
     68c:	0a5f 084f 0000      	0x84f0a5f
     692:	0754                	addi	a3,sp,900
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
     694:	0000                	unimp
     696:	000e                	c.slli	zero,0x3
     698:	0000                	unimp
     69a:	6c01                	0x6c01
     69c:	1901                	addi	s2,s2,-32
     69e:	022a                	slli	tp,tp,0xa
     6a0:	0000                	unimp
	priority = priority << (8 - ECLICINTCTLBITS);
     6a2:	0008600b          	0x8600b
	current_intctrl = current_intctrl >> (8-nlbits);
     6a6:	0000                	unimp
     6a8:	6d0c                	flw	fa1,24(a0)
	priority = priority << (8 - ECLICINTCTLBITS);
     6aa:	0008                	0x8
	current_intctrl = current_intctrl >> (8-nlbits);
     6ac:	6600                	flw	fs0,8(a2)
     6ae:	04000007          	0x4000007
	priority = priority << (8 - ECLICINTCTLBITS);
     6b2:	0000                	unimp
	current_intctrl = current_intctrl << (8-nlbits);
     6b4:	0100                	addi	s0,sp,128
     6b6:	0170                	addi	a2,sp,140
	eclic_set_intctrl(source, (current_intctrl | priority));
     6b8:	08860d03          	lb	s10,136(a2)
     6bc:	0000                	unimp
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4) = intctrl;
     6be:	023d                	addi	tp,tp,15
     6c0:	0000                	unimp
}
     6c2:	7a0d                	lui	s4,0xfffe3
     6c4:	0008                	0x8
     6c6:	5000                	lw	s0,32(s0)
     6c8:	0002                	c.slli64	zero
     6ca:	0000                	unimp
uint8_t eclic_get_irq_priority(uint32_t source) {
     6cc:	0700                	addi	s0,sp,896
     6ce:	07de                	slli	a5,a5,0x17
     6d0:	0000                	unimp
     6d2:	5d01                	li	s10,-32
	uint8_t nlbits = eclic_get_nlbits();
     6d4:	0601                	addi	a2,a2,0
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
     6d6:	073c                	addi	a5,sp,904
     6d8:	0000                	unimp
     6da:	0018                	0x18
     6dc:	0000                	unimp
     6de:	9c01                	0x9c01
     6e0:	000002d7          	0x2d7
	intctrl = intctrl << nlbits;
     6e4:	9008                	0x9008
     6e6:	0006                	c.slli	zero,0x1
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
     6e8:	0100                	addi	s0,sp,128
     6ea:	015d                	addi	sp,sp,23
	intctrl = intctrl << nlbits;
     6ec:	6222                	flw	ft4,8(sp)
     6ee:	0000                	unimp
     6f0:	6600                	flw	fs0,8(a2)
     6f2:	0002                	c.slli64	zero
     6f4:	0900                	addi	s0,sp,144
}
     6f6:	056c                	addi	a1,sp,652
     6f8:	0000                	unimp
	intctrl = intctrl << nlbits;
     6fa:	5f01                	li	t5,-32
     6fc:	0b01                	addi	s6,s6,0
	uint8_t priority = intctrl >> (nlbits+(8 - ECLICINTCTLBITS));
     6fe:	0048                	addi	a0,sp,4
     700:	0000                	unimp
     702:	00000287          	0x287
     706:	3c0e                	fld	fs8,224(sp)
     708:	0005                	c.nop	1
}
     70a:	0100                	addi	s0,sp,128
     70c:	0161                	addi	sp,sp,24
     70e:	0000480b          	0x480b
  uint32_t mtvec_value = read_csr(mtvec);
     712:	0100                	addi	s0,sp,128
     714:	0a5f 084f 0000      	0x84f0a5f
  mtvec_value = mtvec_value | 0x00000003;
     71a:	073c                	addi	a5,sp,904
     71c:	0000                	unimp
  write_csr(mtvec,mtvec_value);
     71e:	000e                	c.slli	zero,0x3
     720:	0000                	unimp
}
     722:	5f01                	li	t5,-32
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4);
     724:	1901                	addi	s2,s2,-32
     726:	02b2                	slli	t0,t0,0xc
     728:	0000                	unimp
     72a:	0008600b          	0x8600b
     72e:	0000                	unimp
     730:	6d0c                	flw	fa1,24(a0)
  uint8_t new_intattr = (old_intattr | 0x1); 
     732:	0008                	0x8
     734:	4e00                	lw	s0,24(a2)
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4) = intattr;
     736:	04000007          	0x4000007
}
     73a:	0000                	unimp
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4);
     73c:	0100                	addi	s0,sp,128
     73e:	0d030163          	beq	t1,a6,800 <CSR_MTVT2+0x14>
     742:	0886                	slli	a7,a7,0x1
     744:	0000                	unimp
     746:	029a                	slli	t0,t0,0x6
     748:	0000                	unimp
  uint8_t new_intattr = (old_intattr & (~0x1));
     74a:	7a0d                	lui	s4,0xfffe3
     74c:	0008                	0x8
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4) = intattr;
     74e:	ad00                	fsd	fs0,24(a0)
     750:	0002                	c.slli64	zero
}
     752:	0000                	unimp
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4);
     754:	0700                	addi	s0,sp,896
     756:	000002d3          	fadd.s	ft5,ft0,ft0,rne
     75a:	5401                	li	s0,-32
     75c:	0601                	addi	a2,a2,0
     75e:	0724                	addi	s1,sp,904
     760:	0000                	unimp
  uint8_t new_intattr = (old_intattr & (~0x2));
     762:	0018                	0x18
     764:	0000                	unimp
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4) = intattr;
     766:	9c01                	0x9c01
     768:	035f 0000 9008      	0x90080000035f
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4);
     76e:	0006                	c.slli	zero,0x1
     770:	0100                	addi	s0,sp,128
     772:	0154                	addi	a3,sp,132
     774:	621f 0000 c300      	0xc3000000621f
  new_intattr = (old_intattr & (~0x4));
     77a:	0002                	c.slli64	zero
     77c:	0900                	addi	s0,sp,144
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4) = intattr;
     77e:	056c                	addi	a1,sp,652
     780:	0000                	unimp
}
     782:	5601                	li	a2,-32
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4);
     784:	0b01                	addi	s6,s6,0
     786:	0048                	addi	a0,sp,4
     788:	0000                	unimp
     78a:	02e4                	addi	s1,sp,332
     78c:	0000                	unimp
     78e:	3c0e                	fld	fs8,224(sp)
     790:	0005                	c.nop	1
  new_intattr = (old_intattr | 0x4);
     792:	0100                	addi	s0,sp,128
     794:	0158                	addi	a4,sp,132
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4) = intattr;
     796:	0000480b          	0x480b
}
     79a:	0100                	addi	s0,sp,128
     79c:	0a5f 084f 0000      	0x84f0a5f
     7a2:	0724                	addi	s1,sp,904
     7a4:	0000                	unimp
     7a6:	000e                	c.slli	zero,0x3
     7a8:	0000                	unimp
     7aa:	5601                	li	a2,-32
     7ac:	1901                	addi	s2,s2,-32
     7ae:	033a                	slli	t1,t1,0xe
     7b0:	0000                	unimp
     7b2:	0008600b          	0x8600b
     7b6:	0000                	unimp
     7b8:	6d0c                	flw	fa1,24(a0)
     7ba:	0008                	0x8
     7bc:	3600                	fld	fs0,40(a2)
     7be:	04000007          	0x4000007
     7c2:	0000                	unimp
     7c4:	0100                	addi	s0,sp,128
     7c6:	015a                	slli	sp,sp,0x16
     7c8:	08860d03          	lb	s10,136(a2)
     7cc:	0000                	unimp
     7ce:	000002f7          	0x2f7
     7d2:	7a0d                	lui	s4,0xfffe3
     7d4:	0008                	0x8
     7d6:	0a00                	addi	s0,sp,272
     7d8:	00000003          	lb	zero,0(zero) # 0 <_vector_table>
     7dc:	0f00                	addi	s0,sp,912
     7de:	0795                	addi	a5,a5,5
     7e0:	0000                	unimp
     7e2:	4c01                	li	s8,0
     7e4:	0601                	addi	a2,a2,0
     7e6:	0712                	slli	a4,a4,0x4
     7e8:	0000                	unimp
     7ea:	0012                	c.slli	zero,0x4
     7ec:	0000                	unimp
     7ee:	9c01                	0x9c01
     7f0:	000003a3          	sb	zero,7(zero) # 7 <CSR_MTVEC_ECLIC+0x4>
     7f4:	8409                	srai	s0,s0,0x2
     7f6:	0006                	c.slli	zero,0x1
     7f8:	0100                	addi	s0,sp,128
     7fa:	014d                	addi	sp,sp,19
     7fc:	620c                	flw	fa1,0(a2)
     7fe:	0000                	unimp
     800:	2000                	fld	fs0,0(s0)
     802:	10000003          	lb	zero,256(zero) # 100 <MSTATUS_MIE+0xf8>
     806:	0712                	slli	a4,a4,0x4
     808:	0000                	unimp
     80a:	0004                	0x4
     80c:	0000                	unimp
     80e:	9009                	srli	s0,s0,0x22
     810:	0000                	unimp
     812:	0100                	addi	s0,sp,128
     814:	014d                	addi	sp,sp,19
     816:	731a                	flw	ft6,164(sp)
     818:	0000                	unimp
     81a:	4d00                	lw	s0,24(a0)
     81c:	00000003          	lb	zero,0(zero) # 0 <_vector_table>
     820:	1100                	addi	s0,sp,160
     822:	0581                	addi	a1,a1,0
     824:	0000                	unimp
     826:	3b01                	jal	536 <eclic_set_nlbits>
     828:	0901                	addi	s2,s2,0
     82a:	0048                	addi	a0,sp,4
     82c:	0000                	unimp
     82e:	06cc                	addi	a1,sp,836
     830:	0000                	unimp
     832:	0046                	c.slli	zero,0x11
     834:	0000                	unimp
     836:	9c01                	0x9c01
     838:	0000042b          	0x42b
     83c:	9008                	0x9008
     83e:	0006                	c.slli	zero,0x1
     840:	0100                	addi	s0,sp,128
     842:	6229013b          	0x6229013b
     846:	0000                	unimp
     848:	6000                	flw	fs0,0(s0)
     84a:	09000003          	lb	zero,144(zero) # 90 <MSTATUS_MIE+0x88>
     84e:	05a9                	addi	a1,a1,10
     850:	0000                	unimp
     852:	3d01                	jal	662 <eclic_get_irq_lvl_abs+0x20>
     854:	0a01                	addi	s4,s4,0
     856:	0048                	addi	a0,sp,4
     858:	0000                	unimp
     85a:	038c                	addi	a1,sp,448
     85c:	0000                	unimp
     85e:	6509                	lui	a0,0x2
     860:	0006                	c.slli	zero,0x1
     862:	0100                	addi	s0,sp,128
     864:	0142                	slli	sp,sp,0x10
     866:	480a                	lw	a6,128(sp)
     868:	0000                	unimp
     86a:	b100                	fsd	fs0,32(a0)
     86c:	09000003          	lb	zero,144(zero) # 90 <MSTATUS_MIE+0x88>
     870:	0000058f          	0x58f
     874:	4701                	li	a4,0
     876:	0a01                	addi	s4,s4,0
     878:	0048                	addi	a0,sp,4
     87a:	0000                	unimp
     87c:	000003d7          	0x3d7
     880:	9312                	add	t1,t1,tp
     882:	0008                	0x8
     884:	d600                	sw	s0,40(a2)
     886:	0006                	c.slli	zero,0x1
     888:	6000                	flw	fs0,0(s0)
     88a:	0001                	nop
     88c:	0100                	addi	s0,sp,128
     88e:	0142                	slli	sp,sp,0x10
     890:	2114                	fld	fa3,0(a0)
     892:	0004                	0x4
     894:	0d00                	addi	s0,sp,656
     896:	08a4                	addi	s1,sp,88
     898:	0000                	unimp
     89a:	03f8                	addi	a4,sp,460
     89c:	0000                	unimp
     89e:	1300                	addi	s0,sp,416
     8a0:	06d6                	slli	a3,a3,0x15
     8a2:	0000                	unimp
     8a4:	00000733          	add	a4,zero,zero
     8a8:	1100                	addi	s0,sp,160
     8aa:	05ce                	slli	a1,a1,0x13
     8ac:	0000                	unimp
     8ae:	2301                	jal	dae <CSR_MTVT2+0x5c2>
     8b0:	0901                	addi	s2,s2,0
     8b2:	0048                	addi	a0,sp,4
     8b4:	0000                	unimp
     8b6:	0680                	addi	s0,sp,832
     8b8:	0000                	unimp
     8ba:	004c                	addi	a1,sp,4
     8bc:	0000                	unimp
     8be:	9c01                	0x9c01
     8c0:	000004d3          	fadd.s	fs1,ft0,ft0,rne
     8c4:	9008                	0x9008
     8c6:	0006                	c.slli	zero,0x1
     8c8:	0100                	addi	s0,sp,128
     8ca:	62290123          	sb	sp,1570(s2) # 861622 <CSR_MTVT2+0x860e36>
     8ce:	0000                	unimp
     8d0:	1900                	addi	s0,sp,176
     8d2:	0004                	0x4
     8d4:	0800                	addi	s0,sp,16
     8d6:	0000058f          	0x58f
     8da:	2301                	jal	dda <CSR_MTVT2+0x5ee>
     8dc:	3901                	jal	4ec <eclic_get_intctrl+0xe>
     8de:	0048                	addi	a0,sp,4
     8e0:	0000                	unimp
     8e2:	0445                	addi	s0,s0,17
     8e4:	0000                	unimp
     8e6:	a909                	j	cf8 <CSR_MTVT2+0x50c>
     8e8:	0005                	c.nop	1
     8ea:	0100                	addi	s0,sp,128
     8ec:	0125                	addi	sp,sp,9
     8ee:	480a                	lw	a6,128(sp)
     8f0:	0000                	unimp
     8f2:	7100                	flw	fs0,32(a0)
     8f4:	0004                	0x4
     8f6:	1400                	addi	s0,sp,544
     8f8:	06e4                	addi	s1,sp,844
     8fa:	0000                	unimp
     8fc:	2f01                	jal	100c <CSR_MTVT2+0x820>
     8fe:	0a01                	addi	s4,s4,0
     900:	0048                	addi	a0,sp,4
     902:	0000                	unimp
     904:	9312                	add	t1,t1,tp
     906:	0008                	0x8
     908:	9400                	0x9400
     90a:	0006                	c.slli	zero,0x1
     90c:	4800                	lw	s0,16(s0)
     90e:	0001                	nop
     910:	0100                	addi	s0,sp,128
     912:	a11c012f          	0xa11c012f
     916:	0004                	0x4
     918:	0b00                	addi	s0,sp,400
     91a:	08a4                	addi	s1,sp,88
     91c:	0000                	unimp
     91e:	0a00                	addi	s0,sp,272
     920:	08b1                	addi	a7,a7,12
     922:	0000                	unimp
     924:	06be                	slli	a3,a3,0xf
     926:	0000                	unimp
     928:	0004                	0x4
     92a:	0000                	unimp
     92c:	3501                	jal	72c <eclic_set_vmode+0x8>
     92e:	0201                	addi	tp,tp,0
     930:	04c9                	addi	s1,s1,18
     932:	0000                	unimp
     934:	ca0d                	beqz	a2,966 <CSR_MTVT2+0x17a>
     936:	0008                	0x8
     938:	8400                	0x8400
     93a:	0004                	0x4
     93c:	0d00                	addi	s0,sp,656
     93e:	08be                	slli	a7,a7,0xf
     940:	0000                	unimp
     942:	00000497          	auipc	s1,0x0
     946:	1300                	addi	s0,sp,416
     948:	068c                	addi	a1,sp,832
     94a:	0000                	unimp
     94c:	00000733          	add	a4,zero,zero
     950:	1100                	addi	s0,sp,160
     952:	00000633          	add	a2,zero,zero
     956:	1101                	addi	sp,sp,-32
     958:	0901                	addi	s2,s2,0
     95a:	0048                	addi	a0,sp,4
     95c:	0000                	unimp
     95e:	0642                	slli	a2,a2,0x10
     960:	0000                	unimp
     962:	003e                	c.slli	zero,0xf
     964:	0000                	unimp
     966:	9c01                	0x9c01
     968:	0000055b          	0x55b
     96c:	9008                	0x9008
     96e:	0006                	c.slli	zero,0x1
     970:	0100                	addi	s0,sp,128
     972:	0111                	addi	sp,sp,4
     974:	6228                	flw	fa0,64(a2)
     976:	0000                	unimp
     978:	ad00                	fsd	fs0,24(a0)
     97a:	0004                	0x4
     97c:	0900                	addi	s0,sp,144
     97e:	05a9                	addi	a1,a1,10
     980:	0000                	unimp
     982:	1301                	addi	t1,t1,-32
     984:	0b01                	addi	s6,s6,0
     986:	0048                	addi	a0,sp,4
     988:	0000                	unimp
     98a:	04d9                	addi	s1,s1,22
     98c:	0000                	unimp
     98e:	6509                	lui	a0,0x2
     990:	0006                	c.slli	zero,0x1
     992:	0100                	addi	s0,sp,128
     994:	0118                	addi	a4,sp,128
     996:	0000480b          	0x480b
     99a:	fe00                	fsw	fs0,56(a2)
     99c:	0004                	0x4
     99e:	0900                	addi	s0,sp,144
     9a0:	0641                	addi	a2,a2,16
     9a2:	0000                	unimp
     9a4:	1d01                	addi	s10,s10,-32
     9a6:	0b01                	addi	s6,s6,0
     9a8:	0048                	addi	a0,sp,4
     9aa:	0000                	unimp
     9ac:	04fe                	slli	s1,s1,0x1f
     9ae:	0000                	unimp
     9b0:	9312                	add	t1,t1,tp
     9b2:	0008                	0x8
     9b4:	4c00                	lw	s0,24(s0)
     9b6:	0006                	c.slli	zero,0x1
     9b8:	3000                	fld	fs0,32(s0)
     9ba:	0001                	nop
     9bc:	0100                	addi	s0,sp,128
     9be:	0118                	addi	a4,sp,128
     9c0:	5115                	li	sp,-27
     9c2:	0005                	c.nop	1
     9c4:	0d00                	addi	s0,sp,656
     9c6:	08a4                	addi	s1,sp,88
     9c8:	0000                	unimp
     9ca:	052e                	slli	a0,a0,0xb
     9cc:	0000                	unimp
     9ce:	1300                	addi	s0,sp,416
     9d0:	064c                	addi	a1,sp,772
     9d2:	0000                	unimp
     9d4:	00000733          	add	a4,zero,zero
     9d8:	1500                	addi	s0,sp,672
     9da:	000007a7          	0x7a7
     9de:	fd01                	bnez	a0,8f6 <CSR_MTVT2+0x10a>
     9e0:	f006                	fsw	ft1,32(sp)
     9e2:	0005                	c.nop	1
     9e4:	5200                	lw	s0,32(a2)
     9e6:	0000                	unimp
     9e8:	0100                	addi	s0,sp,128
     9ea:	109c                	addi	a5,sp,96
     9ec:	0006                	c.slli	zero,0x1
     9ee:	1600                	addi	s0,sp,800
     9f0:	0690                	addi	a2,sp,832
     9f2:	0000                	unimp
     9f4:	fd01                	bnez	a0,90c <CSR_MTVT2+0x120>
     9f6:	6225                	lui	tp,0x9
     9f8:	0000                	unimp
     9fa:	4f00                	lw	s0,24(a4)
     9fc:	0005                	c.nop	1
     9fe:	1600                	addi	s0,sp,800
     a00:	0641                	addi	a2,a2,16
     a02:	0000                	unimp
     a04:	fd01                	bnez	a0,91c <CSR_MTVT2+0x130>
     a06:	4835                	li	a6,13
     a08:	0000                	unimp
     a0a:	7b00                	flw	fs0,48(a4)
     a0c:	0005                	c.nop	1
     a0e:	1700                	addi	s0,sp,928
     a10:	05a9                	addi	a1,a1,10
     a12:	0000                	unimp
     a14:	ff01                	bnez	a4,92c <CSR_MTVT2+0x140>
     a16:	0000480b          	0x480b
     a1a:	9c00                	0x9c00
     a1c:	0005                	c.nop	1
     a1e:	1800                	addi	s0,sp,48
     a20:	766c                	flw	fa1,108(a2)
     a22:	006c                	addi	a1,sp,12
     a24:	0501                	addi	a0,a0,0
     a26:	0b01                	addi	s6,s6,0
     a28:	0048                	addi	a0,sp,4
     a2a:	0000                	unimp
     a2c:	05c1                	addi	a1,a1,16
     a2e:	0000                	unimp
     a30:	e409                	bnez	s0,a3a <CSR_MTVT2+0x24e>
     a32:	0006                	c.slli	zero,0x1
     a34:	0100                	addi	s0,sp,128
     a36:	0108                	addi	a0,sp,128
     a38:	0000480b          	0x480b
     a3c:	de00                	sw	s0,56(a2)
     a3e:	0005                	c.nop	1
     a40:	1200                	addi	s0,sp,288
     a42:	00000893          	li	a7,0
     a46:	0608                	addi	a0,sp,768
     a48:	0000                	unimp
     a4a:	0118                	addi	a4,sp,128
     a4c:	0000                	unimp
     a4e:	0801                	addi	a6,a6,0
     a50:	1d01                	addi	s10,s10,-32
     a52:	05de                	slli	a1,a1,0x17
     a54:	0000                	unimp
     a56:	0008a40b          	0x8a40b
     a5a:	0000                	unimp
     a5c:	b10a                	fsd	ft2,160(sp)
     a5e:	0008                	0x8
     a60:	3400                	fld	fs0,40(s0)
     a62:	0006                	c.slli	zero,0x1
     a64:	0400                	addi	s0,sp,512
     a66:	0000                	unimp
     a68:	0100                	addi	s0,sp,128
     a6a:	010e                	slli	sp,sp,0x3
     a6c:	00060603          	lb	a2,0(a2)
     a70:	0d00                	addi	s0,sp,656
     a72:	08ca                	slli	a7,a7,0x12
     a74:	0000                	unimp
     a76:	05ff                	0x5ff
     a78:	0000                	unimp
     a7a:	be0d                	j	5ac <eclic_set_irq_lvl+0x50>
     a7c:	0008                	0x8
     a7e:	1200                	addi	s0,sp,288
     a80:	0006                	c.slli	zero,0x1
     a82:	0000                	unimp
     a84:	0005fe13          	andi	t3,a1,0
     a88:	3300                	fld	fs0,32(a4)
     a8a:	00000007          	0x7
     a8e:	f319                	bnez	a4,994 <CSR_MTVT2+0x1a8>
     a90:	0005                	c.nop	1
     a92:	0100                	addi	s0,sp,128
     a94:	09ec                	addi	a1,sp,220
     a96:	0048                	addi	a0,sp,4
     a98:	0000                	unimp
     a9a:	05b0                	addi	a2,sp,712
     a9c:	0000                	unimp
     a9e:	0040                	addi	s0,sp,4
     aa0:	0000                	unimp
     aa2:	9c01                	0x9c01
     aa4:	0692                	slli	a3,a3,0x4
     aa6:	0000                	unimp
     aa8:	9016                	c.add	zero,t0
     aaa:	0006                	c.slli	zero,0x1
     aac:	0100                	addi	s0,sp,128
     aae:	24ec                	fld	fa1,200(s1)
     ab0:	0062                	c.slli	zero,0x18
     ab2:	0000                	unimp
     ab4:	0628                	addi	a0,sp,776
     ab6:	0000                	unimp
     ab8:	0005a917          	auipc	s2,0x5a
     abc:	0100                	addi	s0,sp,128
     abe:	0bee                	slli	s7,s7,0x1b
     ac0:	0048                	addi	a0,sp,4
     ac2:	0000                	unimp
     ac4:	0654                	addi	a3,sp,772
     ac6:	0000                	unimp
     ac8:	00066517          	auipc	a0,0x66
     acc:	0100                	addi	s0,sp,128
     ace:	00480bf3          	0x480bf3
     ad2:	0000                	unimp
     ad4:	0679                	addi	a2,a2,30
     ad6:	0000                	unimp
     ad8:	6c1a                	flw	fs8,132(sp)
     ada:	6c76                	flw	fs8,92(sp)
     adc:	0100                	addi	s0,sp,128
     ade:	0bf8                	addi	a4,sp,476
     ae0:	0048                	addi	a0,sp,4
     ae2:	0000                	unimp
     ae4:	069f 0000 931b      	0x931b0000069f
     aea:	0008                	0x8
     aec:	ba00                	fsd	fs0,48(a2)
     aee:	0005                	c.nop	1
     af0:	0000                	unimp
     af2:	0001                	nop
     af4:	0100                	addi	s0,sp,128
     af6:	068815f3          	csrrw	a1,0x68,a6
     afa:	0000                	unimp
     afc:	a40d                	j	d1e <CSR_MTVT2+0x532>
     afe:	0008                	0x8
     b00:	bd00                	fsd	fs0,56(a0)
     b02:	0006                	c.slli	zero,0x1
     b04:	0000                	unimp
     b06:	0005ba13          	sltiu	s4,a1,0
     b0a:	3300                	fld	fs0,32(a4)
     b0c:	00000007          	0x7
     b10:	f415                	bnez	s0,a3c <CSR_MTVT2+0x250>
     b12:	0006                	c.slli	zero,0x1
     b14:	0100                	addi	s0,sp,128
     b16:	06d5                	addi	a3,a3,21
     b18:	055c                	addi	a5,sp,644
     b1a:	0000                	unimp
     b1c:	0054                	addi	a3,sp,4
     b1e:	0000                	unimp
     b20:	9c01                	0x9c01
     b22:	00000733          	add	a4,zero,zero
     b26:	9016                	c.add	zero,t0
     b28:	0006                	c.slli	zero,0x1
     b2a:	0100                	addi	s0,sp,128
     b2c:	21d5                	jal	1010 <CSR_MTVT2+0x824>
     b2e:	0062                	c.slli	zero,0x18
     b30:	0000                	unimp
     b32:	06de                	slli	a3,a3,0x17
     b34:	0000                	unimp
     b36:	6c1c                	flw	fa5,24(s0)
     b38:	6c76                	flw	fs8,92(sp)
     b3a:	0100                	addi	s0,sp,128
     b3c:	31d5                	jal	820 <CSR_MTVT2+0x34>
     b3e:	0048                	addi	a0,sp,4
     b40:	0000                	unimp
     b42:	070a                	slli	a4,a4,0x2
     b44:	0000                	unimp
     b46:	0005a917          	auipc	s2,0x5a
     b4a:	0100                	addi	s0,sp,128
     b4c:	00480bd7          	0x480bd7
     b50:	0000                	unimp
     b52:	0749                	addi	a4,a4,18
     b54:	0000                	unimp
     b56:	0006e417          	auipc	s0,0x6e
     b5a:	0100                	addi	s0,sp,128
     b5c:	0be2                	slli	s7,s7,0x18
     b5e:	0048                	addi	a0,sp,4
     b60:	0000                	unimp
     b62:	076e                	slli	a4,a4,0x1b
     b64:	0000                	unimp
     b66:	0008931b          	0x8931b
     b6a:	7a00                	flw	fs0,48(a2)
     b6c:	0005                	c.nop	1
     b6e:	e000                	fsw	fs0,0(s0)
     b70:	0000                	unimp
     b72:	0100                	addi	s0,sp,128
     b74:	1de2                	slli	s11,s11,0x38
     b76:	0702                	c.slli64	a4
     b78:	0000                	unimp
     b7a:	0008a40b          	0x8a40b
     b7e:	0000                	unimp
     b80:	b11d                	j	7a6 <_data_load+0xa>
     b82:	0008                	0x8
     b84:	a400                	fsd	fs0,8(s0)
     b86:	0005                	c.nop	1
     b88:	0400                	addi	s0,sp,512
     b8a:	0000                	unimp
     b8c:	0100                	addi	s0,sp,128
     b8e:	03e8                	addi	a0,sp,460
     b90:	0729                	addi	a4,a4,10
     b92:	0000                	unimp
     b94:	ca0d                	beqz	a2,bc6 <CSR_MTVT2+0x3da>
     b96:	0008                	0x8
     b98:	8f00                	0x8f00
     b9a:	0d000007          	0xd000007
     b9e:	08be                	slli	a7,a7,0xf
     ba0:	0000                	unimp
     ba2:	07a2                	slli	a5,a5,0x8
     ba4:	0000                	unimp
     ba6:	1300                	addi	s0,sp,416
     ba8:	0568                	addi	a0,sp,652
     baa:	0000                	unimp
     bac:	00000733          	add	a4,zero,zero
     bb0:	1900                	addi	s0,sp,176
     bb2:	059f 0000 cd01      	0xcd010000059f
     bb8:	4809                	li	a6,2
     bba:	0000                	unimp
     bbc:	4e00                	lw	s0,24(a2)
     bbe:	0005                	c.nop	1
     bc0:	0e00                	addi	s0,sp,784
     bc2:	0000                	unimp
     bc4:	0100                	addi	s0,sp,128
     bc6:	6e9c                	flw	fa5,24(a3)
     bc8:	17000007          	0x17000007
     bcc:	05a9                	addi	a1,a1,10
     bce:	0000                	unimp
     bd0:	cf01                	beqz	a4,be8 <CSR_MTVT2+0x3fc>
     bd2:	0000480b          	0x480b
     bd6:	b800                	fsd	fs0,48(s0)
     bd8:	1e000007          	0x1e000007
     bdc:	0828                	addi	a0,sp,24
     bde:	0000                	unimp
     be0:	054e                	slli	a0,a0,0x13
     be2:	0000                	unimp
     be4:	0008                	0x8
     be6:	0000                	unimp
     be8:	cf01                	beqz	a4,c00 <CSR_MTVT2+0x414>
     bea:	0014                	0x14
     bec:	9715                	srai	a4,a4,0x25
     bee:	0006                	c.slli	zero,0x1
     bf0:	0100                	addi	s0,sp,128
     bf2:	06c1                	addi	a3,a3,16
     bf4:	0536                	slli	a0,a0,0xd
     bf6:	0000                	unimp
     bf8:	0018                	0x18
     bfa:	0000                	unimp
     bfc:	9c01                	0x9c01
     bfe:	07ed                	addi	a5,a5,27
     c00:	0000                	unimp
     c02:	a916                	fsd	ft5,144(sp)
     c04:	0005                	c.nop	1
     c06:	0100                	addi	s0,sp,128
     c08:	1fc1                	addi	t6,t6,-16
     c0a:	0048                	addi	a0,sp,4
     c0c:	0000                	unimp
     c0e:	07d1                	addi	a5,a5,20
     c10:	0000                	unimp
     c12:	0007bd17          	auipc	s10,0x7b
     c16:	0100                	addi	s0,sp,128
     c18:	00480bc3          	fmadd.s	fs7,fa6,ft4,ft0,rne
     c1c:	0000                	unimp
     c1e:	07f2                	slli	a5,a5,0x1c
     c20:	0000                	unimp
     c22:	00071317          	auipc	t1,0x71
     c26:	0100                	addi	s0,sp,128
     c28:	0bc6                	slli	s7,s7,0x11
     c2a:	0048                	addi	a0,sp,4
     c2c:	0000                	unimp
     c2e:	0819                	addi	a6,a6,6
     c30:	0000                	unimp
     c32:	b01f 0005 0100      	0x1000005b01f
     c38:	00480bc7          	fmsub.s	fs7,fa6,ft4,ft0,rne
     c3c:	0000                	unimp
     c3e:	5a01                	li	s4,-32
     c40:	281e                	fld	fa6,448(sp)
     c42:	0008                	0x8
     c44:	3600                	fld	fs0,40(a2)
     c46:	0005                	c.nop	1
     c48:	0800                	addi	s0,sp,16
     c4a:	0000                	unimp
     c4c:	0100                	addi	s0,sp,128
     c4e:	19c6                	slli	s3,s3,0x31
     c50:	3520                	fld	fs0,104(a0)
     c52:	0008                	0x8
     c54:	4800                	lw	s0,16(s0)
     c56:	0005                	c.nop	1
     c58:	0400                	addi	s0,sp,512
     c5a:	0000                	unimp
     c5c:	0100                	addi	s0,sp,128
     c5e:	03c9                	addi	t2,t2,18
     c60:	420d                	li	tp,3
     c62:	0008                	0x8
     c64:	2c00                	fld	fs0,24(s0)
     c66:	0008                	0x8
     c68:	0000                	unimp
     c6a:	2100                	fld	fs0,0(a0)
     c6c:	055e                	slli	a0,a0,0x17
     c6e:	0000                	unimp
     c70:	bc01                	j	680 <eclic_set_irq_priority>
     c72:	4809                	li	a6,2
     c74:	0000                	unimp
     c76:	2c00                	fld	fs0,24(s0)
     c78:	0005                	c.nop	1
     c7a:	0a00                	addi	s0,sp,272
     c7c:	0000                	unimp
     c7e:	0100                	addi	s0,sp,128
     c80:	159c                	addi	a5,sp,736
     c82:	05e5                	addi	a1,a1,25
     c84:	0000                	unimp
     c86:	b801                	j	496 <eclic_enable_interrupt+0x10>
     c88:	2206                	fld	ft4,64(sp)
     c8a:	0005                	c.nop	1
     c8c:	0a00                	addi	s0,sp,272
     c8e:	0000                	unimp
     c90:	0100                	addi	s0,sp,128
     c92:	289c                	fld	fa5,16(s1)
     c94:	0008                	0x8
     c96:	2200                	fld	fs0,0(a2)
     c98:	746d                	lui	s0,0xffffb
     c9a:	0068                	addi	a0,sp,12
     c9c:	b801                	j	4ac <eclic_set_pending+0x4>
     c9e:	481d                	li	a6,7
     ca0:	0000                	unimp
     ca2:	0100                	addi	s0,sp,128
     ca4:	005a                	c.slli	zero,0x16
     ca6:	0007cc23          	0x7cc23
     caa:	0100                	addi	s0,sp,128
     cac:	09b4                	addi	a3,sp,216
     cae:	0048                	addi	a0,sp,4
     cb0:	0000                	unimp
     cb2:	2401                	jal	eb2 <CSR_MTVT2+0x6c6>
     cb4:	0649                	addi	a2,a2,18
     cb6:	0000                	unimp
     cb8:	b001                	j	4b8 <eclic_set_pending+0x10>
     cba:	0106                	slli	sp,sp,0x1
     cbc:	0000084f          	fnmadd.s	fa6,ft0,ft0,ft0,rne
     cc0:	1725                	addi	a4,a4,-23
     cc2:	01000007          	0x1000007
     cc6:	21b0                	fld	fa2,64(a1)
     cc8:	0048                	addi	a0,sp,4
     cca:	0000                	unimp
     ccc:	2600                	fld	fs0,8(a2)
     cce:	066d                	addi	a2,a2,27
     cd0:	0000                	unimp
     cd2:	ac01                	j	ee2 <CSR_MTVT2+0x6f6>
     cd4:	4809                	li	a6,2
     cd6:	0000                	unimp
     cd8:	0100                	addi	s0,sp,128
     cda:	086d                	addi	a6,a6,27
     cdc:	0000                	unimp
     cde:	9025                	srli	s0,s0,0x29
     ce0:	0006                	c.slli	zero,0x1
     ce2:	0100                	addi	s0,sp,128
     ce4:	26ac                	fld	fa1,72(a3)
     ce6:	0062                	c.slli	zero,0x18
     ce8:	0000                	unimp
     cea:	2400                	fld	fs0,8(s0)
     cec:	0736                	slli	a4,a4,0xd
     cee:	0000                	unimp
     cf0:	a801                	j	d00 <CSR_MTVT2+0x514>
     cf2:	0106                	slli	sp,sp,0x1
     cf4:	00000893          	li	a7,0
     cf8:	9025                	srli	s0,s0,0x29
     cfa:	0006                	c.slli	zero,0x1
     cfc:	0100                	addi	s0,sp,128
     cfe:	22a8                	fld	fa0,64(a3)
     d00:	0062                	c.slli	zero,0x18
     d02:	0000                	unimp
     d04:	7025                	c.lui	zero,0xfffe9
     d06:	0005                	c.nop	1
     d08:	0100                	addi	s0,sp,128
     d0a:	32a8                	fld	fa0,96(a3)
     d0c:	0048                	addi	a0,sp,4
     d0e:	0000                	unimp
     d10:	2600                	fld	fs0,8(a2)
     d12:	0000065b          	0x65b
     d16:	a401                	j	f16 <CSR_MTVT2+0x72a>
     d18:	4809                	li	a6,2
     d1a:	0000                	unimp
     d1c:	0100                	addi	s0,sp,128
     d1e:	08b1                	addi	a7,a7,12
     d20:	0000                	unimp
     d22:	9025                	srli	s0,s0,0x29
     d24:	0006                	c.slli	zero,0x1
     d26:	0100                	addi	s0,sp,128
     d28:	26a4                	fld	fs1,72(a3)
     d2a:	0062                	c.slli	zero,0x18
     d2c:	0000                	unimp
     d2e:	2400                	fld	fs0,8(s0)
     d30:	05bc                	addi	a5,sp,712
     d32:	0000                	unimp
     d34:	a001                	j	d34 <CSR_MTVT2+0x548>
     d36:	0106                	slli	sp,sp,0x1
     d38:	000008d7          	0x8d7
     d3c:	9025                	srli	s0,s0,0x29
     d3e:	0006                	c.slli	zero,0x1
     d40:	0100                	addi	s0,sp,128
     d42:	22a0                	fld	fs0,64(a3)
     d44:	0062                	c.slli	zero,0x18
     d46:	0000                	unimp
     d48:	6525                	lui	a0,0x9
     d4a:	0006                	c.slli	zero,0x1
     d4c:	0100                	addi	s0,sp,128
     d4e:	32a0                	fld	fs0,96(a3)
     d50:	0048                	addi	a0,sp,4
     d52:	0000                	unimp
     d54:	1500                	addi	s0,sp,672
     d56:	07f1                	addi	a5,a5,28
     d58:	0000                	unimp
     d5a:	9c01                	0x9c01
     d5c:	bc06                	fsd	ft1,56(sp)
     d5e:	0004                	0x4
     d60:	1200                	addi	s0,sp,288
     d62:	0000                	unimp
     d64:	0100                	addi	s0,sp,128
     d66:	fe9c                	fsw	fa5,56(a3)
     d68:	0008                	0x8
     d6a:	1600                	addi	s0,sp,800
     d6c:	0690                	addi	a2,sp,832
     d6e:	0000                	unimp
     d70:	9c01                	0x9c01
     d72:	00006223          	0x6223
     d76:	3f00                	fld	fs0,56(a4)
     d78:	0008                	0x8
     d7a:	0000                	unimp
     d7c:	0515                	addi	a0,a0,5
     d7e:	0008                	0x8
     d80:	0100                	addi	s0,sp,128
     d82:	0698                	addi	a4,sp,832
     d84:	04a8                	addi	a0,sp,584
     d86:	0000                	unimp
     d88:	0014                	0x14
     d8a:	0000                	unimp
     d8c:	9c01                	0x9c01
     d8e:	0925                	addi	s2,s2,9
     d90:	0000                	unimp
     d92:	9016                	c.add	zero,t0
     d94:	0006                	c.slli	zero,0x1
     d96:	0100                	addi	s0,sp,128
     d98:	2198                	fld	fa4,0(a1)
     d9a:	0062                	c.slli	zero,0x18
     d9c:	0000                	unimp
     d9e:	0871                	addi	a6,a6,28
     da0:	0000                	unimp
     da2:	1500                	addi	s0,sp,672
     da4:	0854                	addi	a3,sp,20
     da6:	0000                	unimp
     da8:	9401                	srai	s0,s0,0x20
     daa:	9806                	add	a6,a6,ra
     dac:	0004                	0x4
     dae:	1000                	addi	s0,sp,32
     db0:	0000                	unimp
     db2:	0100                	addi	s0,sp,128
     db4:	4c9c                	lw	a5,24(s1)
     db6:	0009                	c.nop	2
     db8:	1600                	addi	s0,sp,800
     dba:	0690                	addi	a2,sp,832
     dbc:	0000                	unimp
     dbe:	9401                	srai	s0,s0,0x20
     dc0:	6228                	flw	fa0,64(a2)
     dc2:	0000                	unimp
     dc4:	a300                	fsd	fs0,0(a4)
     dc6:	0008                	0x8
     dc8:	0000                	unimp
     dca:	f215                	bnez	a2,cee <CSR_MTVT2+0x502>
     dcc:	0000                	unimp
     dce:	0100                	addi	s0,sp,128
     dd0:	0690                	addi	a2,sp,832
     dd2:	0486                	slli	s1,s1,0x1
     dd4:	0000                	unimp
     dd6:	0012                	c.slli	zero,0x4
     dd8:	0000                	unimp
     dda:	9c01                	0x9c01
     ddc:	00000973          	0x973
     de0:	9016                	c.add	zero,t0
     de2:	0006                	c.slli	zero,0x1
     de4:	0100                	addi	s0,sp,128
     de6:	2790                	fld	fa2,8(a5)
     de8:	0062                	c.slli	zero,0x18
     dea:	0000                	unimp
     dec:	08c4                	addi	s1,sp,84
     dee:	0000                	unimp
     df0:	1500                	addi	s0,sp,672
     df2:	00000053          	fadd.s	ft0,ft0,ft0,rne
     df6:	7801                	lui	a6,0xfffe0
     df8:	6406                	flw	fs0,64(sp)
     dfa:	0004                	0x4
     dfc:	2200                	fld	fs0,0(a2)
     dfe:	0000                	unimp
     e00:	0100                	addi	s0,sp,128
     e02:	d99c                	sw	a5,48(a1)
     e04:	0009                	c.nop	2
     e06:	1600                	addi	s0,sp,800
     e08:	082c                	addi	a1,sp,24
     e0a:	0000                	unimp
     e0c:	7801                	lui	a6,0xfffe0
     e0e:	621c                	flw	fa5,0(a2)
     e10:	0000                	unimp
     e12:	e500                	fsw	fs0,8(a0)
     e14:	0008                	0x8
     e16:	0300                	addi	s0,sp,384
     e18:	0000078b          	0x78b
     e1c:	7b01                	lui	s6,0xfffe0
     e1e:	6e1d                	lui	t3,0x7
     e20:	0000                	unimp
     e22:	2700                	fld	fs0,8(a4)
     e24:	7470                	flw	fa2,108(s0)
     e26:	0072                	c.slli	zero,0x1c
     e28:	8401                	c.srai64	s0
     e2a:	0009b30f          	0x9b30f
     e2e:	0100                	addi	s0,sp,128
     e30:	285f 9904 0009      	0x99904285f
     e36:	2900                	fld	fs0,16(a0)
     e38:	067f                	0x67f
     e3a:	0000                	unimp
     e3c:	8601                	c.srai64	a2
     e3e:	0009b30f          	0x9b30f
     e42:	8000                	0x8000
     e44:	80a0                	0x80a0
     e46:	7d90                	flw	fa2,56(a1)
     e48:	581f 0005 0100      	0x1000005581f
     e4e:	09b30f87          	0x9b30f87
     e52:	0000                	unimp
     e54:	5a01                	li	s4,-32
     e56:	2a00                	fld	fs0,16(a2)
     e58:	0526                	slli	a0,a0,0x9
     e5a:	0000                	unimp
     e5c:	6401                	0x6401
     e5e:	620a                	flw	ft4,128(sp)
     e60:	0000                	unimp
     e62:	5200                	lw	s0,32(a2)
     e64:	0004                	0x4
     e66:	1200                	addi	s0,sp,288
     e68:	0000                	unimp
     e6a:	0100                	addi	s0,sp,128
     e6c:	239c                	fld	fa5,0(a5)
     e6e:	000a                	c.slli	zero,0x2
     e70:	2b00                	fld	fs0,16(a4)
     e72:	0782                	c.slli64	a5
     e74:	0000                	unimp
     e76:	6601                	0x6601
     e78:	620c                	flw	fa1,0(a2)
     e7a:	0000                	unimp
     e7c:	2c00                	fld	fs0,24(s0)
     e7e:	045a                	slli	s0,s0,0x16
     e80:	0000                	unimp
     e82:	00000a23          	sb	zero,20(zero) # 14 <MSTATUS_MIE+0xc>
     e86:	0a12                	slli	s4,s4,0x4
     e88:	0000                	unimp
     e8a:	012d                	addi	sp,sp,11
     e8c:	015a                	slli	sp,sp,0x16
     e8e:	0031                	c.nop	12
     e90:	642e                	flw	fs0,200(sp)
     e92:	0004                	0x4
     e94:	2300                	fld	fs0,0(a4)
     e96:	000a                	c.slli	zero,0x2
     e98:	2d00                	fld	fs0,24(a0)
     e9a:	5a01                	li	s4,-32
     e9c:	0802                	c.slli64	a6
     e9e:	0064                	addi	s1,sp,12
     ea0:	1900                	addi	s0,sp,176
     ea2:	077a                	slli	a4,a4,0x1e
     ea4:	0000                	unimp
     ea6:	4d01                	li	s10,0
     ea8:	6224                	flw	fs1,64(a2)
     eaa:	0000                	unimp
     eac:	0000                	unimp
     eae:	0004                	0x4
     eb0:	5200                	lw	s0,32(a2)
     eb2:	0000                	unimp
     eb4:	0100                	addi	s0,sp,128
     eb6:	1e9c                	addi	a5,sp,880
     eb8:	1c00000b          	0x1c00000b
     ebc:	006e                	c.slli	zero,0x1b
     ebe:	4d01                	li	s10,0
     ec0:	a03c                	fsd	fa5,64(s0)
     ec2:	0000                	unimp
     ec4:	0600                	addi	s0,sp,768
     ec6:	0009                	c.nop	2
     ec8:	1700                	addi	s0,sp,928
     eca:	0612                	slli	a2,a2,0x4
     ecc:	0000                	unimp
     ece:	4f01                	li	t5,0
     ed0:	620c                	flw	fa1,0(a2)
     ed2:	0000                	unimp
     ed4:	2700                	fld	fs0,8(a4)
     ed6:	0009                	c.nop	2
     ed8:	1f00                	addi	s0,sp,944
     eda:	00000817          	auipc	a6,0x0
     ede:	4f01                	li	t5,0
     ee0:	6219                	lui	tp,0x6
     ee2:	0000                	unimp
     ee4:	0100                	addi	s0,sp,128
     ee6:	1f5d                	addi	t5,t5,-9
     ee8:	0000076f          	jal	a4,ee8 <CSR_MTVT2+0x6fc>
     eec:	5001                	c.li	zero,-32
     eee:	620c                	flw	fa1,0(a2)
     ef0:	0000                	unimp
     ef2:	0100                	addi	s0,sp,128
     ef4:	1a5c                	addi	a5,sp,308
     ef6:	6d74                	flw	fa3,92(a0)
     ef8:	0070                	addi	a2,sp,12
     efa:	5301                	li	t1,-32
     efc:	620c                	flw	fa1,0(a2)
     efe:	0000                	unimp
     f00:	3a00                	fld	fs0,48(a2)
     f02:	0009                	c.nop	2
     f04:	1f00                	addi	s0,sp,944
     f06:	0706                	slli	a4,a4,0x1
     f08:	0000                	unimp
     f0a:	5801                	li	a6,-32
     f0c:	620c                	flw	fa1,0(a2)
     f0e:	0000                	unimp
     f10:	0100                	addi	s0,sp,128
     f12:	0605175b          	0x605175b
     f16:	0000                	unimp
     f18:	5e01                	li	t3,-32
     f1a:	620c                	flw	fa1,0(a2)
     f1c:	0000                	unimp
     f1e:	4d00                	lw	s0,24(a0)
     f20:	0009                	c.nop	2
     f22:	2f00                	fld	fs0,24(a4)
     f24:	041e                	slli	s0,s0,0x7
     f26:	0000                	unimp
     f28:	0004                	0x4
     f2a:	0000                	unimp
     f2c:	0ac1                	addi	s5,s5,16
     f2e:	0000                	unimp
     f30:	901f 0000 0100      	0x1000000901f
     f36:	1b58                	addi	a4,sp,436
     f38:	00000073          	ecall
     f3c:	5b01                	li	s6,-32
     f3e:	2f00                	fld	fs0,24(a4)
     f40:	0432                	slli	s0,s0,0xc
     f42:	0000                	unimp
     f44:	0004                	0x4
     f46:	0000                	unimp
     f48:	0add                	addi	s5,s5,23
     f4a:	0000                	unimp
     f4c:	901f 0000 0100      	0x1000000901f
     f52:	1b5e                	slli	s6,s6,0x37
     f54:	00000073          	ecall
     f58:	5e01                	li	t3,-32
     f5a:	3000                	fld	fs0,32(s0)
     f5c:	0c3c                	addi	a5,sp,536
     f5e:	0000                	unimp
     f60:	0400                	addi	s0,sp,512
     f62:	0000                	unimp
     f64:	0098                	addi	a4,sp,64
     f66:	0000                	unimp
     f68:	5001                	c.li	zero,-32
     f6a:	3019                	jal	770 <eclic_set_posedge_trig+0x4>
     f6c:	0cc1                	addi	s9,s9,16
     f6e:	0000                	unimp
     f70:	040a                	slli	s0,s0,0x2
     f72:	0000                	unimp
     f74:	00b0                	addi	a2,sp,72
     f76:	0000                	unimp
     f78:	5501                	li	a0,-32
     f7a:	0cc11e13          	0xcc11e13
     f7e:	0000                	unimp
     f80:	0412                	slli	s0,s0,0x4
     f82:	0000                	unimp
     f84:	0006                	c.slli	zero,0x1
     f86:	0000                	unimp
     f88:	5301                	li	t1,-32
     f8a:	3012                	fld	ft0,288(sp)
     f8c:	0cc1                	addi	s9,s9,16
     f8e:	0000                	unimp
     f90:	0422                	slli	s0,s0,0x8
     f92:	0000                	unimp
     f94:	00c8                	addi	a0,sp,68
     f96:	0000                	unimp
     f98:	5b01                	li	s6,-32
     f9a:	482a0013          	addi	zero,s4,1154 # fffe3482 <_stack_end+0xdffdb482>
     f9e:	0005                	c.nop	1
     fa0:	0100                	addi	s0,sp,128
     fa2:	007a0a43          	fmadd.s	fs4,fs4,ft7,ft0,rne
     fa6:	0000                	unimp
     fa8:	03ee                	slli	t2,t2,0x1b
     faa:	0000                	unimp
     fac:	0012                	c.slli	zero,0x4
     fae:	0000                	unimp
     fb0:	9c01                	0x9c01
     fb2:	0bad                	addi	s7,s7,11
     fb4:	0000                	unimp
     fb6:	ee10                	fsw	fa2,24(a2)
     fb8:	10000003          	lb	zero,256(zero) # 100 <MSTATUS_MIE+0xf8>
     fbc:	0000                	unimp
     fbe:	2700                	fld	fs0,8(a4)
     fc0:	6968                	flw	fa0,84(a0)
     fc2:	0100                	addi	s0,sp,128
     fc4:	0e46                	slli	t3,t3,0x11
     fc6:	0062                	c.slli	zero,0x18
     fc8:	0000                	unimp
     fca:	5b01                	li	s6,-32
     fcc:	006f6c27          	0x6f6c27
     fd0:	4701                	li	a4,0
     fd2:	620e                	flw	ft4,192(sp)
     fd4:	0000                	unimp
     fd6:	0100                	addi	s0,sp,128
     fd8:	2f5a                	fld	ft10,400(sp)
     fda:	03ee                	slli	t2,t2,0x1b
     fdc:	0000                	unimp
     fde:	0004                	0x4
     fe0:	0000                	unimp
     fe2:	00000b77          	0xb77
     fe6:	901f 0000 0100      	0x1000000901f
     fec:	1346                	slli	t1,t1,0x31
     fee:	00000073          	ecall
     ff2:	5b01                	li	s6,-32
     ff4:	2f00                	fld	fs0,24(a4)
     ff6:	03f2                	slli	t2,t2,0x1c
     ff8:	0000                	unimp
     ffa:	0004                	0x4
     ffc:	0000                	unimp
     ffe:	00000b93          	li	s7,0
    1002:	901f 0000 0100      	0x1000000901f
    1008:	00731347          	fmsub.s	ft6,ft6,ft7,ft0,rtz
    100c:	0000                	unimp
    100e:	5a01                	li	s4,-32
    1010:	1000                	addi	s0,sp,32
    1012:	03f6                	slli	t2,t2,0x1d
    1014:	0000                	unimp
    1016:	0004                	0x4
    1018:	0000                	unimp
    101a:	901f 0000 0100      	0x1000000901f
    1020:	0f48                	addi	a0,sp,916
    1022:	00000073          	ecall
    1026:	5f01                	li	t5,-32
    1028:	0000                	unimp
    102a:	2a00                	fld	fs0,16(a2)
    102c:	06a8                	addi	a0,sp,840
    102e:	0000                	unimp
    1030:	3901                	jal	c40 <CSR_MTVT2+0x454>
    1032:	7a0a                	flw	fs4,160(sp)
    1034:	0000                	unimp
    1036:	dc00                	sw	s0,56(s0)
    1038:	12000003          	lb	zero,288(zero) # 120 <MSTATUS_MIE+0x118>
    103c:	0000                	unimp
    103e:	0100                	addi	s0,sp,128
    1040:	3c9c                	fld	fa5,56(s1)
    1042:	000c                	0xc
    1044:	1000                	addi	s0,sp,32
    1046:	03dc                	addi	a5,sp,452
    1048:	0000                	unimp
    104a:	0010                	0x10
    104c:	0000                	unimp
    104e:	00696827          	0x696827
    1052:	3c01                	jal	a62 <CSR_MTVT2+0x276>
    1054:	620e                	flw	ft4,192(sp)
    1056:	0000                	unimp
    1058:	0100                	addi	s0,sp,128
    105a:	6f6c275b          	0x6f6c275b
    105e:	0100                	addi	s0,sp,128
    1060:	0e3d                	addi	t3,t3,15
    1062:	0062                	c.slli	zero,0x18
    1064:	0000                	unimp
    1066:	5a01                	li	s4,-32
    1068:	0003dc2f          	0x3dc2f
    106c:	0400                	addi	s0,sp,512
    106e:	0000                	unimp
    1070:	0600                	addi	s0,sp,768
    1072:	000c                	0xc
    1074:	1f00                	addi	s0,sp,944
    1076:	0090                	addi	a2,sp,64
    1078:	0000                	unimp
    107a:	3c01                	jal	a8a <CSR_MTVT2+0x29e>
    107c:	00007313          	andi	t1,zero,0
    1080:	0100                	addi	s0,sp,128
    1082:	e02f005b          	0xe02f005b
    1086:	04000003          	lb	zero,64(zero) # 40 <MSTATUS_MIE+0x38>
    108a:	0000                	unimp
    108c:	2200                	fld	fs0,0(a2)
    108e:	000c                	0xc
    1090:	1f00                	addi	s0,sp,944
    1092:	0090                	addi	a2,sp,64
    1094:	0000                	unimp
    1096:	3d01                	jal	ea6 <CSR_MTVT2+0x6ba>
    1098:	00007313          	andi	t1,zero,0
    109c:	0100                	addi	s0,sp,128
    109e:	005a                	c.slli	zero,0x16
    10a0:	e410                	fsw	fa2,8(s0)
    10a2:	04000003          	lb	zero,64(zero) # 40 <MSTATUS_MIE+0x38>
    10a6:	0000                	unimp
    10a8:	1f00                	addi	s0,sp,944
    10aa:	0090                	addi	a2,sp,64
    10ac:	0000                	unimp
    10ae:	3e01                	jal	bbe <CSR_MTVT2+0x3d2>
    10b0:	0000730f          	0x730f
    10b4:	0100                	addi	s0,sp,128
    10b6:	005f 0000 1723      	0x17230000005f
    10bc:	0005                	c.nop	1
    10be:	0100                	addi	s0,sp,128
    10c0:	0a34                	addi	a3,sp,280
    10c2:	0062                	c.slli	zero,0x18
    10c4:	0000                	unimp
    10c6:	2a01                	jal	11d6 <CSR_MTVT2+0x9ea>
    10c8:	0834                	addi	a3,sp,24
    10ca:	0000                	unimp
    10cc:	2a01                	jal	11dc <CSR_MTVT2+0x9f0>
    10ce:	7a0a                	flw	fs4,160(sp)
    10d0:	0000                	unimp
    10d2:	be00                	fsd	fs0,56(a2)
    10d4:	10000003          	lb	zero,256(zero) # 100 <MSTATUS_MIE+0xf8>
    10d8:	0000                	unimp
    10da:	0100                	addi	s0,sp,128
    10dc:	b49c                	fsd	fa5,40(s1)
    10de:	000c                	0xc
    10e0:	3100                	fld	fs0,32(a0)
    10e2:	0068                	addi	a0,sp,12
    10e4:	0000                	unimp
    10e6:	00696827          	0x696827
    10ea:	2d01                	jal	16fa <CSR_MTVT2+0xf0e>
    10ec:	620e                	flw	ft4,192(sp)
    10ee:	0000                	unimp
    10f0:	0100                	addi	s0,sp,128
    10f2:	275e                	fld	fa4,464(sp)
    10f4:	6f6c                	flw	fa1,92(a4)
    10f6:	0100                	addi	s0,sp,128
    10f8:	0e2e                	slli	t3,t3,0xb
    10fa:	0062                	c.slli	zero,0x18
    10fc:	0000                	unimp
    10fe:	5a01                	li	s4,-32
    1100:	b430                	fsd	fa2,104(s0)
    1102:	000c                	0xc
    1104:	be00                	fsd	fs0,56(a2)
    1106:	80000003          	lb	zero,-2048(zero) # fffff800 <_stack_end+0xdfff7800>
    110a:	0000                	unimp
    110c:	0100                	addi	s0,sp,128
    110e:	132d                	addi	t1,t1,-21
    1110:	c11e                	sw	t2,128(sp)
    1112:	000c                	0xc
    1114:	c400                	sw	s0,8(s0)
    1116:	02000003          	lb	zero,32(zero) # 20 <MSTATUS_MIE+0x18>
    111a:	0000                	unimp
    111c:	0100                	addi	s0,sp,128
    111e:	132e                	slli	t1,t1,0x2b
    1120:	b41e                	fsd	ft7,40(sp)
    1122:	000c                	0xc
    1124:	c600                	sw	s0,8(a2)
    1126:	02000003          	lb	zero,32(zero) # 20 <MSTATUS_MIE+0x18>
    112a:	0000                	unimp
    112c:	0100                	addi	s0,sp,128
    112e:	00000f2f          	0xf2f
    1132:	2332                	fld	ft6,264(sp)
    1134:	0008                	0x8
    1136:	0100                	addi	s0,sp,128
    1138:	0a25                	addi	s4,s4,9
    113a:	0062                	c.slli	zero,0x18
    113c:	0000                	unimp
    113e:	3201                	jal	a3e <CSR_MTVT2+0x252>
    1140:	00000533          	add	a0,zero,zero
    1144:	1f01                	addi	t5,t5,-32
    1146:	620a                	flw	ft4,128(sp)
    1148:	0000                	unimp
    114a:	0100                	addi	s0,sp,128
    114c:	00084433          	xor	s0,a6,zero
    1150:	0100                	addi	s0,sp,128
    1152:	0615                	addi	a2,a2,5
    1154:	0392                	slli	t2,t2,0x4
    1156:	0000                	unimp
    1158:	001c                	0x1c
    115a:	0000                	unimp
    115c:	9c01                	0x9c01
    115e:	00000cfb          	0xcfb
    1162:	9210                	0x9210
    1164:	0a000003          	lb	zero,160(zero) # a0 <MSTATUS_MIE+0x98>
    1168:	0000                	unimp
    116a:	2b00                	fld	fs0,16(a4)
    116c:	0090                	addi	a2,sp,64
    116e:	0000                	unimp
    1170:	1601                	addi	a2,a2,-32
    1172:	7305                	lui	t1,0xfffe1
    1174:	0000                	unimp
    1176:	0000                	unimp
    1178:	3400                	fld	fs0,40(s0)
    117a:	06ba                	slli	a3,a3,0xe
    117c:	0000                	unimp
    117e:	0c01                	addi	s8,s8,0
    1180:	8006                	c.mv	zero,ra
    1182:	12000003          	lb	zero,288(zero) # 120 <MSTATUS_MIE+0x118>
    1186:	0000                	unimp
    1188:	0100                	addi	s0,sp,128
    118a:	359c                	fld	fa5,40(a1)
    118c:	0cc1                	addi	s9,s9,16
    118e:	0000                	unimp
    1190:	03ae                	slli	t2,t2,0xb
    1192:	0000                	unimp
    1194:	0008                	0x8
    1196:	0000                	unimp
    1198:	9c01                	0x9c01
    119a:	b435                	j	bc6 <CSR_MTVT2+0x3da>
    119c:	000c                	0xc
    119e:	b600                	fsd	fs0,40(a2)
    11a0:	08000003          	lb	zero,128(zero) # 80 <MSTATUS_MIE+0x78>
    11a4:	0000                	unimp
    11a6:	0100                	addi	s0,sp,128
    11a8:	359c                	fld	fa5,40(a1)
    11aa:	0c3c                	addi	a5,sp,536
    11ac:	0000                	unimp
    11ae:	03ce                	slli	t2,t2,0x13
    11b0:	0000                	unimp
    11b2:	000e                	c.slli	zero,0x3
    11b4:	0000                	unimp
    11b6:	9c01                	0x9c01
    11b8:	b136                	fsd	fa3,160(sp)
    11ba:	0008                	0x8
    11bc:	ce00                	sw	s0,24(a2)
    11be:	0004                	0x4
    11c0:	1000                	addi	s0,sp,32
    11c2:	0000                	unimp
    11c4:	0100                	addi	s0,sp,128
    11c6:	5e9c                	lw	a5,56(a3)
    11c8:	000d                	c.nop	3
    11ca:	0d00                	addi	s0,sp,656
    11cc:	08be                	slli	a7,a7,0xf
    11ce:	0000                	unimp
    11d0:	0970                	addi	a2,sp,156
    11d2:	0000                	unimp
    11d4:	0008ca37          	lui	s4,0x8c
    11d8:	0100                	addi	s0,sp,128
    11da:	9336005b          	0x9336005b
    11de:	0008                	0x8
    11e0:	de00                	sw	s0,56(a2)
    11e2:	0004                	0x4
    11e4:	1000                	addi	s0,sp,32
    11e6:	0000                	unimp
    11e8:	0100                	addi	s0,sp,128
    11ea:	7b9c                	flw	fa5,48(a5)
    11ec:	000d                	c.nop	3
    11ee:	0d00                	addi	s0,sp,656
    11f0:	08a4                	addi	s1,sp,88
    11f2:	0000                	unimp
    11f4:	0991                	addi	s3,s3,4
    11f6:	0000                	unimp
    11f8:	3600                	fld	fs0,40(a2)
    11fa:	086d                	addi	a6,a6,27
    11fc:	0000                	unimp
    11fe:	04ee                	slli	s1,s1,0x1b
    1200:	0000                	unimp
    1202:	0010                	0x10
    1204:	0000                	unimp
    1206:	9c01                	0x9c01
    1208:	0d9f 0000 7a0d      	0x7a0d00000d9f
    120e:	0008                	0x8
    1210:	b200                	fsd	fs0,32(a2)
    1212:	0009                	c.nop	2
    1214:	3700                	fld	fs0,40(a4)
    1216:	0886                	slli	a7,a7,0x1
    1218:	0000                	unimp
    121a:	5b01                	li	s6,-32
    121c:	3600                	fld	fs0,40(a2)
    121e:	0000084f          	fnmadd.s	fa6,ft0,ft0,ft0,rne
    1222:	04fe                	slli	s1,s1,0x1f
    1224:	0000                	unimp
    1226:	0010                	0x10
    1228:	0000                	unimp
    122a:	9c01                	0x9c01
    122c:	0dbc                	addi	a5,sp,728
    122e:	0000                	unimp
    1230:	600d                	c.lui	zero,0x3
    1232:	0008                	0x8
    1234:	d300                	sw	s0,32(a4)
    1236:	0009                	c.nop	2
    1238:	0000                	unimp
    123a:	3536                	fld	fa0,360(sp)
    123c:	0008                	0x8
    123e:	0e00                	addi	s0,sp,784
    1240:	0005                	c.nop	1
    1242:	0a00                	addi	s0,sp,272
    1244:	0000                	unimp
    1246:	0100                	addi	s0,sp,128
    1248:	d79c                	sw	a5,40(a5)
    124a:	000d                	c.nop	3
    124c:	3700                	fld	fs0,40(a4)
    124e:	0842                	slli	a6,a6,0x10
    1250:	0000                	unimp
    1252:	5a01                	li	s4,-32
    1254:	3500                	fld	fs0,40(a0)
    1256:	0828                	addi	a0,sp,24
    1258:	0000                	unimp
    125a:	0518                	addi	a4,sp,640
    125c:	0000                	unimp
    125e:	000a                	c.slli	zero,0x2
    1260:	0000                	unimp
    1262:	9c01                	0x9c01
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	1101                	addi	sp,sp,-32
   2:	2501                	jal	602 <eclic_set_irq_lvl_abs+0x12>
   4:	130e                	slli	t1,t1,0x23
   6:	1b0e030b          	0x1b0e030b
   a:	550e                	lw	a0,224(sp)
   c:	10011117          	auipc	sp,0x10011
  10:	02000017          	auipc	zero,0x2000
  14:	0104                	addi	s1,sp,128
  16:	0b3e0e03          	lb	t3,179(t3) # 70b3 <CSR_MTVT2+0x68c7>
  1a:	13490b0b          	0x13490b0b
  1e:	0b3a                	slli	s6,s6,0xe
  20:	0b390b3b          	0xb390b3b
  24:	1301                	addi	t1,t1,-32
  26:	0000                	unimp
  28:	03002803          	lw	a6,48(zero) # 30 <MSTATUS_MIE+0x28>
  2c:	1c0e                	slli	s8,s8,0x23
  2e:	0400000b          	0x400000b
  32:	0024                	addi	s1,sp,8
  34:	0b3e0b0b          	0xb3e0b0b
  38:	00000e03          	lb	t3,0(zero) # 0 <_vector_table>
  3c:	1605                	addi	a2,a2,-31
  3e:	0300                	addi	s0,sp,384
  40:	3a0e                	fld	fs4,224(sp)
  42:	390b3b0b          	0x390b3b0b
  46:	0013490b          	0x13490b
  4a:	0600                	addi	s0,sp,768
  4c:	0024                	addi	s1,sp,8
  4e:	0b3e0b0b          	0xb3e0b0b
  52:	00000803          	lb	a6,0(zero) # 0 <_vector_table>
  56:	03003407          	fld	fs0,48(zero) # 30 <MSTATUS_MIE+0x28>
  5a:	3a0e                	fld	fs4,224(sp)
  5c:	390b3b0b          	0x390b3b0b
  60:	3f13490b          	0x3f13490b
  64:	3c19                	jal	fffffa7a <_stack_end+0xdfff7a7a>
  66:	0019                	c.nop	6
  68:	0800                	addi	s0,sp,16
  6a:	0034                	addi	a3,sp,8
  6c:	0b3a1347          	fmsub.d	ft6,fs4,fs3,ft1,rtz
  70:	0b390b3b          	0xb390b3b
  74:	1802                	slli	a6,a6,0x20
  76:	0000                	unimp
  78:	2e09                	jal	38a <pmp_open_all_space+0xa>
  7a:	3f01                	jal	ffffff8a <_stack_end+0xdfff7f8a>
  7c:	0319                	addi	t1,t1,6
  7e:	3a0e                	fld	fs4,224(sp)
  80:	390b3b0b          	0x390b3b0b
  84:	1119270b          	0x1119270b
  88:	1201                	addi	tp,tp,-32
  8a:	4006                	0x4006
  8c:	9718                	0x9718
  8e:	1942                	slli	s2,s2,0x30
  90:	1301                	addi	t1,t1,-32
  92:	0000                	unimp
  94:	890a                	mv	s2,sp
  96:	0182                	c.slli64	gp
  98:	1101                	addi	sp,sp,-32
  9a:	3101                	jal	fffffc9a <_stack_end+0xdfff7c9a>
  9c:	0b000013          	li	zero,176
  a0:	828a                	mv	t0,sp
  a2:	0001                	nop
  a4:	1802                	slli	a6,a6,0x20
  a6:	4291                	li	t0,4
  a8:	0018                	0x18
  aa:	0c00                	addi	s0,sp,528
  ac:	012e                	slli	sp,sp,0xb
  ae:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
  b6:	0b39                	addi	s6,s6,14
  b8:	1349                	addi	t1,t1,-14
  ba:	0111                	addi	sp,sp,4
  bc:	0612                	slli	a2,a2,0x4
  be:	1840                	addi	s0,sp,52
  c0:	01194297          	auipc	t0,0x1194
  c4:	0d000013          	li	zero,208
  c8:	1755010b          	0x1755010b
  cc:	1301                	addi	t1,t1,-32
  ce:	0000                	unimp
  d0:	340e                	fld	fs0,224(sp)
  d2:	0300                	addi	s0,sp,384
  d4:	3a0e                	fld	fs4,224(sp)
  d6:	390b3b0b          	0x390b3b0b
  da:	0213490b          	0x213490b
  de:	0f000017          	auipc	zero,0xf000
  e2:	1301010b          	0x1301010b
  e6:	0000                	unimp
  e8:	3410                	fld	fa2,40(s0)
  ea:	0300                	addi	s0,sp,384
  ec:	3a0e                	fld	fs4,224(sp)
  ee:	390b3b0b          	0x390b3b0b
  f2:	0013490b          	0x13490b
  f6:	1100                	addi	s0,sp,160
  f8:	0111010b          	0x111010b
  fc:	0612                	slli	a2,a2,0x4
  fe:	1301                	addi	t1,t1,-32
 100:	0000                	unimp
 102:	8912                	mv	s2,tp
 104:	0182                	c.slli64	gp
 106:	1101                	addi	sp,sp,-32
 108:	3101                	jal	fffffd08 <_stack_end+0xdfff7d08>
 10a:	00130113          	addi	sp,t1,1 # fffe1001 <_stack_end+0xdffd9001>
 10e:	1300                	addi	s0,sp,416
 110:	0005                	c.nop	1
 112:	0b3a0e03          	lb	t3,179(s4) # 8c0b3 <CSR_MTVT2+0x8b8c7>
 116:	0b390b3b          	0xb390b3b
 11a:	1349                	addi	t1,t1,-14
 11c:	1702                	slli	a4,a4,0x20
 11e:	0000                	unimp
 120:	2e14                	fld	fa3,24(a2)
 122:	3f00                	fld	fs0,56(a4)
 124:	3c19                	jal	fffffb3a <_stack_end+0xdfff7b3a>
 126:	6e19                	lui	t3,0x6
 128:	030e                	slli	t1,t1,0x3
 12a:	3a0e                	fld	fs4,224(sp)
 12c:	390b3b0b          	0x390b3b0b
 130:	0000000b          	0xb
 134:	1101                	addi	sp,sp,-32
 136:	2501                	jal	736 <eclic_set_vmode+0x12>
 138:	130e                	slli	t1,t1,0x23
 13a:	1b0e030b          	0x1b0e030b
 13e:	110e                	slli	sp,sp,0x23
 140:	1201                	addi	tp,tp,-32
 142:	1006                	c.slli	zero,0x21
 144:	02000017          	auipc	zero,0x2000
 148:	0024                	addi	s1,sp,8
 14a:	0b3e0b0b          	0xb3e0b0b
 14e:	00000e03          	lb	t3,0(zero) # 0 <_vector_table>
 152:	03001603          	lh	a2,48(zero) # 30 <MSTATUS_MIE+0x28>
 156:	3a0e                	fld	fs4,224(sp)
 158:	390b3b0b          	0x390b3b0b
 15c:	0013490b          	0x13490b
 160:	0400                	addi	s0,sp,512
 162:	0035                	c.nop	13
 164:	1349                	addi	t1,t1,-14
 166:	0000                	unimp
 168:	2405                	jal	388 <pmp_open_all_space+0x8>
 16a:	0b00                	addi	s0,sp,400
 16c:	030b3e0b          	0x30b3e0b
 170:	0008                	0x8
 172:	0600                	addi	s0,sp,768
 174:	0034                	addi	a3,sp,8
 176:	0b3a0e03          	lb	t3,179(s4)
 17a:	0b390b3b          	0xb390b3b
 17e:	1349                	addi	t1,t1,-14
 180:	193c193f 2e070000 	0x2e070000193c193f
 188:	3f01                	jal	98 <MSTATUS_MIE+0x90>
 18a:	0319                	addi	t1,t1,6
 18c:	3a0e                	fld	fs4,224(sp)
 18e:	39053b0b          	0x39053b0b
 192:	1119270b          	0x1119270b
 196:	1201                	addi	tp,tp,-32
 198:	4006                	0x4006
 19a:	9718                	0x9718
 19c:	1942                	slli	s2,s2,0x30
 19e:	1301                	addi	t1,t1,-32
 1a0:	0000                	unimp
 1a2:	0508                	addi	a0,sp,640
 1a4:	0300                	addi	s0,sp,384
 1a6:	3a0e                	fld	fs4,224(sp)
 1a8:	39053b0b          	0x39053b0b
 1ac:	0213490b          	0x213490b
 1b0:	09000017          	auipc	zero,0x9000
 1b4:	0034                	addi	a3,sp,8
 1b6:	0b3a0e03          	lb	t3,179(s4)
 1ba:	0b39053b          	0xb39053b
 1be:	1349                	addi	t1,t1,-14
 1c0:	1702                	slli	a4,a4,0x20
 1c2:	0000                	unimp
 1c4:	1d0a                	slli	s10,s10,0x22
 1c6:	3101                	jal	fffffdc6 <_stack_end+0xdfff7dc6>
 1c8:	12011113          	0x12011113
 1cc:	5806                	lw	a6,96(sp)
 1ce:	5705590b          	0x5705590b
 1d2:	0013010b          	0x13010b
 1d6:	0b00                	addi	s0,sp,400
 1d8:	0005                	c.nop	1
 1da:	1331                	addi	t1,t1,-20
 1dc:	0000                	unimp
 1de:	1d0c                	addi	a1,sp,688
 1e0:	3101                	jal	fffffde0 <_stack_end+0xdfff7de0>
 1e2:	12011113          	0x12011113
 1e6:	5806                	lw	a6,96(sp)
 1e8:	5705590b          	0x5705590b
}
 1ec:	0d00000b          	0xd00000b
  for(;time;time--)asm volatile("nop");
 1f0:	0005                	c.nop	1
 1f2:	1331                	addi	t1,t1,-20
void USART0_IRQHandler(void){
 1f4:	1702                	slli	a4,a4,0x20
 1f6:	0000                	unimp
  USART_CTL0(USART0) &=~ USART_CTL0_TBEIE;
 1f8:	340e                	fld	fs0,224(sp)
 1fa:	0300                	addi	s0,sp,384
void USART0_IRQHandler(void){
 1fc:	3a0e                	fld	fs4,224(sp)
  USART_CTL0(USART0) &=~ USART_CTL0_TBEIE;
 1fe:	39053b0b          	0x39053b0b
void USART0_IRQHandler(void){
 202:	0213490b          	0x213490b
 206:	0018                	0x18
 208:	0f00                	addi	s0,sp,912
 20a:	012e                	slli	sp,sp,0xb
 20c:	0e03193f 053b0b3a 	0x53b0b3a0e03193f
 214:	0b39                	addi	s6,s6,14
 216:	0111                	addi	sp,sp,4
 218:	0612                	slli	a2,a2,0x4
 21a:	1840                	addi	s0,sp,52
 21c:	01194297          	auipc	t0,0x1194
  USART_CTL0(USART0) &=~ USART_CTL0_TBEIE;
 220:	10000013          	li	zero,256
 224:	0111010b          	0x111010b
  USART_DATA(USART0) = 'U';
 228:	0612                	slli	a2,a2,0x4
 22a:	0000                	unimp
 22c:	2e11                	jal	540 <eclic_set_nlbits+0xa>
  GPO_T(RLED);
 22e:	3f01                	jal	13e <MSTATUS_MIE+0x136>
 230:	0319                	addi	t1,t1,6
 232:	3a0e                	fld	fs4,224(sp)
 234:	39053b0b          	0x39053b0b
  sleep(300000);
 238:	4919270b          	0x4919270b
 23c:	12011113          	0x12011113
  GPO_T(RLED);
 240:	4006                	0x4006
 242:	9718                	0x9718
 244:	1942                	slli	s2,s2,0x30
  sleep(300000);
 246:	1301                	addi	t1,t1,-32
}
 248:	0000                	unimp
 24a:	1d12                	slli	s10,s10,0x24
 24c:	3101                	jal	fffffe4c <_stack_end+0xdfff7e4c>
 24e:	55015213          	0x55015213
 252:	590b5817          	auipc	a6,0x590b5
 256:	5705                	li	a4,-31
 258:	0013010b          	0x13010b
 25c:	1300                	addi	s0,sp,416
 25e:	8289                	srli	a3,a3,0x2
 260:	0001                	nop
 262:	0111                	addi	sp,sp,4
 264:	1331                	addi	t1,t1,-20
 266:	0000                	unimp
 268:	3414                	fld	fa3,40(s0)
 26a:	0300                	addi	s0,sp,384
 26c:	3a0e                	fld	fs4,224(sp)
  eclic_init(ECLIC_NUM_INTERRUPTS);
 26e:	39053b0b          	0x39053b0b
 272:	0013490b          	0x13490b
  RCU_APB2EN |= RCU_APB2EN_PAEN | RCU_APB2EN_PBEN | RCU_APB2EN_PCEN;
 276:	1500                	addi	s0,sp,672
 278:	012e                	slli	sp,sp,0xb
  GPIO_config(RLED); GPIO_config(YLED); GPIO_config(GLED);
 27a:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
  RCU_APB2EN |= RCU_APB2EN_PAEN | RCU_APB2EN_PBEN | RCU_APB2EN_PCEN;
 282:	0b39                	addi	s6,s6,14
 284:	01111927          	0x1111927
  GPIO_config(RLED); GPIO_config(YLED); GPIO_config(GLED);
 288:	0612                	slli	a2,a2,0x4
 28a:	1840                	addi	s0,sp,52
 28c:	01194297          	auipc	t0,0x1194
  eclic_set_vmode( USART0_IRQn );
 290:	16000013          	li	zero,352
  GPIO_config(RLED); GPIO_config(YLED); GPIO_config(GLED);
 294:	0005                	c.nop	1
 296:	0b3a0e03          	lb	t3,179(s4)
 29a:	0b390b3b          	0xb390b3b
 29e:	1349                	addi	t1,t1,-14
 2a0:	1702                	slli	a4,a4,0x20
 2a2:	0000                	unimp
 2a4:	03003417          	auipc	s0,0x3003
 2a8:	3a0e                	fld	fs4,224(sp)
 2aa:	390b3b0b          	0x390b3b0b
 2ae:	0213490b          	0x213490b
 2b2:	18000017          	auipc	zero,0x18000
 2b6:	0034                	addi	a3,sp,8
 2b8:	0b3a0803          	lb	a6,179(s4)
 2bc:	0b39053b          	0xb39053b
 2c0:	1349                	addi	t1,t1,-14
 2c2:	1702                	slli	a4,a4,0x20
 2c4:	0000                	unimp
  GPIO_config(SBTN); GPIO_config(RBTN);
 2c6:	2e19                	jal	5dc <eclic_get_irq_lvl+0x2c>
 2c8:	3f01                	jal	1d8 <clear_bss_loop+0x4>
  GPIO_config(UART0_RX); GPIO_config(UART0_TX);
 2ca:	0319                	addi	t1,t1,6
 2cc:	3a0e                	fld	fs4,224(sp)
 2ce:	390b3b0b          	0x390b3b0b
  GPIO_config(SBTN); GPIO_config(RBTN);
 2d2:	4919270b          	0x4919270b
 2d6:	12011113          	0x12011113
 2da:	4006                	0x4006
 2dc:	9718                	0x9718
 2de:	1942                	slli	s2,s2,0x30
 2e0:	1301                	addi	t1,t1,-32
 2e2:	0000                	unimp
 2e4:	341a                	fld	fs0,416(sp)
 2e6:	0300                	addi	s0,sp,384
 2e8:	3a08                	fld	fa0,48(a2)
  GPIO_config(UART0_RX); GPIO_config(UART0_TX);
 2ea:	390b3b0b          	0x390b3b0b
 2ee:	0213490b          	0x213490b
 2f2:	1b000017          	auipc	zero,0x1b000
 2f6:	011d                	addi	sp,sp,7
 2f8:	1331                	addi	t1,t1,-20
 2fa:	0152                	slli	sp,sp,0x14
 2fc:	1755                	addi	a4,a4,-11
 2fe:	0b58                	addi	a4,sp,404
 300:	0b59                	addi	s6,s6,22
 302:	13010b57          	0x13010b57
 306:	0000                	unimp
  RCU_APB2EN |= RCU_APB2EN_USART0EN | RCU_APB2EN_AFEN;
 308:	051c                	addi	a5,sp,640
 30a:	0300                	addi	s0,sp,384
 30c:	3a08                	fld	fa0,48(a2)
 30e:	390b3b0b          	0x390b3b0b
  USART_BAUD(USART0) = 8000000 / 9600;
 312:	0213490b          	0x213490b
 316:	1d000017          	auipc	zero,0x1d000
 31a:	011d                	addi	sp,sp,7
 31c:	1331                	addi	t1,t1,-20
  USART_CTL0(USART0) = USART_CTL0_UEN | USART_CTL0_REN | USART_CTL0_TEN;
 31e:	0111                	addi	sp,sp,4
 320:	0612                	slli	a2,a2,0x4
 322:	0b58                	addi	a4,sp,404
 324:	0b59                	addi	s6,s6,22
  eclic_set_vmode( USART0_IRQn );
 326:	13010b57          	0x13010b57
  eclic_enable_interrupt( USART0_IRQn );
 32a:	0000                	unimp
 32c:	1d1e                	slli	s10,s10,0x27
  eclic_global_interrupt_enable();
 32e:	3100                	fld	fs0,32(a0)
 330:	12011113          	0x12011113
    GPO_T(YLED);
 334:	5806                	lw	a6,96(sp)
 336:	570b590b          	0x570b590b
    if( GPI_ON(SBTN) )GPO_ON(GLED); else GPO_OFF(GLED);
 33a:	1f00000b          	0x1f00000b
 33e:	0034                	addi	a3,sp,8
    if( GPI_ON(RBTN) )USART_CTL0(USART0) |= USART_CTL0_TBEIE;
 340:	0b3a0e03          	lb	t3,179(s4)
    sleep(100000);
 344:	0b390b3b          	0xb390b3b
    GPO_T(YLED);
 348:	1349                	addi	t1,t1,-14
 34a:	1802                	slli	a6,a6,0x20
 34c:	0000                	unimp
 34e:	1d20                	addi	s0,sp,696
 350:	3101                	jal	ffffff50 <_stack_end+0xdfff7f50>
 352:	12011113          	0x12011113
    if( GPI_ON(SBTN) )GPO_ON(GLED); else GPO_OFF(GLED);
 356:	5806                	lw	a6,96(sp)
 358:	570b590b          	0x570b590b
 35c:	2100000b          	0x2100000b
    if( GPI_ON(RBTN) )USART_CTL0(USART0) |= USART_CTL0_TBEIE;
 360:	002e                	c.slli	zero,0xb
 362:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
 36a:	0b39                	addi	s6,s6,14
 36c:	1349                	addi	t1,t1,-14
 36e:	0111                	addi	sp,sp,4
 370:	0612                	slli	a2,a2,0x4
 372:	1840                	addi	s0,sp,52
    sleep(100000);
 374:	00194297          	auipc	t0,0x194
    GPO_T(YLED);
 378:	2200                	fld	fs0,0(a2)
    if( GPI_ON(SBTN) )GPO_ON(GLED); else GPO_OFF(GLED);
 37a:	0005                	c.nop	1
 37c:	0b3a0803          	lb	a6,179(s4)
    asm volatile ("li x6, 0xffffffff":::"x6");
 380:	0b390b3b          	0xb390b3b
    asm volatile ("csrw pmpaddr0, x6":::);
 384:	1349                	addi	t1,t1,-14
 386:	1802                	slli	a6,a6,0x20
    asm volatile ("li x6, 0x7f":::"x6");
 388:	0000                	unimp
 38a:	3f002e23          	sw	a6,1020(zero) # 3fc <get_cycle_value+0xe>
    asm volatile ("csrw pmpcfg0, x6":::);
 38e:	0319                	addi	t1,t1,6
}
 390:	3a0e                	fld	fs4,224(sp)
    clear_csr (mstatus,MSTATUS_MPP);
 392:	390b3b0b          	0x390b3b0b
 396:	2013490b          	0x2013490b
 39a:	2400000b          	0x2400000b
    asm volatile ("la x6, 1f    ":::"x6");
 39e:	012e                	slli	sp,sp,0xb
 3a0:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
    asm volatile ("mret":::);
 3a8:	0b39                	addi	s6,s6,14
 3aa:	0b201927          	0xb201927
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME);
 3ae:	1301                	addi	t1,t1,-32
 3b0:	0000                	unimp
 3b2:	0525                	addi	a0,a0,9
}
 3b4:	0300                	addi	s0,sp,384
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME + 4);
 3b6:	3a0e                	fld	fs4,224(sp)
 3b8:	390b3b0b          	0x390b3b0b
}
 3bc:	0013490b          	0x13490b
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME + 4);
 3c0:	2600                	fld	fs0,8(a2)
 3c2:	012e                	slli	sp,sp,0xb
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME);
 3c4:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
}
 3cc:	0b39                	addi	s6,s6,14
  return TIMER_FREQ;
 3ce:	13491927          	0x13491927
 3d2:	0b20                	addi	s0,sp,408
 3d4:	1301                	addi	t1,t1,-32
 3d6:	0000                	unimp
}
 3d8:	03003427          	fsd	fa6,40(zero) # 28 <MSTATUS_MIE+0x20>
    uint32_t hi = read_csr(minstreth);
 3dc:	3a08                	fld	fa0,48(a2)
 3de:	390b3b0b          	0x390b3b0b
    uint32_t lo = read_csr(minstret);
 3e2:	0213490b          	0x213490b
    if (hi == read_csr(minstreth))
 3e6:	0018                	0x18
 3e8:	2800                	fld	fs0,16(s0)
 3ea:	0b0b000f          	0xb0b000f
    uint32_t hi = read_csr(mcycleh);
 3ee:	1349                	addi	t1,t1,-14
 3f0:	0000                	unimp
    uint32_t lo = read_csr(mcycle);
 3f2:	3429                	jal	fffffdfc <_stack_end+0xdfff7dfc>
 3f4:	0300                	addi	s0,sp,384
    if (hi == read_csr(mcycleh))
 3f6:	3a0e                	fld	fs4,224(sp)
 3f8:	390b3b0b          	0x390b3b0b
 3fc:	1c13490b          	0x1c13490b
  return TIMER_FREQ;
 400:	000d                	c.nop	3
 402:	2a00                	fld	fs0,16(a2)
 404:	012e                	slli	sp,sp,0xb
 406:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
 40e:	0b39                	addi	s6,s6,14
 410:	1349                	addi	t1,t1,-14
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME);
 412:	0111                	addi	sp,sp,4
 414:	0612                	slli	a2,a2,0x4
 416:	1840                	addi	s0,sp,52
 418:	01194297          	auipc	t0,0x1194
  } while (start_mtime == tmp);
 41c:	2b000013          	li	zero,688
  uint32_t start_mcycle = read_csr(mcycle);
 420:	0034                	addi	a3,sp,8
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME);
 422:	0b3a0e03          	lb	t3,179(s4)
 426:	0b390b3b          	0xb390b3b
    delta_mtime = mtime_lo() - start_mtime;
 42a:	1349                	addi	t1,t1,-14
 42c:	0000                	unimp
  } while (delta_mtime < n);
 42e:	892c                	0x892c
 430:	0182                	c.slli64	gp
  uint32_t delta_mcycle = read_csr(mcycle) - start_mcycle;
 432:	1101                	addi	sp,sp,-32
 434:	3101                	jal	34 <MSTATUS_MIE+0x2c>
 436:	00130113          	addi	sp,t1,1
         + ((delta_mcycle % delta_mtime) * mtime_freq) / delta_mtime;
 43a:	2d00                	fld	fs0,24(a0)
 43c:	828a                	mv	t0,sp
  return (delta_mcycle / delta_mtime) * mtime_freq
 43e:	0001                	nop
 440:	1802                	slli	a6,a6,0x20
         + ((delta_mcycle % delta_mtime) * mtime_freq) / delta_mtime;
 442:	4291                	li	t0,4
 444:	0018                	0x18
 446:	2e00                	fld	fs0,24(a2)
 448:	8289                	srli	a3,a3,0x2
  return (delta_mcycle / delta_mtime) * mtime_freq
 44a:	0101                	addi	sp,sp,0
 44c:	0111                	addi	sp,sp,4
}
 44e:	4295                	li	t0,5
 450:	3119                	jal	56 <MSTATUS_MIE+0x4e>
{
 452:	2f000013          	li	zero,752
 456:	0111010b          	0x111010b
}
 45a:	0612                	slli	a2,a2,0x4
  cpu_freq = measure_cpu_freq(100);
 45c:	1301                	addi	t1,t1,-32
 45e:	0000                	unimp
}
 460:	1d30                	addi	a2,sp,696
  cpu_freq = measure_cpu_freq(100);
 462:	3100                	fld	fs0,32(a0)
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_CFG_OFFSET)=0;
 464:	55015213          	0x55015213
 468:	590b5817          	auipc	a6,0x590b5
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_MTH_OFFSET)=0;
 46c:	000b570b          	0xb570b
  vuint32_t * upper = (vuint32_t*)(base + num_irq*4);
 470:	3100                	fld	fs0,32(a0)
 472:	1755010b          	0x1755010b
 476:	0000                	unimp
  for (ptr = base; ptr < upper; ptr=ptr+4){
 478:	2e32                	fld	ft8,264(sp)
 47a:	3f00                	fld	fs0,56(a4)
}
 47c:	0319                	addi	t1,t1,6
    *ptr = 0;
 47e:	3a0e                	fld	fs4,224(sp)
 480:	390b3b0b          	0x390b3b0b
  for (ptr = base; ptr < upper; ptr=ptr+4){
 484:	4919270b          	0x4919270b
    *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_IE_OFFSET+source*4) = 1;
 488:	000b2013          	slti	zero,s6,0
 48c:	3300                	fld	fs0,32(a4)
 48e:	012e                	slli	sp,sp,0xb
 490:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
    *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_IE_OFFSET+source*4) = 0;
 498:	0b39                	addi	s6,s6,14
 49a:	0111                	addi	sp,sp,4
 49c:	0612                	slli	a2,a2,0x4
 49e:	1840                	addi	s0,sp,52
 4a0:	01194297          	auipc	t0,0x1194
 4a4:	34000013          	li	zero,832
    *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_IP_OFFSET+source*4) = 1;
 4a8:	002e                	c.slli	zero,0xb
 4aa:	0e03193f 0b3b0b3a 	0xb3b0b3a0e03193f
 4b2:	0b39                	addi	s6,s6,14
 4b4:	0111                	addi	sp,sp,4
 4b6:	0612                	slli	a2,a2,0x4
 4b8:	1840                	addi	s0,sp,52
}
 4ba:	00194297          	auipc	t0,0x194
    *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_IP_OFFSET+source*4) = 0;
 4be:	3500                	fld	fs0,40(a0)
 4c0:	002e                	c.slli	zero,0xb
 4c2:	1331                	addi	t1,t1,-20
 4c4:	0111                	addi	sp,sp,4
 4c6:	0612                	slli	a2,a2,0x4
 4c8:	1840                	addi	s0,sp,52
 4ca:	00194297          	auipc	t0,0x194
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4) = intctrl;
 4ce:	3600                	fld	fs0,40(a2)
 4d0:	012e                	slli	sp,sp,0xb
 4d2:	1331                	addi	t1,t1,-20
 4d4:	0111                	addi	sp,sp,4
 4d6:	0612                	slli	a2,a2,0x4
 4d8:	1840                	addi	s0,sp,52
 4da:	01194297          	auipc	t0,0x1194
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
 4de:	37000013          	li	zero,880
 4e2:	0005                	c.nop	1
 4e4:	1331                	addi	t1,t1,-20
 4e6:	1802                	slli	a6,a6,0x20
 4e8:	0000                	unimp
	...

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
   0:	028e                	slli	t0,t0,0x3
   2:	0000                	unimp
   4:	02a2                	slli	t0,t0,0x8
   6:	0000                	unimp
   8:	0001                	nop
   a:	a25e                	fsd	fs7,256(sp)
   c:	0002                	c.slli64	zero
   e:	b400                	fsd	fs0,40(s0)
  10:	0002                	c.slli64	zero
  12:	0300                	addi	s0,sp,384
  14:	7f00                	flw	fs0,56(a4)
  16:	7880                	flw	fs0,48(s1)
	...
  20:	02a2                	slli	t0,t0,0x8
  22:	0000                	unimp
  24:	02b8                	addi	a4,sp,328
  26:	0000                	unimp
  28:	0001                	nop
  2a:	b85e                	fsd	fs7,48(sp)
  2c:	0002                	c.slli64	zero
  2e:	c600                	sw	s0,8(a2)
  30:	0002                	c.slli64	zero
  32:	0300                	addi	s0,sp,384
  34:	7f00                	flw	fs0,56(a4)
  36:	7880                	flw	fs0,48(s1)
	...
  40:	02b8                	addi	a4,sp,328
  42:	0000                	unimp
  44:	02be                	slli	t0,t0,0xf
  46:	0000                	unimp
  48:	0001                	nop
  4a:	c05e                	sw	s7,0(sp)
  4c:	0002                	c.slli64	zero
  4e:	ca00                	sw	s0,16(a2)
  50:	0002                	c.slli64	zero
  52:	0100                	addi	s0,sp,128
  54:	5e00                	lw	s0,56(a2)
  56:	02ca                	slli	t0,t0,0x12
  58:	0000                	unimp
  5a:	02da                	slli	t0,t0,0x16
  5c:	0000                	unimp
  5e:	807f0003          	lb	zero,-2041(t5)
  62:	0078                	addi	a4,sp,12
  64:	0000                	unimp
  66:	0000                	unimp
  68:	0000                	unimp
  6a:	ca00                	sw	s0,16(a2)
  6c:	0002                	c.slli64	zero
  6e:	de00                	sw	s0,56(a2)
  70:	0002                	c.slli64	zero
  72:	0100                	addi	s0,sp,128
  74:	5e00                	lw	s0,56(a2)
  76:	02de                	slli	t0,t0,0x17
  78:	0000                	unimp
  7a:	02ea                	slli	t0,t0,0x1a
  7c:	0000                	unimp
  7e:	807f0003          	lb	zero,-2041(t5)
  82:	0078                	addi	a4,sp,12
  84:	0000                	unimp
  86:	0000                	unimp
  88:	0000                	unimp
  8a:	de00                	sw	s0,56(a2)
  8c:	0002                	c.slli64	zero
  8e:	ee00                	fsw	fs0,24(a2)
  90:	0002                	c.slli64	zero
  92:	0100                	addi	s0,sp,128
  94:	5e00                	lw	s0,56(a2)
  96:	02ee                	slli	t0,t0,0x1b
  98:	0000                	unimp
  9a:	02f8                	addi	a4,sp,332
  9c:	0000                	unimp
  9e:	807f0003          	lb	zero,-2041(t5)
  a2:	0078                	addi	a4,sp,12
  a4:	0000                	unimp
  a6:	0000                	unimp
  a8:	0000                	unimp
  aa:	ee00                	fsw	fs0,24(a2)
  ac:	0002                	c.slli64	zero
  ae:	fc00                	fsw	fs0,56(s0)
  b0:	0002                	c.slli64	zero
  b2:	0100                	addi	s0,sp,128
  b4:	5e00                	lw	s0,56(a2)
  b6:	02fc                	addi	a5,sp,332
  b8:	0000                	unimp
  ba:	0308                	addi	a0,sp,384
  bc:	0000                	unimp
  be:	847f0003          	lb	zero,-1977(t5)
  c2:	0070                	addi	a2,sp,12
  c4:	0000                	unimp
  c6:	0000                	unimp
  c8:	0000                	unimp
  ca:	fc00                	fsw	fs0,56(s0)
  cc:	0002                	c.slli64	zero
  ce:	0c00                	addi	s0,sp,528
  d0:	01000003          	lb	zero,16(zero) # 10 <MSTATUS_MIE+0x8>
  d4:	5e00                	lw	s0,56(a2)
  d6:	030c                	addi	a1,sp,384
  d8:	0000                	unimp
  da:	0312                	slli	t1,t1,0x4
  dc:	0000                	unimp
  de:	0005                	c.nop	1
  e0:	040c                	addi	a1,sp,512
  e2:	0108                	addi	a0,sp,128
  e4:	0040                	addi	s0,sp,4
  e6:	0000                	unimp
  e8:	0000                	unimp
  ea:	0000                	unimp
  ec:	ea00                	fsw	fs0,16(a2)
  ee:	0001                	nop
  f0:	f200                	fsw	fs0,32(a2)
  f2:	0001                	nop
  f4:	0100                	addi	s0,sp,128
  f6:	5a00                	lw	s0,48(a2)
  f8:	01f2                	slli	gp,gp,0x1c
  fa:	0000                	unimp
  fc:	01f4                	addi	a3,sp,204
  fe:	0000                	unimp
 100:	0001                	nop
 102:	005a                	c.slli	zero,0x16
 104:	0000                	unimp
 106:	0000                	unimp
 108:	0000                	unimp
 10a:	0400                	addi	s0,sp,512
 10c:	0004                	0x4
 10e:	0c00                	addi	s0,sp,528
 110:	0004                	0x4
 112:	0100                	addi	s0,sp,128
 114:	5a00                	lw	s0,48(a2)
 116:	040c                	addi	a1,sp,512
 118:	0000                	unimp
 11a:	041c                	addi	a5,sp,512
 11c:	0000                	unimp
 11e:	0004                	0x4
 120:	9f5a01f3          	0x9f5a01f3
	...
 12c:	0412                	slli	s0,s0,0x4
 12e:	0000                	unimp
 130:	0416                	slli	s0,s0,0x5
 132:	0000                	unimp
 134:	0001                	nop
 136:	005f 0000 0000      	0x5f
 13c:	0000                	unimp
 13e:	1200                	addi	s0,sp,288
 140:	0004                	0x4
 142:	1600                	addi	s0,sp,800
 144:	0004                	0x4
 146:	0500                	addi	s0,sp,640
 148:	7f00                	flw	fs0,56(a4)
 14a:	3200                	fld	fs0,32(a2)
 14c:	9f21                	0x9f21
 14e:	0416                	slli	s0,s0,0x5
 150:	0000                	unimp
 152:	041c                	addi	a5,sp,512
 154:	0000                	unimp
 156:	0001                	nop
 158:	005f 0000 0000      	0x5f
 15e:	0000                	unimp
 160:	1600                	addi	s0,sp,800
 162:	0004                	0x4
 164:	1a00                	addi	s0,sp,304
 166:	0004                	0x4
 168:	0100                	addi	s0,sp,128
 16a:	5f00                	lw	s0,56(a4)
	...
 174:	0416                	slli	s0,s0,0x5
 176:	0000                	unimp
 178:	041a                	slli	s0,s0,0x6
 17a:	0000                	unimp
 17c:	0004                	0x4
 17e:	9f5a01f3          	0x9f5a01f3
	...
 18a:	03ec                	addi	a1,sp,460
 18c:	0000                	unimp
 18e:	03f4                	addi	a3,sp,460
 190:	0000                	unimp
 192:	0001                	nop
 194:	f45a                	fsw	fs6,40(sp)
 196:	04000003          	lb	zero,64(zero) # 40 <MSTATUS_MIE+0x38>
 19a:	0004                	0x4
 19c:	0400                	addi	s0,sp,512
 19e:	f300                	fsw	fs0,32(a4)
 1a0:	5a01                	li	s4,-32
 1a2:	009f 0000 0000      	0x9f
 1a8:	0000                	unimp
 1aa:	fa00                	fsw	fs0,48(a2)
 1ac:	fe000003          	lb	zero,-32(zero) # ffffffe0 <_stack_end+0xdfff7fe0>
 1b0:	01000003          	lb	zero,16(zero) # 10 <MSTATUS_MIE+0x8>
 1b4:	5f00                	lw	s0,56(a4)
	...
 1be:	03fa                	slli	t2,t2,0x1e
 1c0:	0000                	unimp
 1c2:	03fe                	slli	t2,t2,0x1f
 1c4:	0000                	unimp
 1c6:	0005                	c.nop	1
 1c8:	007f                	0x7f
 1ca:	2132                	fld	ft2,264(sp)
 1cc:	fe9f 0003 0400      	0x4000003fe9f
 1d2:	0004                	0x4
 1d4:	0100                	addi	s0,sp,128
 1d6:	5f00                	lw	s0,56(a4)
	...
 1e0:	03fe                	slli	t2,t2,0x1f
 1e2:	0000                	unimp
 1e4:	0402                	c.slli64	s0
 1e6:	0000                	unimp
 1e8:	0001                	nop
  for(;time;time--)asm volatile("nop");
 1ea:	005f 0000 0000      	0x5f
 1f0:	0000                	unimp
 1f2:	fe00                	fsw	fs0,56(a2)
void USART0_IRQHandler(void){
 1f4:	02000003          	lb	zero,32(zero) # 20 <MSTATUS_MIE+0x18>
  USART_CTL0(USART0) &=~ USART_CTL0_TBEIE;
 1f8:	0004                	0x4
 1fa:	0400                	addi	s0,sp,512
void USART0_IRQHandler(void){
 1fc:	f300                	fsw	fs0,32(a4)
  USART_CTL0(USART0) &=~ USART_CTL0_TBEIE;
 1fe:	5a01                	li	s4,-32
 200:	009f 0000 0000      	0x9f
void USART0_IRQHandler(void){
 206:	0000                	unimp
 208:	d400                	sw	s0,40(s0)
 20a:	dc000003          	lb	zero,-576(zero) # fffffdc0 <_stack_end+0xdfff7dc0>
 20e:	01000003          	lb	zero,16(zero) # 10 <MSTATUS_MIE+0x8>
 212:	5a00                	lw	s0,48(a2)
 214:	03dc                	addi	a5,sp,452
 216:	0000                	unimp
 218:	03ec                	addi	a1,sp,460
 21a:	0000                	unimp
 21c:	0004                	0x4
  USART_CTL0(USART0) &=~ USART_CTL0_TBEIE;
 21e:	9f5a01f3          	0x9f5a01f3
	...
  USART_DATA(USART0) = 'U';
 22a:	03e2                	slli	t2,t2,0x18
 22c:	0000                	unimp
  GPO_T(RLED);
 22e:	03e6                	slli	t2,t2,0x19
 230:	0000                	unimp
 232:	0001                	nop
 234:	005f 0000 0000      	0x5f
  sleep(300000);
 23a:	0000                	unimp
 23c:	e600                	fsw	fs0,8(a2)
  GPO_T(RLED);
 23e:	ea000003          	lb	zero,-352(zero) # fffffea0 <_stack_end+0xdfff7ea0>
 242:	01000003          	lb	zero,16(zero) # 10 <MSTATUS_MIE+0x8>
  sleep(300000);
 246:	5f00                	lw	s0,56(a4)
	...
}
 250:	03e6                	slli	t2,t2,0x19
 252:	0000                	unimp
 254:	03ea                	slli	t2,t2,0x1a
 256:	0000                	unimp
 258:	0004                	0x4
 25a:	9f5a01f3          	0x9f5a01f3
	...
 266:	03bc                	addi	a5,sp,456
 268:	0000                	unimp
 26a:	03c4                	addi	s1,sp,452
 26c:	0000                	unimp
  eclic_init(ECLIC_NUM_INTERRUPTS);
 26e:	0001                	nop
 270:	c45a                	sw	s6,8(sp)
 272:	d4000003          	lb	zero,-704(zero) # fffffd40 <_stack_end+0xdfff7d40>
  RCU_APB2EN |= RCU_APB2EN_PAEN | RCU_APB2EN_PBEN | RCU_APB2EN_PCEN;
 276:	04000003          	lb	zero,64(zero) # 40 <MSTATUS_MIE+0x38>
  GPIO_config(RLED); GPIO_config(YLED); GPIO_config(GLED);
 27a:	f300                	fsw	fs0,32(a4)
 27c:	5a01                	li	s4,-32
 27e:	009f 0000 0000      	0x9f
  RCU_APB2EN |= RCU_APB2EN_PAEN | RCU_APB2EN_PBEN | RCU_APB2EN_PCEN;
 284:	0000                	unimp
  GPIO_config(RLED); GPIO_config(YLED); GPIO_config(GLED);
 286:	ca00                	sw	s0,16(a2)
 288:	ce000003          	lb	zero,-800(zero) # fffffce0 <_stack_end+0xdfff7ce0>
 28c:	01000003          	lb	zero,16(zero) # 10 <MSTATUS_MIE+0x8>
  eclic_set_vmode( USART0_IRQn );
 290:	5f00                	lw	s0,56(a4)
	...
  GPIO_config(RLED); GPIO_config(YLED); GPIO_config(GLED);
 29a:	03ce                	slli	t2,t2,0x13
 29c:	0000                	unimp
 29e:	03d2                	slli	t2,t2,0x14
 2a0:	0000                	unimp
 2a2:	0001                	nop
 2a4:	005f 0000 0000      	0x5f
 2aa:	0000                	unimp
 2ac:	ce00                	sw	s0,24(a2)
 2ae:	d2000003          	lb	zero,-736(zero) # fffffd20 <_stack_end+0xdfff7d20>
 2b2:	04000003          	lb	zero,64(zero) # 40 <MSTATUS_MIE+0x38>
 2b6:	f300                	fsw	fs0,32(a4)
 2b8:	5a01                	li	s4,-32
 2ba:	009f 0000 0000      	0x9f
 2c0:	0000                	unimp
 2c2:	a400                	fsd	fs0,8(s0)
 2c4:	ac000003          	lb	zero,-1344(zero) # fffffac0 <_stack_end+0xdfff7ac0>
  GPIO_config(SBTN); GPIO_config(RBTN);
 2c8:	01000003          	lb	zero,16(zero) # 10 <MSTATUS_MIE+0x8>
  GPIO_config(UART0_RX); GPIO_config(UART0_TX);
 2cc:	5a00                	lw	s0,48(a2)
 2ce:	03ac                	addi	a1,sp,456
  GPIO_config(SBTN); GPIO_config(RBTN);
 2d0:	0000                	unimp
 2d2:	03bc                	addi	a5,sp,456
 2d4:	0000                	unimp
 2d6:	0004                	0x4
 2d8:	9f5a01f3          	0x9f5a01f3
	...
 2e4:	03b2                	slli	t2,t2,0xc
 2e6:	0000                	unimp
 2e8:	03b6                	slli	t2,t2,0xd
  GPIO_config(UART0_RX); GPIO_config(UART0_TX);
 2ea:	0000                	unimp
 2ec:	0001                	nop
 2ee:	005f 0000 0000      	0x5f
 2f4:	0000                	unimp
 2f6:	b600                	fsd	fs0,40(a2)
 2f8:	ba000003          	lb	zero,-1120(zero) # fffffba0 <_stack_end+0xdfff7ba0>
 2fc:	01000003          	lb	zero,16(zero) # 10 <MSTATUS_MIE+0x8>
 300:	5f00                	lw	s0,56(a4)
	...
  RCU_APB2EN |= RCU_APB2EN_USART0EN | RCU_APB2EN_AFEN;
 30a:	03b6                	slli	t2,t2,0xd
 30c:	0000                	unimp
 30e:	03ba                	slli	t2,t2,0xe
 310:	0000                	unimp
  USART_BAUD(USART0) = 8000000 / 9600;
 312:	0004                	0x4
 314:	9f5a01f3          	0x9f5a01f3
	...
  USART_CTL0(USART0) = USART_CTL0_UEN | USART_CTL0_REN | USART_CTL0_TEN;
 320:	0396                	slli	t2,t2,0x5
 322:	0000                	unimp
 324:	039a                	slli	t2,t2,0x6
  eclic_set_vmode( USART0_IRQn );
 326:	0000                	unimp
  eclic_enable_interrupt( USART0_IRQn );
 328:	0001                	nop
 32a:	9a5f 0003 9e00      	0x9e0000039a5f
  eclic_global_interrupt_enable();
 330:	05000003          	lb	zero,80(zero) # 50 <MSTATUS_MIE+0x48>
    GPO_T(YLED);
 334:	7f00                	flw	fs0,56(a4)
 336:	3300                	fld	fs0,32(a4)
    if( GPI_ON(SBTN) )GPO_ON(GLED); else GPO_OFF(GLED);
 338:	9f21                	0x9f21
 33a:	039e                	slli	t2,t2,0x7
 33c:	0000                	unimp
 33e:	03a4                	addi	s1,sp,456
    if( GPI_ON(RBTN) )USART_CTL0(USART0) |= USART_CTL0_TBEIE;
 340:	0000                	unimp
 342:	0001                	nop
    sleep(100000);
 344:	005f 0000 0000      	0x5f
    GPO_T(YLED);
 34a:	0000                	unimp
 34c:	9600                	0x9600
 34e:	9a000003          	lb	zero,-1632(zero) # fffff9a0 <_stack_end+0xdfff79a0>
 352:	01000003          	lb	zero,16(zero) # 10 <MSTATUS_MIE+0x8>
    if( GPI_ON(SBTN) )GPO_ON(GLED); else GPO_OFF(GLED);
 356:	5f00                	lw	s0,56(a4)
	...
    if( GPI_ON(RBTN) )USART_CTL0(USART0) |= USART_CTL0_TBEIE;
 360:	034c                	addi	a1,sp,388
 362:	0000                	unimp
 364:	0355                	addi	t1,t1,21
 366:	0000                	unimp
 368:	0001                	nop
 36a:	555a                	lw	a0,180(sp)
 36c:	5e000003          	lb	zero,1504(zero) # 5e0 <eclic_get_irq_lvl+0x30>
 370:	01000003          	lb	zero,16(zero) # 10 <MSTATUS_MIE+0x8>
    sleep(100000);
 374:	5800                	lw	s0,48(s0)
 376:	035e                	slli	t1,t1,0x17
    GPO_T(YLED);
 378:	0000                	unimp
    if( GPI_ON(SBTN) )GPO_ON(GLED); else GPO_OFF(GLED);
 37a:	0392                	slli	t2,t2,0x4
 37c:	0000                	unimp
 37e:	0004                	0x4
    asm volatile ("li x6, 0xffffffff":::"x6");
 380:	9f5a01f3          	0x9f5a01f3
	...
    asm volatile ("csrw pmpcfg0, x6":::);
 38c:	0356                	slli	t1,t1,0x15
 38e:	0000                	unimp
}
 390:	0376                	slli	t1,t1,0x1d
    clear_csr (mstatus,MSTATUS_MPP);
 392:	0000                	unimp
 394:	007a0013          	addi	zero,s4,7
 398:	0812                	slli	a6,a6,0x4
 39a:	1aff                	0x1aff
    asm volatile ("la x6, 1f    ":::"x6");
 39c:	1634                	addi	a3,sp,808
 39e:	0814                	addi	a3,sp,16
 3a0:	1aff                	0x1aff
 3a2:	282d                	jal	3dc <get_instret_value>
    asm volatile ("csrw mepc, x6":::);
 3a4:	0001                	nop
 3a6:	1316                	slli	t1,t1,0x25
    asm volatile ("mret":::);
 3a8:	009f 0000 0000      	0x9f
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME);
 3ae:	0000                	unimp
 3b0:	6c00                	flw	fs0,24(s0)
 3b2:	7e000003          	lb	zero,2016(zero) # 7e0 <CSR_MMISC_CTL+0x10>
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME + 4);
 3b6:	01000003          	lb	zero,16(zero) # 10 <MSTATUS_MIE+0x8>
 3ba:	5f00                	lw	s0,56(a4)
}
 3bc:	037e                	slli	t1,t1,0x1f
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME + 4);
 3be:	0000                	unimp
 3c0:	0386                	slli	t2,t2,0x1
 3c2:	0000                	unimp
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME);
 3c4:	0009                	c.nop	2
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME + 4);
 3c6:	007f                	0x7f
    if (hi == mtime_hi())
 3c8:	ff08                	fsw	fa0,56(a4)
 3ca:	7e1a                	flw	ft8,164(sp)
}
 3cc:	2400                	fld	fs0,8(s0)
  return TIMER_FREQ;
 3ce:	009f 0000 0000      	0x9f
 3d4:	0000                	unimp
 3d6:	7e00                	flw	fs0,56(a2)
}
 3d8:	86000003          	lb	zero,-1952(zero) # fffff860 <_stack_end+0xdfff7860>
    uint32_t hi = read_csr(minstreth);
 3dc:	0f000003          	lb	zero,240(zero) # f0 <MSTATUS_MIE+0xe8>
    uint32_t lo = read_csr(minstret);
 3e0:	7f00                	flw	fs0,56(a4)
 3e2:	0800                	addi	s0,sp,16
    if (hi == read_csr(minstreth))
 3e4:	1aff                	0x1aff
 3e6:	007e                	c.slli	zero,0x1f
 3e8:	0824                	addi	s1,sp,24
 3ea:	1aff                	0x1aff
}
 3ec:	047e                	slli	s0,s0,0x1f
    uint32_t hi = read_csr(mcycleh);
 3ee:	9f26                	add	t5,t5,s1
	...
    if (hi == read_csr(mcycleh))
 3f8:	0356                	slli	t1,t1,0x15
 3fa:	0000                	unimp
 3fc:	035e                	slli	t1,t1,0x17
}
 3fe:	0000                	unimp
  return TIMER_FREQ;
 400:	0001                	nop
 402:	5e58                	lw	a4,60(a2)
 404:	6c000003          	lb	zero,1728(zero) # 6c0 <eclic_set_irq_priority+0x40>
 408:	04000003          	lb	zero,64(zero) # 40 <MSTATUS_MIE+0x38>
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME);
 40c:	f300                	fsw	fs0,32(a4)
  return TIMER_FREQ;
 40e:	5a01                	li	s4,-32
 410:	009f 0000 0000      	0x9f
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME);
 416:	0000                	unimp
 418:	0000                	unimp
  } while (start_mtime == tmp);
 41a:	0b000003          	lb	zero,176(zero) # b0 <MSTATUS_MIE+0xa8>
  uint32_t start_mcycle = read_csr(mcycle);
 41e:	01000003          	lb	zero,16(zero) # 10 <MSTATUS_MIE+0x8>
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME);
 422:	5a00                	lw	s0,48(a2)
 424:	0000030b          	0x30b
 428:	031a                	slli	t1,t1,0x6
    delta_mtime = mtime_lo() - start_mtime;
 42a:	0000                	unimp
 42c:	0001                	nop
  } while (delta_mtime < n);
 42e:	1a58                	addi	a4,sp,308
 430:	4c000003          	lb	zero,1216(zero) # 4c0 <eclic_clear_pending+0x4>
  uint32_t delta_mcycle = read_csr(mcycle) - start_mcycle;
 434:	04000003          	lb	zero,64(zero) # 40 <MSTATUS_MIE+0x38>
 438:	f300                	fsw	fs0,32(a4)
         + ((delta_mcycle % delta_mtime) * mtime_freq) / delta_mtime;
 43a:	5a01                	li	s4,-32
 43c:	009f 0000 0000      	0x9f
 442:	0000                	unimp
 444:	0000                	unimp
 446:	0b000003          	lb	zero,176(zero) # b0 <MSTATUS_MIE+0xa8>
  return (delta_mcycle / delta_mtime) * mtime_freq
 44a:	01000003          	lb	zero,16(zero) # 10 <MSTATUS_MIE+0x8>
}
 44e:	5b00                	lw	s0,48(a4)
 450:	0000030b          	0x30b
  measure_cpu_freq(1);
 454:	0334                	addi	a3,sp,392
{
 456:	0000                	unimp
  measure_cpu_freq(1);
 458:	0004                	0x4
}
 45a:	9f5b01f3          	0x9f5b01f3
  cpu_freq = measure_cpu_freq(100);
 45e:	0334                	addi	a3,sp,392
}
 460:	0000                	unimp
  cpu_freq = measure_cpu_freq(100);
 462:	0342                	slli	t1,t1,0x10
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_CFG_OFFSET)=0;
 464:	0000                	unimp
 466:	0001                	nop
 468:	0000005b          	0x5b
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_MTH_OFFSET)=0;
 46c:	0000                	unimp
 46e:	0000                	unimp
  vuint32_t * upper = (vuint32_t*)(base + num_irq*4);
 470:	0c00                	addi	s0,sp,528
 472:	2a000003          	lb	zero,672(zero) # 2a0 <main+0x32>
 476:	01000003          	lb	zero,16(zero) # 10 <MSTATUS_MIE+0x8>
  for (ptr = base; ptr < upper; ptr=ptr+4){
 47a:	5a00                	lw	s0,48(a2)
	...
 484:	033e                	slli	t1,t1,0xf
    *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_IE_OFFSET+source*4) = 1;
 486:	0000                	unimp
 488:	0342                	slli	t1,t1,0x10
 48a:	0000                	unimp
 48c:	0001                	nop
 48e:	005f 0000 0000      	0x5f
 494:	0000                	unimp
}
 496:	3e00                	fld	fs0,56(a2)
    *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_IE_OFFSET+source*4) = 0;
 498:	42000003          	lb	zero,1056(zero) # 420 <measure_cpu_freq+0x20>
 49c:	04000003          	lb	zero,64(zero) # 40 <MSTATUS_MIE+0x38>
 4a0:	f300                	fsw	fs0,32(a4)
 4a2:	5a01                	li	s4,-32
 4a4:	009f 0000 0000      	0x9f
    *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_IP_OFFSET+source*4) = 1;
 4aa:	0000                	unimp
 4ac:	c200                	sw	s0,0(a2)
 4ae:	0002                	c.slli64	zero
 4b0:	cb00                	sw	s0,16(a4)
 4b2:	0002                	c.slli64	zero
 4b4:	0100                	addi	s0,sp,128
 4b6:	5a00                	lw	s0,48(a2)
 4b8:	000002cb          	fnmsub.s	ft5,ft0,ft0,ft0,rne
    *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_IP_OFFSET+source*4) = 0;
 4bc:	02d4                	addi	a3,sp,324
 4be:	0000                	unimp
 4c0:	0001                	nop
 4c2:	d458                	sw	a4,44(s0)
 4c4:	0002                	c.slli64	zero
 4c6:	0000                	unimp
 4c8:	04000003          	lb	zero,64(zero) # 40 <MSTATUS_MIE+0x38>
}
 4cc:	f300                	fsw	fs0,32(a4)
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4) = intctrl;
 4ce:	5a01                	li	s4,-32
 4d0:	009f 0000 0000      	0x9f
 4d6:	0000                	unimp
 4d8:	cc00                	sw	s0,24(s0)
 4da:	0002                	c.slli64	zero
}
 4dc:	ec00                	fsw	fs0,24(s0)
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
 4de:	0002                	c.slli64	zero
 4e0:	1300                	addi	s0,sp,416
 4e2:	7a00                	flw	fs0,48(a2)
 4e4:	1200                	addi	s0,sp,288
 4e6:	ff08                	fsw	fa0,56(a4)
 4e8:	341a                	fld	fs0,416(sp)
 4ea:	1416                	slli	s0,s0,0x25
}
 4ec:	ff08                	fsw	fa0,56(a4)
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4) = intattr;
 4ee:	2d1a                	fld	fs10,384(sp)
 4f0:	0128                	addi	a0,sp,136
 4f2:	1600                	addi	s0,sp,800
 4f4:	00009f13          	slli	t5,ra,0x0
 4f8:	0000                	unimp
 4fa:	0000                	unimp
}
 4fc:	0000                	unimp
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4);
 4fe:	02e2                	slli	t0,t0,0x18
 500:	0000                	unimp
 502:	02ec                	addi	a1,sp,332
 504:	0000                	unimp
 506:	001e                	c.slli	zero,0x7
 508:	007f                	0x7f
 50a:	ff08                	fsw	fa0,56(a4)
}
 50c:	381a                	fld	fa6,416(sp)
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_CFG_OFFSET) = cliccfg;
 50e:	007a                	c.slli	zero,0x1e
 510:	0812                	slli	a6,a6,0x4
 512:	1aff                	0x1aff
 514:	1634                	addi	a3,sp,808
}
 516:	0814                	addi	a3,sp,16
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_CFG_OFFSET);
 518:	1aff                	0x1aff
 51a:	282d                	jal	554 <eclic_get_nlbits+0x6>
 51c:	0001                	nop
 51e:	1316                	slli	t1,t1,0x25
}
 520:	ff08                	fsw	fa0,56(a4)
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_MTH_OFFSET) = mth;
 522:	1c1a                	slli	s8,s8,0x26
 524:	9f26                	add	t5,t5,s1
	...
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_MTH_OFFSET);
 52e:	02cc                	addi	a1,sp,324
 530:	0000                	unimp
 532:	02d4                	addi	a3,sp,324
}
 534:	0000                	unimp
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_CFG_OFFSET);
 536:	0001                	nop
 538:	d458                	sw	a4,44(s0)
 53a:	0002                	c.slli64	zero
 53c:	e200                	fsw	fs0,0(a2)
  uint8_t nlbits_shifted = nlbits << ECLIC_CFG_NLBITS_LSB;
 53e:	0002                	c.slli64	zero
  uint8_t new_cliccfg = (old_cliccfg & (~ECLIC_CFG_NLBITS_MASK)) | (ECLIC_CFG_NLBITS_MASK & nlbits_shifted); 
 540:	0400                	addi	s0,sp,512
 542:	f300                	fsw	fs0,32(a4)
 544:	5a01                	li	s4,-32
 546:	009f 0000 0000      	0x9f
}
 54c:	0000                	unimp
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_CFG_OFFSET);
 54e:	7000                	flw	fs0,32(s0)
 550:	0002                	c.slli64	zero
 552:	7d00                	flw	fs0,56(a0)
 554:	0002                	c.slli64	zero
  nlbits = (nlbits & ECLIC_CFG_NLBITS_MASK) >> ECLIC_CFG_NLBITS_LSB;
 556:	0100                	addi	s0,sp,128
}
 558:	5a00                	lw	s0,48(a2)
 55a:	027d                	addi	tp,tp,31
void eclic_set_irq_lvl(uint32_t source, uint8_t lvl) {
 55c:	0000                	unimp
 55e:	028e                	slli	t0,t0,0x3
 560:	0000                	unimp
 562:	0001                	nop
 564:	8e58                	0x8e58
  uint8_t nlbits = eclic_get_nlbits();
 566:	0002                	c.slli64	zero
  lvl = lvl >> (8-nlbits);
 568:	c200                	sw	s0,0(a2)
 56a:	0002                	c.slli64	zero
 56c:	0400                	addi	s0,sp,512
 56e:	f300                	fsw	fs0,32(a4)
 570:	5a01                	li	s4,-32
 572:	009f 0000 0000      	0x9f
 578:	0000                	unimp
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
 57a:	7000                	flw	fs0,32(s0)
 57c:	0002                	c.slli64	zero
  lvl = lvl >> (8-nlbits);
 57e:	7d00                	flw	fs0,56(a0)
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
 580:	0002                	c.slli64	zero
 582:	0100                	addi	s0,sp,128
 584:	5b00                	lw	s0,48(a4)
  lvl = lvl >> (8-nlbits);
 586:	027d                	addi	tp,tp,31
 588:	0000                	unimp
  lvl = lvl << (8-nlbits);
 58a:	02c2                	slli	t0,t0,0x10
 58c:	0000                	unimp
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
 58e:	0004                	0x4
 590:	9f5b01f3          	0x9f5b01f3
	...
  current_intctrl = current_intctrl >> nlbits;
 59c:	027e                	slli	tp,tp,0x1f
  eclic_set_intctrl(source, (current_intctrl | lvl));
 59e:	0000                	unimp
 5a0:	028c                	addi	a1,sp,320
 5a2:	0000                	unimp
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4) = intctrl;
 5a4:	007a0013          	addi	zero,s4,7
}
 5a8:	0812                	slli	a6,a6,0x4
 5aa:	1aff                	0x1aff
 5ac:	1634                	addi	a3,sp,808
 5ae:	0814                	addi	a3,sp,16
uint8_t eclic_get_irq_lvl(uint32_t source) {
 5b0:	1aff                	0x1aff
 5b2:	282d                	jal	5ec <eclic_get_irq_lvl+0x3c>
 5b4:	0001                	nop
 5b6:	1316                	slli	t1,t1,0x25
  uint8_t nlbits = eclic_get_nlbits();
 5b8:	009f 0000 0000      	0x9f
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
 5be:	0000                	unimp
 5c0:	9a00                	0x9a00
 5c2:	0002                	c.slli64	zero
 5c4:	aa00                	fsd	fs0,16(a2)
 5c6:	0002                	c.slli64	zero
  intctrl = intctrl >> (8-nlbits);
 5c8:	0b00                	addi	s0,sp,400
 5ca:	7900                	flw	fs0,48(a0)
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
 5cc:	0800                	addi	s0,sp,16
 5ce:	1aff                	0x1aff
  intctrl = intctrl >> (8-nlbits);
 5d0:	7d38                	flw	fa4,120(a0)
 5d2:	1c00                	addi	s0,sp,560
 5d4:	9f24                	0x9f24
	...
}
 5de:	029a                	slli	t0,t0,0x6
  intctrl = intctrl >> (8-nlbits);
 5e0:	0000                	unimp
 5e2:	02a0                	addi	s0,sp,328
  uint8_t lvl = intctrl << (8-nlbits);
 5e4:	0000                	unimp
 5e6:	007f000f          	0x7f000f
}
 5ea:	ff08                	fsw	fa0,56(a4)
 5ec:	7d1a                	flw	fs10,164(sp)
 5ee:	2400                	fld	fs0,8(s0)
void eclic_set_irq_lvl_abs(uint32_t source, uint8_t lvl_abs) {
 5f0:	ff08                	fsw	fa0,56(a4)
 5f2:	7d1a                	flw	fs10,164(sp)
 5f4:	2600                	fld	fs0,8(a2)
 5f6:	009f 0000 0000      	0x9f
  uint8_t nlbits = eclic_get_nlbits();
 5fc:	0000                	unimp
  uint8_t lvl = lvl_abs << (8-nlbits);
 5fe:	b400                	fsd	fs0,40(s0)
 600:	0002                	c.slli64	zero
 602:	b800                	fsd	fs0,48(s0)
 604:	0002                	c.slli64	zero
 606:	0100                	addi	s0,sp,128
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
 608:	5f00                	lw	s0,56(a4)
	...
 612:	02b4                	addi	a3,sp,328
 614:	0000                	unimp
  uint8_t lvl = lvl_abs << (8-nlbits);
 616:	02b8                	addi	a4,sp,328
 618:	0000                	unimp
 61a:	0004                	0x4
  current_intctrl = current_intctrl << nlbits;
 61c:	9f5a01f3          	0x9f5a01f3
	...
  uint8_t lvl = lvl_abs << (8-nlbits);
 628:	0230                	addi	a2,sp,264
  current_intctrl = current_intctrl >> nlbits;
 62a:	0000                	unimp
 62c:	0239                	addi	tp,tp,14
  eclic_set_intctrl(source, (current_intctrl | lvl));
 62e:	0000                	unimp
 630:	0001                	nop
 632:	395a                	fld	fs2,432(sp)
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4) = intctrl;
 634:	0002                	c.slli64	zero
 636:	4200                	lw	s0,0(a2)
}
 638:	0002                	c.slli64	zero
 63a:	0100                	addi	s0,sp,128
 63c:	5800                	lw	s0,48(s0)
 63e:	0242                	slli	tp,tp,0x10
 640:	0000                	unimp
uint8_t eclic_get_irq_lvl_abs(uint32_t source) {
 642:	0270                	addi	a2,sp,268
 644:	0000                	unimp
 646:	0004                	0x4
 648:	9f5a01f3          	0x9f5a01f3
	...
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
 654:	023a                	slli	tp,tp,0xe
 656:	0000                	unimp
 658:	025a                	slli	tp,tp,0x16
  intctrl = intctrl >> (8-nlbits);
 65a:	0000                	unimp
 65c:	007a0013          	addi	zero,s4,7
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
 660:	0812                	slli	a6,a6,0x4
  intctrl = intctrl >> (8-nlbits);
 662:	1aff                	0x1aff
 664:	1634                	addi	a3,sp,808
 666:	0814                	addi	a3,sp,16
 668:	1aff                	0x1aff
 66a:	282d                	jal	6a4 <eclic_set_irq_priority+0x24>
}
 66c:	0001                	nop
 66e:	1316                	slli	t1,t1,0x25
  intctrl = intctrl >> (8-nlbits);
 670:	009f 0000 0000      	0x9f
 676:	0000                	unimp
}
 678:	5000                	lw	s0,32(s0)
 67a:	0002                	c.slli64	zero
 67c:	5c00                	lw	s0,56(s0)
 67e:	0002                	c.slli64	zero
uint8_t eclic_set_irq_priority(uint32_t source, uint8_t priority) {
 680:	0100                	addi	s0,sp,128
 682:	5f00                	lw	s0,56(a4)
 684:	025c                	addi	a5,sp,260
 686:	0000                	unimp
 688:	0264                	addi	s1,sp,268
	uint8_t nlbits = eclic_get_nlbits();
 68a:	0000                	unimp
	if (nlbits >= ECLICINTCTLBITS) {
 68c:	0009                	c.nop	2
		return 0;
 68e:	007f                	0x7f
	if (nlbits >= ECLICINTCTLBITS) {
 690:	ff08                	fsw	fa0,56(a4)
 692:	7a1a                	flw	fs4,164(sp)
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
 694:	2600                	fld	fs0,8(a2)
 696:	009f 0000 0000      	0x9f
 69c:	0000                	unimp
 69e:	5c00                	lw	s0,56(s0)
 6a0:	0002                	c.slli64	zero
	priority = priority << (8 - ECLICINTCTLBITS);
 6a2:	6400                	flw	fs0,8(s0)
	current_intctrl = current_intctrl >> (8-nlbits);
 6a4:	0002                	c.slli64	zero
 6a6:	0c00                	addi	s0,sp,528
 6a8:	7f00                	flw	fs0,56(a4)
	priority = priority << (8 - ECLICINTCTLBITS);
 6aa:	0800                	addi	s0,sp,16
	current_intctrl = current_intctrl >> (8-nlbits);
 6ac:	1aff                	0x1aff
 6ae:	007a                	c.slli	zero,0x1e
	priority = priority << (8 - ECLICINTCTLBITS);
 6b0:	7a26                	flw	fs4,104(sp)
 6b2:	2400                	fld	fs0,8(s0)
	current_intctrl = current_intctrl << (8-nlbits);
 6b4:	009f 0000 0000      	0x9f
	eclic_set_intctrl(source, (current_intctrl | priority));
 6ba:	0000                	unimp
 6bc:	3a00                	fld	fs0,48(a2)
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4) = intctrl;
 6be:	0002                	c.slli64	zero
 6c0:	4200                	lw	s0,0(a2)
}
 6c2:	0002                	c.slli64	zero
 6c4:	0100                	addi	s0,sp,128
 6c6:	5800                	lw	s0,48(s0)
 6c8:	0242                	slli	tp,tp,0x10
 6ca:	0000                	unimp
uint8_t eclic_get_irq_priority(uint32_t source) {
 6cc:	0250                	addi	a2,sp,260
 6ce:	0000                	unimp
 6d0:	0004                	0x4
 6d2:	9f5a01f3          	0x9f5a01f3
	...
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
 6de:	01dc                	addi	a5,sp,196
 6e0:	0000                	unimp
 6e2:	000001e7          	jalr	gp,zero # 0 <_vector_table>
	intctrl = intctrl << nlbits;
 6e6:	0001                	nop
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
 6e8:	e75a                	fsw	fs6,140(sp)
 6ea:	0001                	nop
	intctrl = intctrl << nlbits;
 6ec:	0200                	addi	s0,sp,256
 6ee:	0002                	c.slli64	zero
 6f0:	0100                	addi	s0,sp,128
 6f2:	5800                	lw	s0,48(s0)
 6f4:	0202                	c.slli64	tp
}
 6f6:	0000                	unimp
 6f8:	0230                	addi	a2,sp,264
	intctrl = intctrl << nlbits;
 6fa:	0000                	unimp
 6fc:	0004                	0x4
	uint8_t priority = intctrl >> (nlbits+(8 - ECLICINTCTLBITS));
 6fe:	9f5a01f3          	0x9f5a01f3
	...
}
 70a:	01dc                	addi	a5,sp,196
 70c:	0000                	unimp
 70e:	000001e7          	jalr	gp,zero # 0 <_vector_table>
  uint32_t mtvec_value = read_csr(mtvec);
 712:	0001                	nop
 714:	0001e75b          	0x1e75b
  mtvec_value = mtvec_value & 0xFFFFFFC0;
 718:	0000                	unimp
  mtvec_value = mtvec_value | 0x00000003;
 71a:	0002                	c.slli64	zero
 71c:	0400                	addi	s0,sp,512
  write_csr(mtvec,mtvec_value);
 71e:	f300                	fsw	fs0,32(a4)
 720:	5b01                	li	s6,-32
}
 722:	009f 0002 0a00      	0xa000002009f
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4);
 728:	0002                	c.slli64	zero
 72a:	0900                	addi	s0,sp,144
 72c:	7b00                	flw	fs0,48(a4)
 72e:	0800                	addi	s0,sp,16
 730:	1aff                	0x1aff
  uint8_t new_intattr = (old_intattr | 0x1); 
 732:	007f                	0x7f
 734:	9f26                	add	t5,t5,s1
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4) = intattr;
 736:	020e                	slli	tp,tp,0x3
 738:	0000                	unimp
}
 73a:	0230                	addi	a2,sp,264
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4);
 73c:	0000                	unimp
 73e:	0001                	nop
 740:	0000005b          	0x5b
 744:	0000                	unimp
 746:	0000                	unimp
 748:	e800                	fsw	fs0,16(s0)
  uint8_t new_intattr = (old_intattr & (~0x1));
 74a:	0001                	nop
 74c:	fe00                	fsw	fs0,56(a2)
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4) = intattr;
 74e:	0001                	nop
 750:	1300                	addi	s0,sp,416
}
 752:	7a00                	flw	fs0,48(a2)
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4);
 754:	1200                	addi	s0,sp,288
 756:	ff08                	fsw	fa0,56(a4)
 758:	341a                	fld	fs0,416(sp)
 75a:	1416                	slli	s0,s0,0x25
 75c:	ff08                	fsw	fa0,56(a4)
 75e:	2d1a                	fld	fs10,384(sp)
 760:	0128                	addi	a0,sp,136
  uint8_t new_intattr = (old_intattr & (~0x2));
 762:	1600                	addi	s0,sp,800
 764:	00009f13          	slli	t5,ra,0x0
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4) = intattr;
 768:	0000                	unimp
}
 76a:	0000                	unimp
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4);
 76c:	0000                	unimp
 76e:	0212                	slli	tp,tp,0x4
 770:	0000                	unimp
 772:	0216                	slli	tp,tp,0x5
 774:	0000                	unimp
 776:	007f000f          	0x7f000f
  new_intattr = (old_intattr & (~0x4));
 77a:	ff08                	fsw	fa0,56(a4)
 77c:	7d1a                	flw	fs10,164(sp)
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4) = intattr;
 77e:	2400                	fld	fs0,8(s0)
 780:	ff08                	fsw	fa0,56(a4)
}
 782:	7d1a                	flw	fs10,164(sp)
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4);
 784:	2600                	fld	fs0,8(a2)
 786:	009f 0000 0000      	0x9f
 78c:	0000                	unimp
 78e:	2400                	fld	fs0,8(s0)
 790:	0002                	c.slli64	zero
  new_intattr = (old_intattr | 0x4);
 792:	2800                	fld	fs0,16(s0)
 794:	0002                	c.slli64	zero
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4) = intattr;
 796:	0100                	addi	s0,sp,128
 798:	5f00                	lw	s0,56(a4)
	...
 7a2:	0224                	addi	s1,sp,264
 7a4:	0000                	unimp
 7a6:	0228                	addi	a0,sp,264
 7a8:	0000                	unimp
 7aa:	0004                	0x4
 7ac:	9f5a01f3          	0x9f5a01f3
	...
 7b8:	01d6                	slli	gp,gp,0x15
 7ba:	0000                	unimp
 7bc:	01d8                	addi	a4,sp,196
 7be:	0000                	unimp
 7c0:	007a0007          	0x7a0007
 7c4:	2531                	jal	dd0 <CSR_MTVT2+0x5e4>
 7c6:	009f1a3f 00000000 	0x9f1a3f
 7ce:	0000                	unimp
 7d0:	b600                	fsd	fs0,40(a2)
 7d2:	0001                	nop
 7d4:	c000                	sw	s0,0(s0)
 7d6:	0001                	nop
 7d8:	0100                	addi	s0,sp,128
 7da:	5a00                	lw	s0,48(a2)
 7dc:	01c0                	addi	s0,sp,196
 7de:	0000                	unimp
 7e0:	01ce                	slli	gp,gp,0x13
 7e2:	0000                	unimp
 7e4:	0004                	0x4
 7e6:	9f5a01f3          	0x9f5a01f3
	...
 7f2:	01b6                	slli	gp,gp,0xd
 7f4:	0000                	unimp
 7f6:	01c0                	addi	s0,sp,196
 7f8:	0000                	unimp
 7fa:	0005                	c.nop	1
 7fc:	007a                	c.slli	zero,0x1e
 7fe:	2431                	jal	a0a <CSR_MTVT2+0x21e>
 800:	c09f 0001 ce00      	0xce000001c09f
 806:	0001                	nop
 808:	0600                	addi	s0,sp,768
 80a:	f300                	fsw	fs0,32(a4)
 80c:	5a01                	li	s4,-32
 80e:	2431                	jal	a1a <CSR_MTVT2+0x22e>
 810:	009f 0000 0000      	0x9f
 816:	0000                	unimp
 818:	be00                	fsd	fs0,56(a2)
 81a:	0001                	nop
 81c:	c600                	sw	s0,8(a2)
 81e:	0001                	nop
 820:	0100                	addi	s0,sp,128
 822:	5f00                	lw	s0,56(a4)
	...
 82c:	01c8                	addi	a0,sp,196
 82e:	0000                	unimp
 830:	01cc                	addi	a1,sp,196
 832:	0000                	unimp
 834:	0001                	nop
 836:	005a                	c.slli	zero,0x16
 838:	0000                	unimp
 83a:	0000                	unimp
 83c:	0000                	unimp
 83e:	3c00                	fld	fs0,56(s0)
 840:	0001                	nop
 842:	4600                	lw	s0,8(a2)
 844:	0001                	nop
 846:	0100                	addi	s0,sp,128
 848:	5a00                	lw	s0,48(a2)
 84a:	0146                	slli	sp,sp,0x11
 84c:	0000                	unimp
 84e:	0148                	addi	a0,sp,132
 850:	0000                	unimp
 852:	807a0007          	0x807a0007
 856:	fff8                	fsw	fa4,124(a5)
 858:	489f7cdb          	0x489f7cdb
 85c:	0001                	nop
 85e:	4e00                	lw	s0,24(a2)
 860:	0001                	nop
 862:	0400                	addi	s0,sp,512
 864:	f300                	fsw	fs0,32(a4)
 866:	5a01                	li	s4,-32
 868:	009f 0000 0000      	0x9f
 86e:	0000                	unimp
 870:	2800                	fld	fs0,16(s0)
 872:	0001                	nop
 874:	3200                	fld	fs0,32(a2)
 876:	0001                	nop
 878:	0100                	addi	s0,sp,128
 87a:	5a00                	lw	s0,48(a2)
 87c:	0132                	slli	sp,sp,0xc
 87e:	0000                	unimp
 880:	0134                	addi	a3,sp,136
 882:	0000                	unimp
 884:	807a0007          	0x807a0007
 888:	fff8                	fsw	fa4,124(a5)
 88a:	349f7cdb          	0x349f7cdb
 88e:	0001                	nop
 890:	3c00                	fld	fs0,56(s0)
 892:	0001                	nop
 894:	0400                	addi	s0,sp,512
 896:	f300                	fsw	fs0,32(a4)
 898:	5a01                	li	s4,-32
 89a:	009f 0000 0000      	0x9f
 8a0:	0000                	unimp
 8a2:	1800                	addi	s0,sp,48
 8a4:	0001                	nop
 8a6:	1e00                	addi	s0,sp,816
 8a8:	0001                	nop
 8aa:	0100                	addi	s0,sp,128
 8ac:	5a00                	lw	s0,48(a2)
 8ae:	011e                	slli	sp,sp,0x7
 8b0:	0000                	unimp
 8b2:	0128                	addi	a0,sp,136
 8b4:	0000                	unimp
 8b6:	0004                	0x4
 8b8:	9f5a01f3          	0x9f5a01f3
	...
 8c4:	0106                	slli	sp,sp,0x1
 8c6:	0000                	unimp
 8c8:	010e                	slli	sp,sp,0x3
 8ca:	0000                	unimp
 8cc:	0001                	nop
 8ce:	0e5a                	slli	t3,t3,0x16
 8d0:	0001                	nop
 8d2:	1800                	addi	s0,sp,48
 8d4:	0001                	nop
 8d6:	0400                	addi	s0,sp,512
 8d8:	f300                	fsw	fs0,32(a4)
 8da:	5a01                	li	s4,-32
 8dc:	009f 0000 0000      	0x9f
 8e2:	0000                	unimp
 8e4:	e400                	fsw	fs0,8(s0)
 8e6:	0000                	unimp
 8e8:	f200                	fsw	fs0,32(a2)
 8ea:	0000                	unimp
 8ec:	0100                	addi	s0,sp,128
 8ee:	5a00                	lw	s0,48(a2)
 8f0:	00f2                	slli	ra,ra,0x1c
 8f2:	0000                	unimp
 8f4:	0106                	slli	sp,sp,0x1
 8f6:	0000                	unimp
 8f8:	0004                	0x4
 8fa:	9f5a01f3          	0x9f5a01f3
	...
 906:	0080                	addi	s0,sp,64
 908:	0000                	unimp
 90a:	00be                	slli	ra,ra,0xf
 90c:	0000                	unimp
 90e:	0001                	nop
 910:	be5a                	fsd	fs6,312(sp)
 912:	0000                	unimp
 914:	d200                	sw	s0,32(a2)
 916:	0000                	unimp
 918:	0400                	addi	s0,sp,512
 91a:	f300                	fsw	fs0,32(a4)
 91c:	5a01                	li	s4,-32
 91e:	009f 0000 0000      	0x9f
 924:	0000                	unimp
 926:	9a00                	0x9a00
 928:	0000                	unimp
 92a:	b600                	fsd	fs0,40(a2)
 92c:	0000                	unimp
 92e:	0100                	addi	s0,sp,128
 930:	5e00                	lw	s0,56(a2)
	...
 93a:	0098                	addi	a4,sp,64
 93c:	0000                	unimp
 93e:	00a6                	slli	ra,ra,0x9
 940:	0000                	unimp
 942:	0001                	nop
 944:	005f 0000 0000      	0x5f
 94a:	0000                	unimp
 94c:	ba00                	fsd	fs0,48(a2)
 94e:	0000                	unimp
 950:	c200                	sw	s0,0(a2)
 952:	0000                	unimp
 954:	0100                	addi	s0,sp,128
 956:	5f00                	lw	s0,56(a4)
 958:	00c2                	slli	ra,ra,0x10
 95a:	0000                	unimp
 95c:	00d2                	slli	ra,ra,0x14
 95e:	0000                	unimp
 960:	0006                	c.slli	zero,0x1
 962:	007e                	c.slli	zero,0x1f
 964:	9f1c007b          	0x9f1c007b
	...
 970:	014e                	slli	sp,sp,0x13
 972:	0000                	unimp
 974:	0154                	addi	a3,sp,132
 976:	0000                	unimp
 978:	0001                	nop
 97a:	545a                	lw	s0,180(sp)
 97c:	0001                	nop
 97e:	5e00                	lw	s0,56(a2)
 980:	0001                	nop
 982:	0400                	addi	s0,sp,512
 984:	f300                	fsw	fs0,32(a4)
 986:	5a01                	li	s4,-32
 988:	009f 0000 0000      	0x9f
 98e:	0000                	unimp
 990:	5e00                	lw	s0,56(a2)
 992:	0001                	nop
 994:	6600                	flw	fs0,8(a2)
 996:	0001                	nop
 998:	0100                	addi	s0,sp,128
 99a:	5a00                	lw	s0,48(a2)
 99c:	0166                	slli	sp,sp,0x19
 99e:	0000                	unimp
 9a0:	016e                	slli	sp,sp,0x1b
 9a2:	0000                	unimp
 9a4:	0004                	0x4
 9a6:	9f5a01f3          	0x9f5a01f3
	...
 9b2:	016e                	slli	sp,sp,0x1b
 9b4:	0000                	unimp
 9b6:	0174                	addi	a3,sp,140
 9b8:	0000                	unimp
 9ba:	0001                	nop
 9bc:	745a                	flw	fs0,180(sp)
 9be:	0001                	nop
 9c0:	7e00                	flw	fs0,56(a2)
 9c2:	0001                	nop
 9c4:	0400                	addi	s0,sp,512
 9c6:	f300                	fsw	fs0,32(a4)
 9c8:	5a01                	li	s4,-32
 9ca:	009f 0000 0000      	0x9f
 9d0:	0000                	unimp
 9d2:	7e00                	flw	fs0,56(a2)
 9d4:	0001                	nop
 9d6:	8600                	0x8600
 9d8:	0001                	nop
 9da:	0100                	addi	s0,sp,128
 9dc:	5a00                	lw	s0,48(a2)
 9de:	0186                	slli	gp,gp,0x1
 9e0:	0000                	unimp
 9e2:	018e                	slli	gp,gp,0x3
 9e4:	0000                	unimp
 9e6:	0004                	0x4
 9e8:	9f5a01f3          	0x9f5a01f3
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	0024                	addi	s1,sp,8
   2:	0000                	unimp
   4:	0002                	c.slli64	zero
   6:	0000                	unimp
   8:	0000                	unimp
   a:	0004                	0x4
   c:	0000                	unimp
   e:	0000                	unimp
  10:	01ea                	slli	gp,gp,0x1a
  12:	0000                	unimp
  14:	0084                	addi	s1,sp,64
  16:	0000                	unimp
  18:	026e                	slli	tp,tp,0x1b
  1a:	0000                	unimp
  1c:	0112                	slli	sp,sp,0x4
	...
  26:	0000                	unimp
  28:	001c                	0x1c
  2a:	0000                	unimp
  2c:	0002                	c.slli64	zero
  2e:	047e                	slli	s0,s0,0x1f
  30:	0000                	unimp
  32:	0004                	0x4
  34:	0000                	unimp
  36:	0000                	unimp
  38:	0380                	addi	s0,sp,448
  3a:	0000                	unimp
  3c:	041c                	addi	a5,sp,512
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	027a                	slli	tp,tp,0x1e
   2:	0000                	unimp
   4:	0280                	addi	s0,sp,320
   6:	0000                	unimp
   8:	0286                	slli	t0,t0,0x1
   a:	0000                	unimp
   c:	028e                	slli	t0,t0,0x3
   e:	0000                	unimp
  10:	0292                	slli	t0,t0,0x4
  12:	0000                	unimp
  14:	029e                	slli	t0,t0,0x7
	...
  1e:	0000                	unimp
  20:	02c6                	slli	t0,t0,0x11
  22:	0000                	unimp
  24:	02ca                	slli	t0,t0,0x12
  26:	0000                	unimp
  28:	02d0                	addi	a2,sp,324
  2a:	0000                	unimp
  2c:	02da                	slli	t0,t0,0x16
	...
  36:	0000                	unimp
  38:	02ca                	slli	t0,t0,0x12
  3a:	0000                	unimp
  3c:	02d0                	addi	a2,sp,324
  3e:	0000                	unimp
  40:	02ea                	slli	t0,t0,0x1a
  42:	0000                	unimp
  44:	02f8                	addi	a4,sp,332
	...
  4e:	0000                	unimp
  50:	01ea                	slli	gp,gp,0x1a
  52:	0000                	unimp
  54:	026e                	slli	tp,tp,0x1b
  56:	0000                	unimp
  58:	026e                	slli	tp,tp,0x1b
  5a:	0000                	unimp
  5c:	0380                	addi	s0,sp,448
	...
  66:	0000                	unimp
  68:	003e                	c.slli	zero,0xf
  6a:	0000                	unimp
  6c:	0042                	c.slli	zero,0x10
  6e:	0000                	unimp
  70:	0042                	c.slli	zero,0x10
  72:	0000                	unimp
  74:	004c                	addi	a1,sp,4
	...
  7e:	0000                	unimp
  80:	003e                	c.slli	zero,0xf
  82:	0000                	unimp
  84:	0042                	c.slli	zero,0x10
  86:	0000                	unimp
  88:	0042                	c.slli	zero,0x10
  8a:	0000                	unimp
  8c:	0044                	addi	s1,sp,4
	...
  96:	0000                	unimp
  98:	0080                	addi	s0,sp,64
  9a:	0000                	unimp
  9c:	008a                	slli	ra,ra,0x2
  9e:	0000                	unimp
  a0:	008e                	slli	ra,ra,0x3
  a2:	0000                	unimp
  a4:	0092                	slli	ra,ra,0x4
	...
  ae:	0000                	unimp
  b0:	008a                	slli	ra,ra,0x2
  b2:	0000                	unimp
  b4:	008e                	slli	ra,ra,0x3
  b6:	0000                	unimp
  b8:	0098                	addi	a4,sp,64
  ba:	0000                	unimp
  bc:	009a                	slli	ra,ra,0x6
	...
  c6:	0000                	unimp
  c8:	00a2                	slli	ra,ra,0x8
  ca:	0000                	unimp
  cc:	00a6                	slli	ra,ra,0x9
  ce:	0000                	unimp
  d0:	00a6                	slli	ra,ra,0x9
  d2:	0000                	unimp
  d4:	00aa                	slli	ra,ra,0xa
	...
  de:	0000                	unimp
  e0:	01fa                	slli	gp,gp,0x1e
  e2:	0000                	unimp
  e4:	01fe                	slli	gp,gp,0x1f
  e6:	0000                	unimp
  e8:	0200                	addi	s0,sp,256
  ea:	0000                	unimp
  ec:	0206                	slli	tp,tp,0x1
  ee:	0000                	unimp
  f0:	020e                	slli	tp,tp,0x3
  f2:	0000                	unimp
  f4:	0212                	slli	tp,tp,0x4
	...
  fe:	0000                	unimp
 100:	023a                	slli	tp,tp,0xe
 102:	0000                	unimp
 104:	0248                	addi	a0,sp,260
 106:	0000                	unimp
 108:	024c                	addi	a1,sp,260
 10a:	0000                	unimp
 10c:	0250                	addi	a2,sp,260
	...
 116:	0000                	unimp
 118:	0288                	addi	a0,sp,320
 11a:	0000                	unimp
 11c:	0296                	slli	t0,t0,0x5
 11e:	0000                	unimp
 120:	029a                	slli	t0,t0,0x6
 122:	0000                	unimp
 124:	029a                	slli	t0,t0,0x6
	...
 12e:	0000                	unimp
 130:	02cc                	addi	a1,sp,324
 132:	0000                	unimp
 134:	02da                	slli	t0,t0,0x16
 136:	0000                	unimp
 138:	02de                	slli	t0,t0,0x17
 13a:	0000                	unimp
 13c:	02e2                	slli	t0,t0,0x18
	...
 146:	0000                	unimp
 148:	0314                	addi	a3,sp,384
 14a:	0000                	unimp
 14c:	0322                	slli	t1,t1,0x8
 14e:	0000                	unimp
 150:	0334                	addi	a3,sp,392
 152:	0000                	unimp
 154:	0334                	addi	a3,sp,392
	...
 15e:	0000                	unimp
 160:	0356                	slli	t1,t1,0x15
 162:	0000                	unimp
 164:	0364                	addi	s1,sp,396
 166:	0000                	unimp
 168:	0368                	addi	a0,sp,396
 16a:	0000                	unimp
 16c:	036c                	addi	a1,sp,396
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
       0:	04b5                	addi	s1,s1,13
       2:	0000                	unimp
       4:	00da0003          	lb	zero,13(s4)
       8:	0000                	unimp
       a:	0101                	addi	sp,sp,0
       c:	000d0efb          	0xd0efb
      10:	0101                	addi	sp,sp,0
      12:	0101                	addi	sp,sp,0
      14:	0000                	unimp
      16:	0100                	addi	s0,sp,128
      18:	0000                	unimp
      1a:	7301                	lui	t1,0xfffe0
      1c:	6372                	flw	ft6,28(sp)
      1e:	2f00                	fld	fs0,24(a4)
      20:	7375                	lui	t1,0xffffd
      22:	2f72                	fld	ft10,280(sp)
      24:	696c                	flw	fa1,84(a0)
      26:	2f62                	fld	ft10,24(sp)
      28:	2f636367          	0x2f636367
      2c:	6972                	flw	fs2,28(sp)
      2e:	36766373          	csrrsi	t1,0x367,12
      32:	2d34                	fld	fa3,88(a0)
      34:	6e75                	lui	t3,0x1d
      36:	776f6e6b          	0x776f6e6b
      3a:	2d6e                	fld	fs10,216(sp)
      3c:	6c65                	lui	s8,0x19
      3e:	2f66                	fld	ft10,88(sp)
      40:	2e38                	fld	fa4,88(a2)
      42:	2f302e33          	0x2f302e33
      46:	6e69                	lui	t3,0x1a
      48:	64756c63          	bltu	a0,t2,6a0 <eclic_set_irq_priority+0x20>
      4c:	0065                	c.nop	25
      4e:	696c                	flw	fa1,84(a0)
      50:	2f62                	fld	ft10,24(sp)
      52:	6946                	flw	fs2,80(sp)
      54:	6d72                	flw	fs10,28(sp)
      56:	65726177          	0x65726177
      5a:	5349522f          	0x5349522f
      5e:	642f5643          	0x642f5643
      62:	6972                	flw	fs2,28(sp)
      64:	6576                	flw	fa0,92(sp)
      66:	7372                	flw	ft6,60(sp)
      68:	6c00                	flw	fs0,24(s0)
      6a:	6269                	lui	tp,0x1a
      6c:	7269462f          	0x7269462f
      70:	776d                	lui	a4,0xffffb
      72:	7261                	lui	tp,0xffff8
      74:	2f65                	jal	82c <CSR_MTVT2+0x40>
      76:	32334447          	fmsub.d	fs0,ft6,ft3,ft6,rmm
      7a:	4656                	lw	a2,84(sp)
      7c:	3031                	jal	fffff888 <_stack_end+0xdfff7888>
      7e:	74735f33          	0x74735f33
      82:	6e61                	lui	t3,0x18
      84:	6164                	flw	fs1,68(a0)
      86:	6472                	flw	fs0,28(sp)
      88:	705f 7265 7069      	0x70697265705f
      8e:	6568                	flw	fa0,76(a0)
      90:	6172                	flw	ft2,28(sp)
      92:	006c                	addi	a1,sp,12
      94:	6d00                	flw	fs0,24(a0)
      96:	6961                	lui	s2,0x18
      98:	2e6e                	fld	ft8,216(sp)
      9a:	00010063          	beqz	sp,9a <MSTATUS_MIE+0x92>
      9e:	7300                	flw	fs0,32(a4)
      a0:	6474                	flw	fa3,76(s0)
      a2:	6e69                	lui	t3,0x1a
      a4:	2d74                	fld	fa3,216(a0)
      a6:	2e636367          	0x2e636367
      aa:	0068                	addi	a0,sp,12
      ac:	0002                	c.slli64	zero
      ae:	6e00                	flw	fs0,24(a2)
      b0:	3032                	fld	ft0,296(sp)
      b2:	5f30                	lw	a2,120(a4)
      b4:	7566                	flw	fa0,120(sp)
      b6:	636e                	flw	ft6,216(sp)
      b8:	682e                	flw	fa6,200(sp)
      ba:	0300                	addi	s0,sp,384
      bc:	0000                	unimp
      be:	32336467          	0x32336467
      c2:	6676                	flw	fa2,92(sp)
      c4:	3031                	jal	fffff8d0 <_stack_end+0xdfff78d0>
      c6:	00682e33          	slt	t3,a6,t1
      ca:	0004                	0x4
      cc:	7300                	flw	fs0,32(a4)
      ce:	7379                	lui	t1,0xffffe
      d0:	6574                	flw	fa3,76(a0)
      d2:	5f6d                	li	t5,-5
      d4:	32336467          	0x32336467
      d8:	6676                	flw	fa2,92(sp)
      da:	3031                	jal	fffff8e6 <_stack_end+0xdfff78e6>
      dc:	00682e33          	slt	t3,a6,t1
      e0:	0004                	0x4
      e2:	0000                	unimp
      e4:	1a05                	addi	s4,s4,-31
      e6:	0500                	addi	s0,sp,640
      e8:	ea02                	fsw	ft0,20(sp)
      ea:	0001                	nop
      ec:	0300                	addi	s0,sp,384
      ee:	0305010f          	0x305010f
      f2:	00090103          	lb	sp,0(s2) # 18000 <CSR_MTVT2+0x17814>
      f6:	0100                	addi	s0,sp,128
      f8:	0200                	addi	s0,sp,256
      fa:	0104                	addi	s1,sp,128
      fc:	0306                	slli	t1,t1,0x1
      fe:	0900                	addi	s0,sp,144
     100:	0000                	unimp
     102:	0501                	addi	a0,a0,0
     104:	0301                	addi	t1,t1,0
     106:	0901                	addi	s2,s2,0
     108:	0002                	c.slli64	zero
     10a:	0501                	addi	a0,a0,0
     10c:	0014                	0x14
     10e:	0402                	c.slli64	s0
     110:	0602                	c.slli64	a2
     112:	02097f03          	0x2097f03
     116:	0100                	addi	s0,sp,128
     118:	1105                	addi	sp,sp,-31
     11a:	0200                	addi	s0,sp,256
     11c:	0204                	addi	s1,sp,256
     11e:	0306                	slli	t1,t1,0x1
     120:	0900                	addi	s0,sp,144
     122:	0002                	c.slli64	zero
     124:	0501                	addi	a0,a0,0
     126:	061d                	addi	a2,a2,7
     128:	04091f03          	lh	t5,64(s2)
     12c:	0100                	addi	s0,sp,128
     12e:	0305                	addi	t1,t1,1
     130:	00090103          	lb	sp,0(s2)
     134:	0100                	addi	s0,sp,128
     136:	1d05                	addi	s10,s10,-31
     138:	0306                	slli	t1,t1,0x1
     13a:	097f                	0x97f
     13c:	0000                	unimp
     13e:	0501                	addi	a0,a0,0
     140:	0316                	slli	t1,t1,0x5
     142:	0901                	addi	s2,s2,0
     144:	0004                	0x4
     146:	0501                	addi	a0,a0,0
     148:	031d                	addi	t1,t1,7
     14a:	097f                	0x97f
     14c:	0004                	0x4
     14e:	0501                	addi	a0,a0,0
     150:	0316                	slli	t1,t1,0x5
     152:	0901                	addi	s2,s2,0
     154:	0002                	c.slli64	zero
     156:	0501                	addi	a0,a0,0
     158:	031d                	addi	t1,t1,7
     15a:	097f                	0x97f
     15c:	0004                	0x4
     15e:	0501                	addi	a0,a0,0
     160:	0316                	slli	t1,t1,0x5
     162:	0901                	addi	s2,s2,0
     164:	001c                	0x1c
     166:	0501                	addi	a0,a0,0
     168:	01030603          	lb	a2,16(t1) # ffffe010 <_stack_end+0xdfff6010>
     16c:	0809                	addi	a6,a6,2
     16e:	0100                	addi	s0,sp,128
     170:	1605                	addi	a2,a2,-31
     172:	0306                	slli	t1,t1,0x1
     174:	0900                	addi	s0,sp,144
     176:	0000                	unimp
     178:	0501                	addi	a0,a0,0
     17a:	01030603          	lb	a2,16(t1)
     17e:	0809                	addi	a6,a6,2
     180:	0100                	addi	s0,sp,128
     182:	00090003          	lb	zero,0(s2)
     186:	0100                	addi	s0,sp,128
     188:	0306                	slli	t1,t1,0x1
     18a:	0901                	addi	s2,s2,0
     18c:	0008                	0x8
     18e:	0301                	addi	t1,t1,0
     190:	097f                	0x97f
     192:	0008                	0x8
     194:	0601                	addi	a2,a2,0
     196:	08090103          	lb	sp,128(s2)
     19a:	0100                	addi	s0,sp,128
     19c:	0105                	addi	sp,sp,1
     19e:	0306                	slli	t1,t1,0x1
     1a0:	0901                	addi	s2,s2,0
     1a2:	0002                	c.slli64	zero
     1a4:	0901                	addi	s2,s2,0
     1a6:	0026                	c.slli	zero,0x9
     1a8:	0100                	addi	s0,sp,128
     1aa:	0501                	addi	a0,a0,0
     1ac:	0205000b          	0x205000b
     1b0:	026e                	slli	tp,tp,0x1b
     1b2:	0000                	unimp
     1b4:	05011303          	lh	t1,80(sp) # 1001105c <CSR_MTVT2+0x10010870>
     1b8:	09020303          	lb	t1,144(tp) # ffff8090 <_stack_end+0xdfff0090>
     1bc:	0000                	unimp
     1be:	0301                	addi	t1,t1,0
     1c0:	00060903          	lb	s2,0(a2)
     1c4:	0501                	addi	a0,a0,0
     1c6:	060e                	slli	a2,a2,0x3
     1c8:	00090003          	lb	zero,0(s2)
     1cc:	0100                	addi	s0,sp,128
     1ce:	0305                	addi	t1,t1,1
     1d0:	06090103          	lb	sp,96(s2)
     1d4:	0100                	addi	s0,sp,128
     1d6:	0e05                	addi	t3,t3,1
     1d8:	06097f03          	0x6097f03
     1dc:	0100                	addi	s0,sp,128
     1de:	0305                	addi	t1,t1,1
     1e0:	0306                	slli	t1,t1,0x1
     1e2:	0901                	addi	s2,s2,0
     1e4:	0006                	c.slli	zero,0x1
     1e6:	0301                	addi	t1,t1,0
     1e8:	0900                	addi	s0,sp,144
  for(;time;time--)asm volatile("nop");
     1ea:	0000                	unimp
}
     1ec:	0301                	addi	t1,t1,0
  for(;time;time--)asm volatile("nop");
     1ee:	0900                	addi	s0,sp,144
     1f0:	0000                	unimp
     1f2:	0301                	addi	t1,t1,0
void USART0_IRQHandler(void){
     1f4:	0900                	addi	s0,sp,144
     1f6:	0000                	unimp
  USART_CTL0(USART0) &=~ USART_CTL0_TBEIE;
     1f8:	0301                	addi	t1,t1,0
     1fa:	0900                	addi	s0,sp,144
void USART0_IRQHandler(void){
     1fc:	0000                	unimp
  USART_CTL0(USART0) &=~ USART_CTL0_TBEIE;
     1fe:	0301                	addi	t1,t1,0
     200:	0900                	addi	s0,sp,144
void USART0_IRQHandler(void){
     202:	0008                	0x8
     204:	0601                	addi	a2,a2,0
     206:	00090903          	lb	s2,0(s2)
     20a:	0100                	addi	s0,sp,128
     20c:	04097703          	0x4097703
     210:	0100                	addi	s0,sp,128
     212:	0306                	slli	t1,t1,0x1
     214:	0900                	addi	s0,sp,144
     216:	0002                	c.slli64	zero
     218:	0301                	addi	t1,t1,0
     21a:	0900                	addi	s0,sp,144
     21c:	0006                	c.slli	zero,0x1
  USART_CTL0(USART0) &=~ USART_CTL0_TBEIE;
     21e:	0301                	addi	t1,t1,0
     220:	0900                	addi	s0,sp,144
     222:	0004                	0x4
     224:	0501                	addi	a0,a0,0
  USART_DATA(USART0) = 'U';
     226:	0316                	slli	t1,t1,0x5
     228:	0900                	addi	s0,sp,144
     22a:	0000                	unimp
     22c:	0301                	addi	t1,t1,0
  GPO_T(RLED);
     22e:	0900                	addi	s0,sp,144
     230:	0000                	unimp
     232:	0301                	addi	t1,t1,0
     234:	0900                	addi	s0,sp,144
  sleep(300000);
     236:	0000                	unimp
     238:	0301                	addi	t1,t1,0
     23a:	0900                	addi	s0,sp,144
     23c:	0000                	unimp
  GPO_T(RLED);
     23e:	0301                	addi	t1,t1,0
     240:	0900                	addi	s0,sp,144
     242:	0000                	unimp
     244:	0301                	addi	t1,t1,0
  sleep(300000);
     246:	0900                	addi	s0,sp,144
}
     248:	0004                	0x4
     24a:	0301                	addi	t1,t1,0
     24c:	0900                	addi	s0,sp,144
     24e:	0008                	0x8
     250:	0301                	addi	t1,t1,0
     252:	0900                	addi	s0,sp,144
     254:	0006                	c.slli	zero,0x1
     256:	0301                	addi	t1,t1,0
     258:	0900                	addi	s0,sp,144
     25a:	0004                	0x4
     25c:	0501                	addi	a0,a0,0
     25e:	0329                	addi	t1,t1,10
     260:	0900                	addi	s0,sp,144
     262:	0000                	unimp
     264:	0301                	addi	t1,t1,0
     266:	0900                	addi	s0,sp,144
     268:	0000                	unimp
     26a:	0301                	addi	t1,t1,0
     26c:	0900                	addi	s0,sp,144
  eclic_init(ECLIC_NUM_INTERRUPTS);
     26e:	0000                	unimp
     270:	0301                	addi	t1,t1,0
     272:	0900                	addi	s0,sp,144
  RCU_APB2EN |= RCU_APB2EN_PAEN | RCU_APB2EN_PBEN | RCU_APB2EN_PCEN;
     274:	0000                	unimp
     276:	0301                	addi	t1,t1,0
     278:	0900                	addi	s0,sp,144
  GPIO_config(RLED); GPIO_config(YLED); GPIO_config(GLED);
     27a:	0000                	unimp
     27c:	0301                	addi	t1,t1,0
     27e:	0900                	addi	s0,sp,144
  RCU_APB2EN |= RCU_APB2EN_PAEN | RCU_APB2EN_PBEN | RCU_APB2EN_PCEN;
     280:	0004                	0x4
     282:	0301                	addi	t1,t1,0
     284:	0900                	addi	s0,sp,144
  GPIO_config(RLED); GPIO_config(YLED); GPIO_config(GLED);
     286:	0008                	0x8
     288:	0301                	addi	t1,t1,0
     28a:	0900                	addi	s0,sp,144
     28c:	0002                	c.slli64	zero
  eclic_set_vmode( USART0_IRQn );
     28e:	0301                	addi	t1,t1,0
     290:	0900                	addi	s0,sp,144
  GPIO_config(RLED); GPIO_config(YLED); GPIO_config(GLED);
     292:	0004                	0x4
     294:	0501                	addi	a0,a0,0
     296:	09010303          	lb	t1,144(sp)
     29a:	0000                	unimp
     29c:	0301                	addi	t1,t1,0
     29e:	0900                	addi	s0,sp,144
     2a0:	0000                	unimp
     2a2:	0301                	addi	t1,t1,0
     2a4:	0900                	addi	s0,sp,144
     2a6:	0000                	unimp
     2a8:	0301                	addi	t1,t1,0
     2aa:	0900                	addi	s0,sp,144
     2ac:	0000                	unimp
     2ae:	0301                	addi	t1,t1,0
     2b0:	0900                	addi	s0,sp,144
     2b2:	0000                	unimp
     2b4:	0301                	addi	t1,t1,0
     2b6:	0900                	addi	s0,sp,144
     2b8:	0004                	0x4
     2ba:	0601                	addi	a2,a2,0
     2bc:	00090303          	lb	t1,0(s2)
     2c0:	0100                	addi	s0,sp,128
     2c2:	06097d03          	0x6097d03
  GPIO_config(SBTN); GPIO_config(RBTN);
     2c6:	0100                	addi	s0,sp,128
     2c8:	0306                	slli	t1,t1,0x1
  GPIO_config(UART0_RX); GPIO_config(UART0_TX);
     2ca:	0900                	addi	s0,sp,144
     2cc:	0002                	c.slli64	zero
     2ce:	0301                	addi	t1,t1,0
  GPIO_config(SBTN); GPIO_config(RBTN);
     2d0:	0900                	addi	s0,sp,144
     2d2:	0004                	0x4
     2d4:	0301                	addi	t1,t1,0
     2d6:	0900                	addi	s0,sp,144
     2d8:	0004                	0x4
     2da:	0501                	addi	a0,a0,0
     2dc:	0316                	slli	t1,t1,0x5
     2de:	0900                	addi	s0,sp,144
     2e0:	0000                	unimp
     2e2:	0301                	addi	t1,t1,0
     2e4:	0900                	addi	s0,sp,144
     2e6:	0000                	unimp
     2e8:	0301                	addi	t1,t1,0
  GPIO_config(UART0_RX); GPIO_config(UART0_TX);
     2ea:	0900                	addi	s0,sp,144
     2ec:	0000                	unimp
     2ee:	0301                	addi	t1,t1,0
     2f0:	0900                	addi	s0,sp,144
     2f2:	0000                	unimp
     2f4:	0301                	addi	t1,t1,0
     2f6:	0900                	addi	s0,sp,144
     2f8:	0000                	unimp
     2fa:	0301                	addi	t1,t1,0
     2fc:	0900                	addi	s0,sp,144
     2fe:	0004                	0x4
     300:	0301                	addi	t1,t1,0
     302:	0900                	addi	s0,sp,144
     304:	0004                	0x4
     306:	0301                	addi	t1,t1,0
  RCU_APB2EN |= RCU_APB2EN_USART0EN | RCU_APB2EN_AFEN;
     308:	0900                	addi	s0,sp,144
     30a:	0004                	0x4
     30c:	0301                	addi	t1,t1,0
     30e:	0900                	addi	s0,sp,144
     310:	0004                	0x4
  USART_BAUD(USART0) = 8000000 / 9600;
     312:	0501                	addi	a0,a0,0
     314:	09030303          	lb	t1,144(t1)
     318:	0000                	unimp
     31a:	0301                	addi	t1,t1,0
     31c:	0900                	addi	s0,sp,144
  USART_CTL0(USART0) = USART_CTL0_UEN | USART_CTL0_REN | USART_CTL0_TEN;
     31e:	0000                	unimp
     320:	0301                	addi	t1,t1,0
     322:	0900                	addi	s0,sp,144
     324:	0000                	unimp
  eclic_set_vmode( USART0_IRQn );
     326:	0301                	addi	t1,t1,0
  eclic_enable_interrupt( USART0_IRQn );
     328:	0900                	addi	s0,sp,144
     32a:	0000                	unimp
     32c:	0301                	addi	t1,t1,0
  eclic_global_interrupt_enable();
     32e:	0900                	addi	s0,sp,144
     330:	0000                	unimp
    sleep(100000);
     332:	0301                	addi	t1,t1,0
    GPO_T(YLED);
     334:	0900                	addi	s0,sp,144
     336:	0004                	0x4
    if( GPI_ON(SBTN) )GPO_ON(GLED); else GPO_OFF(GLED);
     338:	0301                	addi	t1,t1,0
     33a:	0900                	addi	s0,sp,144
     33c:	0002                	c.slli64	zero
     33e:	0301                	addi	t1,t1,0
    if( GPI_ON(RBTN) )USART_CTL0(USART0) |= USART_CTL0_TBEIE;
     340:	0900                	addi	s0,sp,144
     342:	0004                	0x4
    sleep(100000);
     344:	0301                	addi	t1,t1,0
     346:	0900                	addi	s0,sp,144
    GPO_T(YLED);
     348:	0004                	0x4
     34a:	0501                	addi	a0,a0,0
     34c:	031a                	slli	t1,t1,0x6
     34e:	0900                	addi	s0,sp,144
     350:	0000                	unimp
     352:	0301                	addi	t1,t1,0
    if( GPI_ON(SBTN) )GPO_ON(GLED); else GPO_OFF(GLED);
     354:	0900                	addi	s0,sp,144
     356:	0000                	unimp
     358:	0301                	addi	t1,t1,0
     35a:	0900                	addi	s0,sp,144
     35c:	0000                	unimp
     35e:	0301                	addi	t1,t1,0
    if( GPI_ON(RBTN) )USART_CTL0(USART0) |= USART_CTL0_TBEIE;
     360:	0900                	addi	s0,sp,144
     362:	0000                	unimp
     364:	0301                	addi	t1,t1,0
     366:	0900                	addi	s0,sp,144
     368:	0000                	unimp
     36a:	0301                	addi	t1,t1,0
     36c:	0900                	addi	s0,sp,144
     36e:	0004                	0x4
     370:	0301                	addi	t1,t1,0
     372:	0900                	addi	s0,sp,144
    sleep(100000);
     374:	0004                	0x4
     376:	0301                	addi	t1,t1,0
    GPO_T(YLED);
     378:	0900                	addi	s0,sp,144
    if( GPI_ON(SBTN) )GPO_ON(GLED); else GPO_OFF(GLED);
     37a:	0004                	0x4
     37c:	0301                	addi	t1,t1,0
     37e:	0900                	addi	s0,sp,144
    asm volatile ("li x6, 0xffffffff":::"x6");
     380:	0004                	0x4
     382:	0501                	addi	a0,a0,0
    asm volatile ("csrw pmpaddr0, x6":::);
     384:	09010303          	lb	t1,144(sp)
    asm volatile ("li x6, 0x7f":::"x6");
     388:	0000                	unimp
     38a:	0501                	addi	a0,a0,0
    asm volatile ("csrw pmpcfg0, x6":::);
     38c:	060e                	slli	a2,a2,0x3
     38e:	00090003          	lb	zero,0(s2)
    clear_csr (mstatus,MSTATUS_MPP);
     392:	0100                	addi	s0,sp,128
     394:	0305                	addi	t1,t1,1
     396:	0306                	slli	t1,t1,0x1
     398:	0901                	addi	s2,s2,0
     39a:	000a                	c.slli	zero,0x2
    asm volatile ("la x6, 1f    ":::"x6");
     39c:	0501                	addi	a0,a0,0
     39e:	0616                	slli	a2,a2,0x5
     3a0:	00090003          	lb	zero,0(s2)
    asm volatile ("csrw mepc, x6":::);
     3a4:	0100                	addi	s0,sp,128
     3a6:	0305                	addi	t1,t1,1
    asm volatile ("mret":::);
     3a8:	0306                	slli	t1,t1,0x1
     3aa:	0901                	addi	s2,s2,0
} 
     3ac:	000c                	0xc
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME);
     3ae:	0501                	addi	a0,a0,0
     3b0:	0616                	slli	a2,a2,0x5
     3b2:	00090003          	lb	zero,0(s2)
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME + 4);
     3b6:	0100                	addi	s0,sp,128
     3b8:	0305                	addi	t1,t1,1
     3ba:	0306                	slli	t1,t1,0x1
}
     3bc:	0902                	c.slli64	s2
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME + 4);
     3be:	0008                	0x8
     3c0:	0301                	addi	t1,t1,0
     3c2:	0901                	addi	s2,s2,0
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME);
     3c4:	0002                	c.slli64	zero
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME + 4);
     3c6:	0301                	addi	t1,t1,0
    if (hi == mtime_hi())
     3c8:	0902                	c.slli64	s2
     3ca:	0006                	c.slli	zero,0x1
}
     3cc:	0301                	addi	t1,t1,0
  return TIMER_FREQ;
     3ce:	0900                	addi	s0,sp,144
     3d0:	0000                	unimp
     3d2:	0301                	addi	t1,t1,0
     3d4:	0900                	addi	s0,sp,144
     3d6:	0000                	unimp
}
     3d8:	0301                	addi	t1,t1,0
     3da:	0900                	addi	s0,sp,144
    uint32_t hi = read_csr(minstreth);
     3dc:	0000                	unimp
     3de:	0301                	addi	t1,t1,0
    uint32_t lo = read_csr(minstret);
     3e0:	0900                	addi	s0,sp,144
     3e2:	0004                	0x4
    if (hi == read_csr(minstreth))
     3e4:	0501                	addi	a0,a0,0
     3e6:	0605                	addi	a2,a2,1
     3e8:	00090603          	lb	a2,0(s2)
}
     3ec:	0100                	addi	s0,sp,128
    uint32_t hi = read_csr(mcycleh);
     3ee:	02097d03          	0x2097d03
    uint32_t lo = read_csr(mcycle);
     3f2:	0100                	addi	s0,sp,128
     3f4:	2a05                	jal	524 <eclic_set_mth+0x2>
    if (hi == read_csr(mcycleh))
     3f6:	04090103          	lb	sp,64(s2)
     3fa:	0100                	addi	s0,sp,128
     3fc:	1705                	addi	a4,a4,-31
}
     3fe:	04090003          	lb	zero,64(s2)
  return TIMER_FREQ;
     402:	0100                	addi	s0,sp,128
     404:	2a05                	jal	534 <eclic_get_mth+0x8>
     406:	04090103          	lb	sp,64(s2)
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME);
     40a:	0100                	addi	s0,sp,128
     40c:	0505                	addi	a0,a0,1
  return TIMER_FREQ;
     40e:	04090103          	lb	sp,64(s2)
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME);
     412:	0100                	addi	s0,sp,128
     414:	0305                	addi	t1,t1,1
     416:	0306                	slli	t1,t1,0x1
     418:	097c                	addi	a5,sp,156
  } while (start_mtime == tmp);
     41a:	0004                	0x4
     41c:	0501                	addi	a0,a0,0
  uint32_t start_mcycle = read_csr(mcycle);
     41e:	0305                	addi	t1,t1,1
     420:	0901                	addi	s2,s2,0
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME);
     422:	0000                	unimp
     424:	0301                	addi	t1,t1,0
     426:	0900                	addi	s0,sp,144
     428:	0000                	unimp
    delta_mtime = mtime_lo() - start_mtime;
     42a:	0301                	addi	t1,t1,0
     42c:	0901                	addi	s2,s2,0
  } while (delta_mtime < n);
     42e:	000c                	0xc
     430:	0501                	addi	a0,a0,0
  uint32_t delta_mcycle = read_csr(mcycle) - start_mcycle;
     432:	0609                	addi	a2,a2,2
     434:	00090003          	lb	zero,0(s2)
     438:	0100                	addi	s0,sp,128
         + ((delta_mcycle % delta_mtime) * mtime_freq) / delta_mtime;
     43a:	0705                	addi	a4,a4,1
     43c:	06090003          	lb	zero,96(s2)
  return (delta_mcycle / delta_mtime) * mtime_freq
     440:	0100                	addi	s0,sp,128
         + ((delta_mcycle % delta_mtime) * mtime_freq) / delta_mtime;
     442:	1705                	addi	a4,a4,-31
     444:	0200                	addi	s0,sp,256
     446:	0104                	addi	s1,sp,128
     448:	0306                	slli	t1,t1,0x1
  return (delta_mcycle / delta_mtime) * mtime_freq
     44a:	0900                	addi	s0,sp,144
     44c:	0002                	c.slli64	zero
}
     44e:	0001                	nop
     450:	0402                	c.slli64	s0
{
     452:	0301                	addi	t1,t1,0
  measure_cpu_freq(1);
     454:	0900                	addi	s0,sp,144
{
     456:	0000                	unimp
  measure_cpu_freq(1);
     458:	0501                	addi	a0,a0,0
}
     45a:	0305                	addi	t1,t1,1
  cpu_freq = measure_cpu_freq(100);
     45c:	0901                	addi	s2,s2,0
     45e:	0004                	0x4
}
     460:	0501                	addi	a0,a0,0
  cpu_freq = measure_cpu_freq(100);
     462:	0609                	addi	a2,a2,2
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_CFG_OFFSET)=0;
     464:	00090003          	lb	zero,0(s2)
     468:	0100                	addi	s0,sp,128
     46a:	0705                	addi	a4,a4,1
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_MTH_OFFSET)=0;
     46c:	06090003          	lb	zero,96(s2)
  vuint32_t * upper = (vuint32_t*)(base + num_irq*4);
     470:	0100                	addi	s0,sp,128
     472:	1705                	addi	a4,a4,-31
     474:	0200                	addi	s0,sp,256
     476:	0104                	addi	s1,sp,128
  for (ptr = base; ptr < upper; ptr=ptr+4){
     478:	0306                	slli	t1,t1,0x1
     47a:	0900                	addi	s0,sp,144
}
     47c:	0002                	c.slli64	zero
    *ptr = 0;
     47e:	0501                	addi	a0,a0,0
     480:	002a                	c.slli	zero,0xa
  for (ptr = base; ptr < upper; ptr=ptr+4){
     482:	0402                	c.slli64	s0
     484:	0601                	addi	a2,a2,0
    *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_IE_OFFSET+source*4) = 1;
     486:	00090003          	lb	zero,0(s2)
     48a:	0100                	addi	s0,sp,128
     48c:	0505                	addi	a0,a0,1
     48e:	0306                	slli	t1,t1,0x1
     490:	0901                	addi	s2,s2,0
     492:	000c                	0xc
     494:	0601                	addi	a2,a2,0
}
     496:	04097d03          	0x4097d03
    *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_IE_OFFSET+source*4) = 0;
     49a:	0100                	addi	s0,sp,128
     49c:	2a05                	jal	5cc <eclic_get_irq_lvl+0x1c>
     49e:	0200                	addi	s0,sp,256
     4a0:	0204                	addi	s1,sp,256
     4a2:	0306                	slli	t1,t1,0x1
     4a4:	0901                	addi	s2,s2,0
}
     4a6:	0002                	c.slli64	zero
    *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_IP_OFFSET+source*4) = 1;
     4a8:	0001                	nop
     4aa:	0402                	c.slli64	s0
     4ac:	0302                	c.slli64	t1
     4ae:	0900                	addi	s0,sp,144
     4b0:	0000                	unimp
     4b2:	0901                	addi	s2,s2,0
     4b4:	0006                	c.slli	zero,0x1
     4b6:	0100                	addi	s0,sp,128
     4b8:	ae01                	j	7c8 <CSR_MNVEC+0x5>
}
     4ba:	0300000f          	fence	rw,unknown
    *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_IP_OFFSET+source*4) = 0;
     4be:	c900                	sw	s0,16(a0)
     4c0:	0000                	unimp
     4c2:	0100                	addi	s0,sp,128
     4c4:	fb01                	bnez	a4,3d4 <get_timer_freq+0x6>
     4c6:	0d0e                	slli	s10,s10,0x3
     4c8:	0100                	addi	s0,sp,128
     4ca:	0101                	addi	sp,sp,0
}
     4cc:	0001                	nop
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4) = intctrl;
     4ce:	0000                	unimp
     4d0:	0001                	nop
     4d2:	0100                	addi	s0,sp,128
     4d4:	696c                	flw	fa1,84(a0)
     4d6:	2f62                	fld	ft10,24(sp)
     4d8:	6946                	flw	fs2,80(sp)
     4da:	6d72                	flw	fs10,28(sp)
}
     4dc:	65726177          	0x65726177
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
     4e0:	5349522f          	0x5349522f
     4e4:	642f5643          	0x642f5643
     4e8:	6972                	flw	fs2,28(sp)
     4ea:	6576                	flw	fa0,92(sp)
}
     4ec:	7372                	flw	ft6,60(sp)
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4) = intattr;
     4ee:	2f00                	fld	fs0,24(a4)
     4f0:	7375                	lui	t1,0xffffd
     4f2:	2f72                	fld	ft10,280(sp)
     4f4:	696c                	flw	fa1,84(a0)
     4f6:	2f62                	fld	ft10,24(sp)
     4f8:	2f636367          	0x2f636367
}
     4fc:	6972                	flw	fs2,28(sp)
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4);
     4fe:	36766373          	csrrsi	t1,0x367,12
     502:	2d34                	fld	fa3,88(a0)
     504:	6e75                	lui	t3,0x1d
     506:	776f6e6b          	0x776f6e6b
     50a:	2d6e                	fld	fs10,216(sp)
}
     50c:	6c65                	lui	s8,0x19
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_CFG_OFFSET) = cliccfg;
     50e:	2f66                	fld	ft10,88(sp)
     510:	2e38                	fld	fa4,88(a2)
     512:	2f302e33          	0x2f302e33
}
     516:	6e69                	lui	t3,0x1a
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_CFG_OFFSET);
     518:	64756c63          	bltu	a0,t2,b70 <CSR_MTVT2+0x384>
     51c:	0065                	c.nop	25
     51e:	696c                	flw	fa1,84(a0)
}
     520:	2f62                	fld	ft10,24(sp)
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_MTH_OFFSET) = mth;
     522:	6946                	flw	fs2,80(sp)
     524:	6d72                	flw	fs10,28(sp)
     526:	65726177          	0x65726177
}
     52a:	3344472f          	0x3344472f
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_MTH_OFFSET);
     52e:	5632                	lw	a2,44(sp)
     530:	3146                	fld	ft2,112(sp)
     532:	3330                	fld	fa2,96(a4)
}
     534:	735f 6174 646e      	0x646e6174735f
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_CFG_OFFSET);
     53a:	7261                	lui	tp,0xffff8
     53c:	5f64                	lw	s1,124(a4)
  uint8_t nlbits_shifted = nlbits << ECLIC_CFG_NLBITS_LSB;
     53e:	6570                	flw	fa2,76(a0)
  uint8_t new_cliccfg = (old_cliccfg & (~ECLIC_CFG_NLBITS_MASK)) | (ECLIC_CFG_NLBITS_MASK & nlbits_shifted); 
     540:	6972                	flw	fs2,28(sp)
     542:	6870                	flw	fa2,84(s0)
     544:	7265                	lui	tp,0xffff9
     546:	6c61                	lui	s8,0x18
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_CFG_OFFSET) = cliccfg;
     548:	0000                	unimp
     54a:	326e                	fld	ft4,248(sp)
}
     54c:	3030                	fld	fa2,96(s0)
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_CFG_OFFSET);
     54e:	665f 6e75 2e63      	0x2e636e75665f
     554:	00010063          	beqz	sp,554 <eclic_get_nlbits+0x6>
}
     558:	7300                	flw	fs0,32(a4)
     55a:	6474                	flw	fa3,76(s0)
void eclic_set_irq_lvl(uint32_t source, uint8_t lvl) {
     55c:	6e69                	lui	t3,0x1a
     55e:	2d74                	fld	fa3,216(a0)
     560:	2e636367          	0x2e636367
     564:	0068                	addi	a0,sp,12
  uint8_t nlbits = eclic_get_nlbits();
     566:	0002                	c.slli64	zero
  lvl = lvl >> (8-nlbits);
     568:	7300                	flw	fs0,32(a4)
     56a:	6474                	flw	fa3,76(s0)
     56c:	6564                	flw	fs1,76(a0)
     56e:	2e66                	fld	ft8,88(sp)
     570:	0068                	addi	a0,sp,12
     572:	0002                	c.slli64	zero
     574:	7300                	flw	fs0,32(a4)
     576:	7379                	lui	t1,0xffffe
     578:	6574                	flw	fa3,76(a0)
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
     57a:	5f6d                	li	t5,-5
     57c:	32336467          	0x32336467
     580:	6676                	flw	fa2,92(sp)
     582:	3031                	jal	fffffd8e <_stack_end+0xdfff7d8e>
     584:	00682e33          	slt	t3,a6,t1
  lvl = lvl >> (8-nlbits);
     588:	00000003          	lb	zero,0(zero) # 0 <_vector_table>
  lvl = lvl << (8-nlbits);
     58c:	1a05                	addi	s4,s4,-31
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
     58e:	0500                	addi	s0,sp,640
     590:	8002                	0x8002
  current_intctrl = current_intctrl << nlbits;
     592:	03000003          	lb	zero,48(zero) # 30 <MSTATUS_MIE+0x28>
  current_intctrl = current_intctrl >> nlbits;
     596:	0505010b          	0x505010b
     59a:	00090203          	lb	tp,0(s2)
  eclic_set_intctrl(source, (current_intctrl | lvl));
     59e:	0100                	addi	s0,sp,128
     5a0:	04090103          	lb	sp,64(s2)
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4) = intctrl;
     5a4:	0100                	addi	s0,sp,128
     5a6:	04090203          	lb	tp,64(s2)
}
     5aa:	0100                	addi	s0,sp,128
     5ac:	04090103          	lb	sp,64(s2)
uint8_t eclic_get_irq_lvl(uint32_t source) {
     5b0:	0100                	addi	s0,sp,128
     5b2:	0105                	addi	sp,sp,1
     5b4:	0306                	slli	t1,t1,0x1
     5b6:	0901                	addi	s2,s2,0
  uint8_t nlbits = eclic_get_nlbits();
     5b8:	0004                	0x4
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
     5ba:	0501                	addi	a0,a0,0
     5bc:	02030617          	auipc	a2,0x2030
     5c0:	0209                	addi	tp,tp,2
     5c2:	0100                	addi	s0,sp,128
     5c4:	0505                	addi	a0,a0,1
     5c6:	00090103          	lb	sp,0(s2)
  intctrl = intctrl >> (8-nlbits);
     5ca:	0100                	addi	s0,sp,128
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
     5cc:	00090003          	lb	zero,0(s2)
  intctrl = intctrl >> (8-nlbits);
     5d0:	0100                	addi	s0,sp,128
     5d2:	00090003          	lb	zero,0(s2)
     5d6:	0100                	addi	s0,sp,128
     5d8:	00090003          	lb	zero,0(s2)
}
     5dc:	0100                	addi	s0,sp,128
     5de:	0a090003          	lb	zero,160(s2)
  intctrl = intctrl >> (8-nlbits);
     5e2:	0100                	addi	s0,sp,128
  uint8_t lvl = intctrl << (8-nlbits);
     5e4:	00090303          	lb	t1,0(s2)
}
     5e8:	0100                	addi	s0,sp,128
     5ea:	08090103          	lb	sp,128(s2)
     5ee:	0100                	addi	s0,sp,128
void eclic_set_irq_lvl_abs(uint32_t source, uint8_t lvl_abs) {
     5f0:	04090103          	lb	sp,64(s2)
     5f4:	0100                	addi	s0,sp,128
     5f6:	04090103          	lb	sp,64(s2)
     5fa:	0100                	addi	s0,sp,128
  uint8_t nlbits = eclic_get_nlbits();
     5fc:	0105                	addi	sp,sp,1
  uint8_t lvl = lvl_abs << (8-nlbits);
     5fe:	0306                	slli	t1,t1,0x1
     600:	0901                	addi	s2,s2,0
     602:	0000                	unimp
     604:	0601                	addi	a2,a2,0
     606:	02090303          	lb	t1,32(s2)
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
     60a:	0100                	addi	s0,sp,128
     60c:	0305                	addi	t1,t1,1
     60e:	00090103          	lb	sp,0(s2)
     612:	0100                	addi	s0,sp,128
     614:	0a05                	addi	s4,s4,1
  uint8_t lvl = lvl_abs << (8-nlbits);
     616:	0306                	slli	t1,t1,0x1
     618:	0900                	addi	s0,sp,144
     61a:	0000                	unimp
  current_intctrl = current_intctrl << nlbits;
     61c:	0501                	addi	a0,a0,0
     61e:	0301                	addi	t1,t1,0
  current_intctrl = current_intctrl >> nlbits;
     620:	0901                	addi	s2,s2,0
     622:	0006                	c.slli	zero,0x1
  uint8_t lvl = lvl_abs << (8-nlbits);
     624:	0601                	addi	a2,a2,0
     626:	02090403          	lb	s0,32(s2)
  current_intctrl = current_intctrl >> nlbits;
     62a:	0100                	addi	s0,sp,128
     62c:	0305                	addi	t1,t1,1
  eclic_set_intctrl(source, (current_intctrl | lvl));
     62e:	00090103          	lb	sp,0(s2)
     632:	0100                	addi	s0,sp,128
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4) = intctrl;
     634:	0a05                	addi	s4,s4,1
     636:	0306                	slli	t1,t1,0x1
}
     638:	0900                	addi	s0,sp,144
     63a:	0000                	unimp
     63c:	0501                	addi	a0,a0,0
     63e:	0301                	addi	t1,t1,0
     640:	0901                	addi	s2,s2,0
uint8_t eclic_get_irq_lvl_abs(uint32_t source) {
     642:	0006                	c.slli	zero,0x1
     644:	0601                	addi	a2,a2,0
     646:	02090303          	lb	t1,32(s2)
  uint8_t nlbits = eclic_get_nlbits();
     64a:	0100                	addi	s0,sp,128
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
     64c:	0a05                	addi	s4,s4,1
     64e:	0306                	slli	t1,t1,0x1
     650:	097c                	addi	a5,sp,156
     652:	0000                	unimp
     654:	0501                	addi	a0,a0,0
     656:	05030603          	lb	a2,80(t1) # ffffe050 <_stack_end+0xdfff6050>
  intctrl = intctrl >> (8-nlbits);
     65a:	0409                	addi	s0,s0,2
     65c:	0100                	addi	s0,sp,128
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
     65e:	0505                	addi	a0,a0,1
     660:	00090103          	lb	sp,0(s2)
  intctrl = intctrl >> (8-nlbits);
     664:	0100                	addi	s0,sp,128
     666:	0305                	addi	t1,t1,1
     668:	00097a03          	0x97a03
}
     66c:	0100                	addi	s0,sp,128
     66e:	0a05                	addi	s4,s4,1
  intctrl = intctrl >> (8-nlbits);
     670:	0306                	slli	t1,t1,0x1
     672:	0900                	addi	s0,sp,144
     674:	0000                	unimp
     676:	0501                	addi	a0,a0,0
}
     678:	0605                	addi	a2,a2,1
     67a:	02090703          	lb	a4,32(s2)
     67e:	0100                	addi	s0,sp,128
uint8_t eclic_set_irq_priority(uint32_t source, uint8_t priority) {
     680:	0305                	addi	t1,t1,1
     682:	00097303          	0x97303
     686:	0100                	addi	s0,sp,128
     688:	0a05                	addi	s4,s4,1
	uint8_t nlbits = eclic_get_nlbits();
     68a:	0306                	slli	t1,t1,0x1
	if (nlbits >= ECLICINTCTLBITS) {
     68c:	0900                	addi	s0,sp,144
		return 0;
     68e:	0000                	unimp
	if (nlbits >= ECLICINTCTLBITS) {
     690:	0501                	addi	a0,a0,0
     692:	0605                	addi	a2,a2,1
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
     694:	02090e03          	lb	t3,32(s2)
     698:	0100                	addi	s0,sp,128
     69a:	0305                	addi	t1,t1,1
     69c:	00097803          	0x97803
     6a0:	0100                	addi	s0,sp,128
	priority = priority << (8 - ECLICINTCTLBITS);
     6a2:	0a05                	addi	s4,s4,1
	current_intctrl = current_intctrl >> (8-nlbits);
     6a4:	0306                	slli	t1,t1,0x1
     6a6:	0900                	addi	s0,sp,144
     6a8:	0000                	unimp
	priority = priority << (8 - ECLICINTCTLBITS);
     6aa:	0501                	addi	a0,a0,0
	current_intctrl = current_intctrl >> (8-nlbits);
     6ac:	0308                	addi	a0,sp,384
     6ae:	0908                	addi	a0,sp,144
	priority = priority << (8 - ECLICINTCTLBITS);
     6b0:	0002                	c.slli64	zero
     6b2:	0501                	addi	a0,a0,0
	current_intctrl = current_intctrl << (8-nlbits);
     6b4:	0301                	addi	t1,t1,0
     6b6:	00040903          	lb	s2,0(s0) # 30032a4 <CSR_MTVT2+0x3002ab8>
	eclic_set_intctrl(source, (current_intctrl | priority));
     6ba:	0601                	addi	a2,a2,0
     6bc:	02090303          	lb	t1,32(s2)
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4) = intctrl;
     6c0:	0100                	addi	s0,sp,128
}
     6c2:	0305                	addi	t1,t1,1
     6c4:	00090103          	lb	sp,0(s2)
     6c8:	0100                	addi	s0,sp,128
     6ca:	0a05                	addi	s4,s4,1
uint8_t eclic_get_irq_priority(uint32_t source) {
     6cc:	0306                	slli	t1,t1,0x1
     6ce:	0900                	addi	s0,sp,144
     6d0:	0000                	unimp
     6d2:	0501                	addi	a0,a0,0
	uint8_t nlbits = eclic_get_nlbits();
     6d4:	0301                	addi	t1,t1,0
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
     6d6:	0901                	addi	s2,s2,0
     6d8:	000a                	c.slli	zero,0x2
     6da:	0601                	addi	a2,a2,0
     6dc:	04090303          	lb	t1,64(s2)
     6e0:	0100                	addi	s0,sp,128
     6e2:	0305                	addi	t1,t1,1
	intctrl = intctrl << nlbits;
     6e4:	00090103          	lb	sp,0(s2)
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
     6e8:	0100                	addi	s0,sp,128
     6ea:	0505                	addi	a0,a0,1
	intctrl = intctrl << nlbits;
     6ec:	00090103          	lb	sp,0(s2)
     6f0:	0100                	addi	s0,sp,128
     6f2:	1305                	addi	t1,t1,-31
     6f4:	00090003          	lb	zero,0(s2)
}
     6f8:	0100                	addi	s0,sp,128
	intctrl = intctrl << nlbits;
     6fa:	00090003          	lb	zero,0(s2)
	uint8_t priority = intctrl >> (nlbits+(8 - ECLICINTCTLBITS));
     6fe:	0100                	addi	s0,sp,128
     700:	04090003          	lb	zero,64(s2)
     704:	0100                	addi	s0,sp,128
     706:	0505                	addi	a0,a0,1
     708:	00090103          	lb	sp,0(s2)
}
     70c:	0100                	addi	s0,sp,128
     70e:	1305                	addi	t1,t1,-31
     710:	00090003          	lb	zero,0(s2)
  uint32_t mtvec_value = read_csr(mtvec);
     714:	0100                	addi	s0,sp,128
  mtvec_value = mtvec_value & 0xFFFFFFC0;
     716:	00090003          	lb	zero,0(s2)
  mtvec_value = mtvec_value | 0x00000003;
     71a:	0100                	addi	s0,sp,128
     71c:	04090003          	lb	zero,64(s2)
  write_csr(mtvec,mtvec_value);
     720:	0100                	addi	s0,sp,128
}
     722:	0505                	addi	a0,a0,1
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4);
     724:	00090103          	lb	sp,0(s2)
     728:	0100                	addi	s0,sp,128
     72a:	0f05                	addi	t5,t5,1
     72c:	00090003          	lb	zero,0(s2)
     730:	0100                	addi	s0,sp,128
  uint8_t new_intattr = (old_intattr | 0x1); 
     732:	00090003          	lb	zero,0(s2)
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4) = intattr;
     736:	0100                	addi	s0,sp,128
     738:	04090003          	lb	zero,64(s2)
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4);
     73c:	0100                	addi	s0,sp,128
     73e:	0805                	addi	a6,a6,1
     740:	0306                	slli	t1,t1,0x1
     742:	0900                	addi	s0,sp,144
     744:	0000                	unimp
     746:	0501                	addi	a0,a0,0
     748:	0301                	addi	t1,t1,0
  uint8_t new_intattr = (old_intattr & (~0x1));
     74a:	00040903          	lb	s2,0(s0)
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4) = intattr;
     74e:	0601                	addi	a2,a2,0
     750:	02090303          	lb	t1,32(s2)
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4);
     754:	0100                	addi	s0,sp,128
     756:	0305                	addi	t1,t1,1
     758:	00090103          	lb	sp,0(s2)
     75c:	0100                	addi	s0,sp,128
     75e:	0505                	addi	a0,a0,1
     760:	00090103          	lb	sp,0(s2)
  uint8_t new_intattr = (old_intattr & (~0x2));
     764:	0100                	addi	s0,sp,128
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4) = intattr;
     766:	1305                	addi	t1,t1,-31
     768:	00090003          	lb	zero,0(s2)
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4);
     76c:	0100                	addi	s0,sp,128
     76e:	00090003          	lb	zero,0(s2)
     772:	0100                	addi	s0,sp,128
     774:	04090003          	lb	zero,64(s2)
     778:	0100                	addi	s0,sp,128
  new_intattr = (old_intattr & (~0x4));
     77a:	0505                	addi	a0,a0,1
     77c:	00090103          	lb	sp,0(s2)
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4) = intattr;
     780:	0100                	addi	s0,sp,128
}
     782:	1305                	addi	t1,t1,-31
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4);
     784:	00090003          	lb	zero,0(s2)
     788:	0100                	addi	s0,sp,128
     78a:	00090003          	lb	zero,0(s2)
     78e:	0100                	addi	s0,sp,128
     790:	04090003          	lb	zero,64(s2)
  new_intattr = (old_intattr | 0x4);
     794:	0100                	addi	s0,sp,128
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4) = intattr;
     796:	0505                	addi	a0,a0,1
     798:	00090103          	lb	sp,0(s2)
     79c:	0100                	addi	s0,sp,128
     79e:	0f05                	addi	t5,t5,1
     7a0:	00090003          	lb	zero,0(s2)
     7a4:	0100                	addi	s0,sp,128
     7a6:	00090003          	lb	zero,0(s2)
     7aa:	0100                	addi	s0,sp,128
     7ac:	04090003          	lb	zero,64(s2)
     7b0:	0100                	addi	s0,sp,128
     7b2:	0805                	addi	a6,a6,1
     7b4:	0306                	slli	t1,t1,0x1
     7b6:	0900                	addi	s0,sp,144
     7b8:	0000                	unimp
     7ba:	0501                	addi	a0,a0,0
     7bc:	0301                	addi	t1,t1,0
     7be:	00040903          	lb	s2,0(s0)
     7c2:	0601                	addi	a2,a2,0
     7c4:	02090303          	lb	t1,32(s2)
     7c8:	0100                	addi	s0,sp,128
     7ca:	0305                	addi	t1,t1,1
     7cc:	00090103          	lb	sp,0(s2)
     7d0:	0100                	addi	s0,sp,128
     7d2:	00090103          	lb	sp,0(s2)
     7d6:	0100                	addi	s0,sp,128
     7d8:	00096603          	0x96603
     7dc:	0100                	addi	s0,sp,128
     7de:	0a05                	addi	s4,s4,1
     7e0:	0306                	slli	t1,t1,0x1
     7e2:	0900                	addi	s0,sp,144
     7e4:	0000                	unimp
     7e6:	0301                	addi	t1,t1,0
     7e8:	000a096b          	0xa096b
     7ec:	0301                	addi	t1,t1,0
     7ee:	0915                	addi	s2,s2,5
     7f0:	0004                	0x4
     7f2:	0501                	addi	a0,a0,0
     7f4:	1d030603          	lb	a2,464(t1)
     7f8:	0409                	addi	s0,s0,2
     7fa:	0100                	addi	s0,sp,128
     7fc:	00094e03          	lbu	t3,0(s2)
     800:	0100                	addi	s0,sp,128
     802:	0a05                	addi	s4,s4,1
     804:	0306                	slli	t1,t1,0x1
     806:	0900                	addi	s0,sp,144
     808:	0000                	unimp
     80a:	0501                	addi	a0,a0,0
     80c:	04020003          	lb	zero,64(tp) # ffff9040 <_stack_end+0xdfff1040>
     810:	0601                	addi	a2,a2,0
     812:	06093303          	0x6093303
     816:	0100                	addi	s0,sp,128
     818:	0505                	addi	a0,a0,1
     81a:	0200                	addi	s0,sp,256
     81c:	0104                	addi	s1,sp,128
     81e:	00090103          	lb	sp,0(s2)
     822:	0100                	addi	s0,sp,128
     824:	0305                	addi	t1,t1,1
     826:	0200                	addi	s0,sp,256
     828:	0104                	addi	s1,sp,128
     82a:	00094c03          	lbu	s8,0(s2)
     82e:	0100                	addi	s0,sp,128
     830:	0a05                	addi	s4,s4,1
     832:	0200                	addi	s0,sp,256
     834:	0104                	addi	s1,sp,128
     836:	0306                	slli	t1,t1,0x1
     838:	0900                	addi	s0,sp,144
     83a:	0000                	unimp
     83c:	0501                	addi	a0,a0,0
     83e:	04020003          	lb	zero,64(tp) # 40 <MSTATUS_MIE+0x38>
     842:	0301                	addi	t1,t1,0
     844:	0935                	addi	s2,s2,13
     846:	0002                	c.slli64	zero
     848:	0601                	addi	a2,a2,0
     84a:	04090203          	lb	tp,64(s2)
     84e:	0100                	addi	s0,sp,128
     850:	1b05                	addi	s6,s6,-31
     852:	00090003          	lb	zero,0(s2)
     856:	0100                	addi	s0,sp,128
     858:	00090003          	lb	zero,0(s2)
     85c:	0100                	addi	s0,sp,128
     85e:	04090003          	lb	zero,64(s2)
     862:	0100                	addi	s0,sp,128
     864:	0a05                	addi	s4,s4,1
     866:	0306                	slli	t1,t1,0x1
     868:	0949                	addi	s2,s2,18
     86a:	0000                	unimp
     86c:	0501                	addi	a0,a0,0
     86e:	04020003          	lb	zero,64(tp) # 40 <MSTATUS_MIE+0x38>
     872:	0601                	addi	a2,a2,0
     874:	04093903          	0x4093903
     878:	0100                	addi	s0,sp,128
     87a:	0505                	addi	a0,a0,1
     87c:	0200                	addi	s0,sp,256
     87e:	0104                	addi	s1,sp,128
     880:	00090103          	lb	sp,0(s2)
     884:	0100                	addi	s0,sp,128
     886:	0305                	addi	t1,t1,1
     888:	0200                	addi	s0,sp,256
     88a:	0104                	addi	s1,sp,128
     88c:	00094603          	lbu	a2,0(s2)
     890:	0100                	addi	s0,sp,128
     892:	0a05                	addi	s4,s4,1
     894:	0200                	addi	s0,sp,256
     896:	0104                	addi	s1,sp,128
     898:	0306                	slli	t1,t1,0x1
     89a:	0900                	addi	s0,sp,144
     89c:	0000                	unimp
     89e:	0501                	addi	a0,a0,0
     8a0:	0011                	c.nop	4
     8a2:	0402                	c.slli64	s0
     8a4:	0301                	addi	t1,t1,0
     8a6:	093a                	slli	s2,s2,0xe
     8a8:	0004                	0x4
     8aa:	0501                	addi	a0,a0,0
     8ac:	04020003          	lb	zero,64(tp) # 40 <MSTATUS_MIE+0x38>
     8b0:	0301                	addi	t1,t1,0
     8b2:	0901                	addi	s2,s2,0
     8b4:	0004                	0x4
     8b6:	0601                	addi	a2,a2,0
     8b8:	04090203          	lb	tp,64(s2)
     8bc:	0100                	addi	s0,sp,128
     8be:	1b05                	addi	s6,s6,-31
     8c0:	00090003          	lb	zero,0(s2)
     8c4:	0100                	addi	s0,sp,128
     8c6:	00090003          	lb	zero,0(s2)
     8ca:	0100                	addi	s0,sp,128
     8cc:	04090003          	lb	zero,64(s2)
     8d0:	0100                	addi	s0,sp,128
     8d2:	0c05                	addi	s8,s8,1
     8d4:	0306                	slli	t1,t1,0x1
     8d6:	0900                	addi	s0,sp,144
     8d8:	0000                	unimp
     8da:	0501                	addi	a0,a0,0
     8dc:	02030603          	lb	a2,32(t1)
     8e0:	0409                	addi	s0,s0,2
     8e2:	0100                	addi	s0,sp,128
     8e4:	1b05                	addi	s6,s6,-31
     8e6:	0306                	slli	t1,t1,0x1
     8e8:	0901                	addi	s2,s2,0
     8ea:	0000                	unimp
     8ec:	0501                	addi	a0,a0,0
     8ee:	0318                	addi	a4,sp,384
     8f0:	097f                	0x97f
     8f2:	0004                	0x4
     8f4:	0501                	addi	a0,a0,0
     8f6:	032a                	slli	t1,t1,0xa
     8f8:	0901                	addi	s2,s2,0
     8fa:	0004                	0x4
     8fc:	0501                	addi	a0,a0,0
     8fe:	0338                	addi	a4,sp,392
     900:	0900                	addi	s0,sp,144
     902:	0004                	0x4
     904:	0501                	addi	a0,a0,0
     906:	097f0327          	0x97f0327
     90a:	0004                	0x4
     90c:	0501                	addi	a0,a0,0
     90e:	0301                	addi	t1,t1,0
     910:	0902                	c.slli64	s2
     912:	0004                	0x4
     914:	0601                	addi	a2,a2,0
     916:	04090303          	lb	t1,64(s2)
     91a:	0100                	addi	s0,sp,128
     91c:	0305                	addi	t1,t1,1
     91e:	00090103          	lb	sp,0(s2)
     922:	0100                	addi	s0,sp,128
     924:	00090303          	lb	t1,0(s2)
     928:	0100                	addi	s0,sp,128
     92a:	0105                	addi	sp,sp,1
     92c:	0306                	slli	t1,t1,0x1
     92e:	097c                	addi	a5,sp,156
     930:	0000                	unimp
     932:	0501                	addi	a0,a0,0
     934:	09040303          	lb	t1,144(s0)
     938:	0002                	c.slli64	zero
     93a:	0501                	addi	a0,a0,0
     93c:	0301                	addi	t1,t1,0
     93e:	097c                	addi	a5,sp,156
     940:	0002                	c.slli64	zero
     942:	0501                	addi	a0,a0,0
     944:	09040303          	lb	t1,144(s0)
     948:	0002                	c.slli64	zero
     94a:	0601                	addi	a2,a2,0
     94c:	02090203          	lb	tp,32(s2)
     950:	0100                	addi	s0,sp,128
     952:	0105                	addi	sp,sp,1
     954:	0306                	slli	t1,t1,0x1
     956:	00000903          	lb	s2,0(zero) # 0 <_vector_table>
     95a:	0501                	addi	a0,a0,0
     95c:	030e                	slli	t1,t1,0x3
     95e:	097d                	addi	s2,s2,31
     960:	0002                	c.slli64	zero
     962:	0501                	addi	a0,a0,0
     964:	0301                	addi	t1,t1,0
     966:	00040903          	lb	s2,0(s0)
     96a:	0501                	addi	a0,a0,0
     96c:	030e                	slli	t1,t1,0x3
     96e:	097d                	addi	s2,s2,31
     970:	0002                	c.slli64	zero
     972:	0501                	addi	a0,a0,0
     974:	0601                	addi	a2,a2,0
     976:	02090e03          	lb	t3,32(s2)
     97a:	0100                	addi	s0,sp,128
     97c:	0305                	addi	t1,t1,1
     97e:	00090203          	lb	tp,0(s2)
     982:	0100                	addi	s0,sp,128
     984:	00090303          	lb	t1,0(s2)
     988:	0100                	addi	s0,sp,128
     98a:	3905                	jal	5ba <eclic_get_irq_lvl+0xa>
     98c:	0306                	slli	t1,t1,0x1
     98e:	0900                	addi	s0,sp,144
     990:	0000                	unimp
     992:	0501                	addi	a0,a0,0
     994:	03030603          	lb	a2,48(t1)
     998:	0809                	addi	a6,a6,2
     99a:	0100                	addi	s0,sp,128
     99c:	3905                	jal	5cc <eclic_get_irq_lvl+0x1c>
     99e:	0306                	slli	t1,t1,0x1
     9a0:	0900                	addi	s0,sp,144
     9a2:	0000                	unimp
     9a4:	0501                	addi	a0,a0,0
     9a6:	03030603          	lb	a2,48(t1)
     9aa:	0409                	addi	s0,s0,2
     9ac:	0100                	addi	s0,sp,128
     9ae:	00090203          	lb	tp,0(s2)
     9b2:	0100                	addi	s0,sp,128
     9b4:	00090103          	lb	sp,0(s2)
     9b8:	0100                	addi	s0,sp,128
     9ba:	2905                	jal	dea <CSR_MTVT2+0x5fe>
     9bc:	0306                	slli	t1,t1,0x1
     9be:	0900                	addi	s0,sp,144
     9c0:	0000                	unimp
     9c2:	0501                	addi	a0,a0,0
     9c4:	0900030f          	0x900030f
     9c8:	0002                	c.slli64	zero
     9ca:	0501                	addi	a0,a0,0
     9cc:	02030603          	lb	a2,32(t1)
     9d0:	0609                	addi	a2,a2,2
     9d2:	0100                	addi	s0,sp,128
     9d4:	0200                	addi	s0,sp,256
     9d6:	0104                	addi	s1,sp,128
     9d8:	0306                	slli	t1,t1,0x1
     9da:	0900                	addi	s0,sp,144
     9dc:	0000                	unimp
     9de:	0501                	addi	a0,a0,0
     9e0:	0301                	addi	t1,t1,0
     9e2:	00040903          	lb	s2,0(s0)
     9e6:	0501                	addi	a0,a0,0
     9e8:	0005                	c.nop	1
     9ea:	0402                	c.slli64	s0
     9ec:	7e030603          	lb	a2,2016(t1)
     9f0:	0209                	addi	tp,tp,2
     9f2:	0100                	addi	s0,sp,128
     9f4:	0a05                	addi	s4,s4,1
     9f6:	0200                	addi	s0,sp,256
     9f8:	0304                	addi	s1,sp,384
     9fa:	0306                	slli	t1,t1,0x1
     9fc:	0900                	addi	s0,sp,144
     9fe:	0000                	unimp
     a00:	0501                	addi	a0,a0,0
     a02:	0024                	addi	s1,sp,8
     a04:	0402                	c.slli64	s0
     a06:	097f0303          	lb	t1,151(t5)
     a0a:	0004                	0x4
     a0c:	0501                	addi	a0,a0,0
     a0e:	0703062f          	0x703062f
     a12:	0409                	addi	s0,s0,2
     a14:	0100                	addi	s0,sp,128
     a16:	0505                	addi	a0,a0,1
     a18:	00090103          	lb	sp,0(s2)
     a1c:	0100                	addi	s0,sp,128
     a1e:	3d05                	jal	84e <CSR_MTVT2+0x62>
     a20:	0306                	slli	t1,t1,0x1
     a22:	0900                	addi	s0,sp,144
     a24:	0000                	unimp
     a26:	0501                	addi	a0,a0,0
     a28:	0344                	addi	s1,sp,388
     a2a:	0900                	addi	s0,sp,144
     a2c:	0006                	c.slli	zero,0x1
     a2e:	0501                	addi	a0,a0,0
     a30:	033d                	addi	t1,t1,15
     a32:	0900                	addi	s0,sp,144
     a34:	0002                	c.slli64	zero
     a36:	0501                	addi	a0,a0,0
     a38:	0348                	addi	a0,sp,388
     a3a:	0900                	addi	s0,sp,144
     a3c:	0002                	c.slli64	zero
     a3e:	0501                	addi	a0,a0,0
     a40:	0301                	addi	t1,t1,0
     a42:	0901                	addi	s2,s2,0
     a44:	0006                	c.slli	zero,0x1
     a46:	0501                	addi	a0,a0,0
     a48:	0203062f          	0x203062f
     a4c:	0209                	addi	tp,tp,2
     a4e:	0100                	addi	s0,sp,128
     a50:	0505                	addi	a0,a0,1
     a52:	00090103          	lb	sp,0(s2)
     a56:	0100                	addi	s0,sp,128
     a58:	3d05                	jal	888 <CSR_MTVT2+0x9c>
     a5a:	0306                	slli	t1,t1,0x1
     a5c:	0900                	addi	s0,sp,144
     a5e:	0000                	unimp
     a60:	0501                	addi	a0,a0,0
     a62:	0344                	addi	s1,sp,388
     a64:	0900                	addi	s0,sp,144
     a66:	0004                	0x4
     a68:	0501                	addi	a0,a0,0
     a6a:	033d                	addi	t1,t1,15
     a6c:	0900                	addi	s0,sp,144
     a6e:	0002                	c.slli64	zero
     a70:	0501                	addi	a0,a0,0
     a72:	0348                	addi	a0,sp,388
     a74:	0900                	addi	s0,sp,144
     a76:	0004                	0x4
     a78:	0501                	addi	a0,a0,0
     a7a:	0301                	addi	t1,t1,0
     a7c:	0901                	addi	s2,s2,0
     a7e:	0004                	0x4
     a80:	0501                	addi	a0,a0,0
     a82:	0628                	addi	a0,sp,776
     a84:	02090203          	lb	tp,32(s2)
     a88:	0100                	addi	s0,sp,128
     a8a:	0505                	addi	a0,a0,1
     a8c:	00090103          	lb	sp,0(s2)
     a90:	0100                	addi	s0,sp,128
     a92:	3d05                	jal	8c2 <CSR_MTVT2+0xd6>
     a94:	0306                	slli	t1,t1,0x1
     a96:	0900                	addi	s0,sp,144
     a98:	0000                	unimp
     a9a:	0501                	addi	a0,a0,0
     a9c:	0348                	addi	a0,sp,388
     a9e:	0900                	addi	s0,sp,144
     aa0:	000c                	0xc
     aa2:	0501                	addi	a0,a0,0
     aa4:	0301                	addi	t1,t1,0
     aa6:	0901                	addi	s2,s2,0
     aa8:	0006                	c.slli	zero,0x1
     aaa:	0501                	addi	a0,a0,0
     aac:	062a                	slli	a2,a2,0xa
     aae:	02090203          	lb	tp,32(s2)
     ab2:	0100                	addi	s0,sp,128
     ab4:	0505                	addi	a0,a0,1
     ab6:	00090103          	lb	sp,0(s2)
     aba:	0100                	addi	s0,sp,128
     abc:	3d05                	jal	8ec <CSR_MTVT2+0x100>
     abe:	0306                	slli	t1,t1,0x1
     ac0:	0900                	addi	s0,sp,144
     ac2:	0000                	unimp
     ac4:	0501                	addi	a0,a0,0
     ac6:	0348                	addi	a0,sp,388
     ac8:	0900                	addi	s0,sp,144
     aca:	000c                	0xc
     acc:	0501                	addi	a0,a0,0
     ace:	0301                	addi	t1,t1,0
     ad0:	0901                	addi	s2,s2,0
     ad2:	0004                	0x4
     ad4:	0501                	addi	a0,a0,0
     ad6:	063a                	slli	a2,a2,0xe
     ad8:	02090203          	lb	tp,32(s2)
     adc:	0100                	addi	s0,sp,128
     ade:	0305                	addi	t1,t1,1
     ae0:	00090103          	lb	sp,0(s2)
     ae4:	0100                	addi	s0,sp,128
     ae6:	3d05                	jal	916 <CSR_MTVT2+0x12a>
     ae8:	0306                	slli	t1,t1,0x1
     aea:	0900                	addi	s0,sp,144
     aec:	0000                	unimp
     aee:	0501                	addi	a0,a0,0
     af0:	0344                	addi	s1,sp,388
     af2:	0900                	addi	s0,sp,144
     af4:	0004                	0x4
     af6:	0501                	addi	a0,a0,0
     af8:	033d                	addi	t1,t1,15
     afa:	0900                	addi	s0,sp,144
     afc:	0002                	c.slli64	zero
     afe:	0501                	addi	a0,a0,0
     b00:	0348                	addi	a0,sp,388
     b02:	0900                	addi	s0,sp,144
     b04:	0004                	0x4
     b06:	0501                	addi	a0,a0,0
     b08:	0301                	addi	t1,t1,0
     b0a:	0901                	addi	s2,s2,0
     b0c:	0004                	0x4
     b0e:	0501                	addi	a0,a0,0
     b10:	062d                	addi	a2,a2,11
     b12:	02090203          	lb	tp,32(s2)
     b16:	0100                	addi	s0,sp,128
     b18:	0305                	addi	t1,t1,1
     b1a:	00090103          	lb	sp,0(s2)
     b1e:	0100                	addi	s0,sp,128
     b20:	4405                	li	s0,1
     b22:	0306                	slli	t1,t1,0x1
     b24:	0900                	addi	s0,sp,144
     b26:	0000                	unimp
     b28:	0501                	addi	a0,a0,0
     b2a:	0900034b          	fnmsub.s	ft6,ft0,fa6,ft1,rne
     b2e:	0006                	c.slli	zero,0x1
     b30:	0501                	addi	a0,a0,0
     b32:	0344                	addi	s1,sp,388
     b34:	0900                	addi	s0,sp,144
     b36:	0002                	c.slli64	zero
     b38:	0501                	addi	a0,a0,0
     b3a:	030a                	slli	t1,t1,0x2
     b3c:	0900                	addi	s0,sp,144
     b3e:	0002                	c.slli64	zero
     b40:	0501                	addi	a0,a0,0
     b42:	0301                	addi	t1,t1,0
     b44:	0901                	addi	s2,s2,0
     b46:	0004                	0x4
     b48:	0501                	addi	a0,a0,0
     b4a:	063a                	slli	a2,a2,0xe
     b4c:	02090203          	lb	tp,32(s2)
     b50:	0100                	addi	s0,sp,128
     b52:	0305                	addi	t1,t1,1
     b54:	00090103          	lb	sp,0(s2)
     b58:	0100                	addi	s0,sp,128
     b5a:	3d05                	jal	98a <CSR_MTVT2+0x19e>
     b5c:	0306                	slli	t1,t1,0x1
     b5e:	0900                	addi	s0,sp,144
     b60:	0000                	unimp
     b62:	0501                	addi	a0,a0,0
     b64:	0344                	addi	s1,sp,388
     b66:	0900                	addi	s0,sp,144
     b68:	0004                	0x4
     b6a:	0501                	addi	a0,a0,0
     b6c:	033d                	addi	t1,t1,15
     b6e:	0900                	addi	s0,sp,144
     b70:	0002                	c.slli64	zero
     b72:	0501                	addi	a0,a0,0
     b74:	0348                	addi	a0,sp,388
     b76:	0900                	addi	s0,sp,144
     b78:	0004                	0x4
     b7a:	0501                	addi	a0,a0,0
     b7c:	0301                	addi	t1,t1,0
     b7e:	0901                	addi	s2,s2,0
     b80:	0004                	0x4
     b82:	0501                	addi	a0,a0,0
     b84:	062d                	addi	a2,a2,11
     b86:	02090203          	lb	tp,32(s2)
     b8a:	0100                	addi	s0,sp,128
     b8c:	0305                	addi	t1,t1,1
     b8e:	00090103          	lb	sp,0(s2)
     b92:	0100                	addi	s0,sp,128
     b94:	4405                	li	s0,1
     b96:	0306                	slli	t1,t1,0x1
     b98:	0900                	addi	s0,sp,144
     b9a:	0000                	unimp
     b9c:	0501                	addi	a0,a0,0
     b9e:	0900034b          	fnmsub.s	ft6,ft0,fa6,ft1,rne
     ba2:	0006                	c.slli	zero,0x1
     ba4:	0501                	addi	a0,a0,0
     ba6:	0344                	addi	s1,sp,388
     ba8:	0900                	addi	s0,sp,144
     baa:	0002                	c.slli64	zero
     bac:	0501                	addi	a0,a0,0
     bae:	030a                	slli	t1,t1,0x2
     bb0:	0900                	addi	s0,sp,144
     bb2:	0002                	c.slli64	zero
     bb4:	0501                	addi	a0,a0,0
     bb6:	0301                	addi	t1,t1,0
     bb8:	0901                	addi	s2,s2,0
     bba:	0004                	0x4
     bbc:	0501                	addi	a0,a0,0
     bbe:	0629                	addi	a2,a2,10
     bc0:	02090203          	lb	tp,32(s2)
     bc4:	0100                	addi	s0,sp,128
     bc6:	0305                	addi	t1,t1,1
     bc8:	00090103          	lb	sp,0(s2)
     bcc:	0100                	addi	s0,sp,128
     bce:	3a05                	jal	4fe <eclic_get_intattr>
     bd0:	0306                	slli	t1,t1,0x1
     bd2:	0900                	addi	s0,sp,144
     bd4:	0000                	unimp
     bd6:	0501                	addi	a0,a0,0
     bd8:	0301                	addi	t1,t1,0
     bda:	0901                	addi	s2,s2,0
     bdc:	0008                	0x8
     bde:	0501                	addi	a0,a0,0
     be0:	061e                	slli	a2,a2,0x7
     be2:	02090203          	lb	tp,32(s2)
     be6:	0100                	addi	s0,sp,128
     be8:	0305                	addi	t1,t1,1
     bea:	00090103          	lb	sp,0(s2)
     bee:	0100                	addi	s0,sp,128
     bf0:	0a05                	addi	s4,s4,1
     bf2:	0306                	slli	t1,t1,0x1
     bf4:	0900                	addi	s0,sp,144
     bf6:	0000                	unimp
     bf8:	0501                	addi	a0,a0,0
     bfa:	0301                	addi	t1,t1,0
     bfc:	0901                	addi	s2,s2,0
     bfe:	0008                	0x8
     c00:	0501                	addi	a0,a0,0
     c02:	0621                	addi	a2,a2,8
     c04:	02090203          	lb	tp,32(s2)
     c08:	0100                	addi	s0,sp,128
     c0a:	0305                	addi	t1,t1,1
     c0c:	00090103          	lb	sp,0(s2)
     c10:	0100                	addi	s0,sp,128
     c12:	3a05                	jal	542 <eclic_set_nlbits+0xc>
     c14:	0306                	slli	t1,t1,0x1
     c16:	0900                	addi	s0,sp,144
     c18:	0000                	unimp
     c1a:	0501                	addi	a0,a0,0
     c1c:	0301                	addi	t1,t1,0
     c1e:	0901                	addi	s2,s2,0
     c20:	0008                	0x8
     c22:	0501                	addi	a0,a0,0
     c24:	061a                	slli	a2,a2,0x6
     c26:	02090203          	lb	tp,32(s2)
     c2a:	0100                	addi	s0,sp,128
     c2c:	0305                	addi	t1,t1,1
     c2e:	00090103          	lb	sp,0(s2)
     c32:	0100                	addi	s0,sp,128
     c34:	0a05                	addi	s4,s4,1
     c36:	0306                	slli	t1,t1,0x1
     c38:	0900                	addi	s0,sp,144
     c3a:	0000                	unimp
     c3c:	0501                	addi	a0,a0,0
     c3e:	0301                	addi	t1,t1,0
     c40:	0901                	addi	s2,s2,0
     c42:	0008                	0x8
     c44:	0501                	addi	a0,a0,0
     c46:	03030627          	0x3030627
     c4a:	0209                	addi	tp,tp,2
     c4c:	0100                	addi	s0,sp,128
     c4e:	0305                	addi	t1,t1,1
     c50:	00090203          	lb	tp,0(s2)
     c54:	0100                	addi	s0,sp,128
     c56:	00090303          	lb	t1,0(s2)
     c5a:	0100                	addi	s0,sp,128
     c5c:	00096f03          	0x96f03
     c60:	0100                	addi	s0,sp,128
     c62:	0a05                	addi	s4,s4,1
     c64:	0306                	slli	t1,t1,0x1
     c66:	0900                	addi	s0,sp,144
     c68:	0000                	unimp
     c6a:	0501                	addi	a0,a0,0
     c6c:	12030603          	lb	a2,288(t1)
     c70:	0809                	addi	a6,a6,2
     c72:	0100                	addi	s0,sp,128
     c74:	0b05                	addi	s6,s6,1
     c76:	0306                	slli	t1,t1,0x1
     c78:	097c                	addi	a5,sp,156
     c7a:	0000                	unimp
     c7c:	0501                	addi	a0,a0,0
     c7e:	0904035b          	0x904035b
     c82:	0002                	c.slli64	zero
     c84:	0501                	addi	a0,a0,0
     c86:	0326                	slli	t1,t1,0x9
     c88:	0900                	addi	s0,sp,144
     c8a:	0002                	c.slli64	zero
     c8c:	0501                	addi	a0,a0,0
     c8e:	0900030b          	0x900030b
     c92:	0004                	0x4
     c94:	0501                	addi	a0,a0,0
     c96:	02030603          	lb	a2,32(t1)
     c9a:	0209                	addi	tp,tp,2
     c9c:	0100                	addi	s0,sp,128
     c9e:	00096803          	0x96803
     ca2:	0100                	addi	s0,sp,128
     ca4:	3a05                	jal	5d4 <eclic_get_irq_lvl+0x24>
     ca6:	0306                	slli	t1,t1,0x1
     ca8:	0900                	addi	s0,sp,144
     caa:	0000                	unimp
     cac:	0501                	addi	a0,a0,0
     cae:	0301                	addi	t1,t1,0
     cb0:	0919                	addi	s2,s2,6
     cb2:	0004                	0x4
     cb4:	0501                	addi	a0,a0,0
     cb6:	0620                	addi	s0,sp,776
     cb8:	02090303          	lb	t1,32(s2)
     cbc:	0100                	addi	s0,sp,128
     cbe:	0305                	addi	t1,t1,1
     cc0:	00090203          	lb	tp,0(s2)
     cc4:	0100                	addi	s0,sp,128
     cc6:	00096603          	0x96603
     cca:	0100                	addi	s0,sp,128
     ccc:	0a05                	addi	s4,s4,1
     cce:	0306                	slli	t1,t1,0x1
     cd0:	0900                	addi	s0,sp,144
     cd2:	0000                	unimp
     cd4:	0501                	addi	a0,a0,0
     cd6:	1b030603          	lb	a2,432(t1)
     cda:	0809                	addi	a6,a6,2
     cdc:	0100                	addi	s0,sp,128
     cde:	00090103          	lb	sp,0(s2)
     ce2:	0100                	addi	s0,sp,128
     ce4:	2d05                	jal	1314 <CSR_MTVT2+0xb28>
     ce6:	0306                	slli	t1,t1,0x1
     ce8:	097f                	0x97f
     cea:	0000                	unimp
     cec:	0501                	addi	a0,a0,0
     cee:	0301                	addi	t1,t1,0
     cf0:	0902                	c.slli64	s2
     cf2:	0002                	c.slli64	zero
     cf4:	0501                	addi	a0,a0,0
     cf6:	0636                	slli	a2,a2,0xd
     cf8:	04090303          	lb	t1,64(s2)
     cfc:	0100                	addi	s0,sp,128
     cfe:	0305                	addi	t1,t1,1
     d00:	00090203          	lb	tp,0(s2)
     d04:	0100                	addi	s0,sp,128
     d06:	3605                	jal	826 <CSR_MTVT2+0x3a>
     d08:	0306                	slli	t1,t1,0x1
     d0a:	097e                	slli	s2,s2,0x1f
     d0c:	0000                	unimp
     d0e:	0301                	addi	t1,t1,0
     d10:	0900                	addi	s0,sp,144
     d12:	0008                	0x8
     d14:	0501                	addi	a0,a0,0
     d16:	0314                	addi	a3,sp,384
     d18:	0902                	c.slli64	s2
     d1a:	0002                	c.slli64	zero
     d1c:	0501                	addi	a0,a0,0
     d1e:	01030603          	lb	a2,16(t1)
     d22:	0209                	addi	tp,tp,2
     d24:	0100                	addi	s0,sp,128
     d26:	00090503          	lb	a0,0(s2)
     d2a:	0100                	addi	s0,sp,128
     d2c:	1205                	addi	tp,tp,-31
     d2e:	0306                	slli	t1,t1,0x1
     d30:	0900                	addi	s0,sp,144
     d32:	0000                	unimp
     d34:	0501                	addi	a0,a0,0
     d36:	0344                	addi	s1,sp,388
     d38:	0948                	addi	a0,sp,148
     d3a:	0012                	c.slli	zero,0x4
     d3c:	0501                	addi	a0,a0,0
     d3e:	0312                	slli	t1,t1,0x4
     d40:	0938                	addi	a4,sp,152
     d42:	0004                	0x4
     d44:	0501                	addi	a0,a0,0
     d46:	02030603          	lb	a2,32(t1)
     d4a:	0209                	addi	tp,tp,2
     d4c:	0100                	addi	s0,sp,128
     d4e:	4b05                	li	s6,1
     d50:	0306                	slli	t1,t1,0x1
     d52:	0946                	slli	s2,s2,0x11
     d54:	0000                	unimp
     d56:	0501                	addi	a0,a0,0
     d58:	0344                	addi	s1,sp,388
     d5a:	0900                	addi	s0,sp,144
     d5c:	0002                	c.slli64	zero
     d5e:	0501                	addi	a0,a0,0
     d60:	030d                	addi	t1,t1,3
     d62:	0938                	addi	a4,sp,152
     d64:	0004                	0x4
     d66:	0301                	addi	t1,t1,0
     d68:	0902                	c.slli64	s2
     d6a:	0004                	0x4
     d6c:	0501                	addi	a0,a0,0
     d6e:	03030603          	lb	a2,48(t1)
     d72:	0409                	addi	s0,s0,2
     d74:	0100                	addi	s0,sp,128
     d76:	00094303          	lbu	t1,0(s2)
     d7a:	0100                	addi	s0,sp,128
     d7c:	0a05                	addi	s4,s4,1
     d7e:	0306                	slli	t1,t1,0x1
     d80:	0900                	addi	s0,sp,144
     d82:	0000                	unimp
     d84:	0501                	addi	a0,a0,0
     d86:	3f030603          	lb	a2,1008(t1)
     d8a:	0409                	addi	s0,s0,2
     d8c:	0100                	addi	s0,sp,128
     d8e:	00090203          	lb	tp,0(s2)
     d92:	0100                	addi	s0,sp,128
     d94:	00090203          	lb	tp,0(s2)
     d98:	0100                	addi	s0,sp,128
     d9a:	2505                	jal	13ba <CSR_MTVT2+0xbce>
     d9c:	0306                	slli	t1,t1,0x1
     d9e:	097c                	addi	a5,sp,156
     da0:	0000                	unimp
     da2:	0301                	addi	t1,t1,0
     da4:	0902                	c.slli64	s2
     da6:	0004                	0x4
     da8:	0501                	addi	a0,a0,0
     daa:	09020303          	lb	t1,144(tp) # 90 <MSTATUS_MIE+0x88>
     dae:	0008                	0x8
     db0:	0601                	addi	a2,a2,0
     db2:	097fb903          	0x97fb903
     db6:	0006                	c.slli	zero,0x1
     db8:	0501                	addi	a0,a0,0
     dba:	0648                	addi	a0,sp,772
     dbc:	00090003          	lb	zero,0(s2)
     dc0:	0100                	addi	s0,sp,128
     dc2:	0105                	addi	sp,sp,1
     dc4:	0900c803          	lbu	a6,144(ra)
     dc8:	0004                	0x4
     dca:	0501                	addi	a0,a0,0
     dcc:	062c                	addi	a1,sp,776
     dce:	08090303          	lb	t1,128(s2)
     dd2:	0100                	addi	s0,sp,128
     dd4:	0305                	addi	t1,t1,1
     dd6:	00090203          	lb	tp,0(s2)
     dda:	0100                	addi	s0,sp,128
     ddc:	2c05                	jal	100c <CSR_MTVT2+0x820>
     dde:	0306                	slli	t1,t1,0x1
     de0:	097e                	slli	s2,s2,0x1f
     de2:	0000                	unimp
     de4:	0301                	addi	t1,t1,0
     de6:	0900                	addi	s0,sp,144
     de8:	0006                	c.slli	zero,0x1
     dea:	0501                	addi	a0,a0,0
     dec:	0314                	addi	a3,sp,384
     dee:	0902                	c.slli64	s2
     df0:	0002                	c.slli64	zero
     df2:	0501                	addi	a0,a0,0
     df4:	01030603          	lb	a2,16(t1)
     df8:	0209                	addi	tp,tp,2
     dfa:	0100                	addi	s0,sp,128
     dfc:	00090403          	lb	s0,0(s2)
     e00:	0100                	addi	s0,sp,128
     e02:	097fb203          	0x97fb203
     e06:	0000                	unimp
     e08:	0501                	addi	a0,a0,0
     e0a:	0644                	addi	s1,sp,772
     e0c:	00090003          	lb	zero,0(s2)
     e10:	0100                	addi	s0,sp,128
     e12:	4b05                	li	s6,1
     e14:	06090003          	lb	zero,96(s2)
     e18:	0100                	addi	s0,sp,128
     e1a:	4405                	li	s0,1
     e1c:	02090003          	lb	zero,32(s2)
     e20:	0100                	addi	s0,sp,128
     e22:	0a05                	addi	s4,s4,1
     e24:	02090003          	lb	zero,32(s2)
     e28:	0100                	addi	s0,sp,128
     e2a:	1a05                	addi	s4,s4,-31
     e2c:	0900d103          	lhu	sp,144(ra)
     e30:	0004                	0x4
     e32:	0501                	addi	a0,a0,0
     e34:	030a                	slli	t1,t1,0x2
     e36:	04097faf          	0x4097faf
     e3a:	0100                	addi	s0,sp,128
     e3c:	0305                	addi	t1,t1,1
     e3e:	0306                	slli	t1,t1,0x1
     e40:	00d1                	addi	ra,ra,20
     e42:	0409                	addi	s0,s0,2
     e44:	0100                	addi	s0,sp,128
     e46:	1a05                	addi	s4,s4,-31
     e48:	0306                	slli	t1,t1,0x1
     e4a:	0900                	addi	s0,sp,144
     e4c:	0000                	unimp
     e4e:	0501                	addi	a0,a0,0
     e50:	02030603          	lb	a2,32(t1)
     e54:	0c09                	addi	s8,s8,2
     e56:	0100                	addi	s0,sp,128
     e58:	00090203          	lb	tp,0(s2)
     e5c:	0100                	addi	s0,sp,128
     e5e:	0105                	addi	sp,sp,1
     e60:	0306                	slli	t1,t1,0x1
     e62:	0901                	addi	s2,s2,0
     e64:	0000                	unimp
     e66:	0501                	addi	a0,a0,0
     e68:	0315                	addi	t1,t1,5
     e6a:	0004097b          	0x4097b
     e6e:	0501                	addi	a0,a0,0
     e70:	0319                	addi	t1,t1,6
     e72:	0902                	c.slli64	s2
     e74:	0004                	0x4
     e76:	0501                	addi	a0,a0,0
     e78:	0301                	addi	t1,t1,0
     e7a:	00040903          	lb	s2,0(s0)
     e7e:	0501                	addi	a0,a0,0
     e80:	063e                	slli	a2,a2,0xf
     e82:	08090203          	lb	tp,128(s2)
     e86:	0100                	addi	s0,sp,128
     e88:	0305                	addi	t1,t1,1
     e8a:	00090203          	lb	tp,0(s2)
     e8e:	0100                	addi	s0,sp,128
     e90:	3e05                	jal	9c0 <CSR_MTVT2+0x1d4>
     e92:	0306                	slli	t1,t1,0x1
     e94:	097e                	slli	s2,s2,0x1f
     e96:	0000                	unimp
     e98:	0301                	addi	t1,t1,0
     e9a:	0900                	addi	s0,sp,144
     e9c:	0008                	0x8
     e9e:	0501                	addi	a0,a0,0
     ea0:	0314                	addi	a3,sp,384
     ea2:	0902                	c.slli64	s2
     ea4:	0004                	0x4
     ea6:	0501                	addi	a0,a0,0
     ea8:	01030603          	lb	a2,16(t1)
     eac:	0209                	addi	tp,tp,2
     eae:	0100                	addi	s0,sp,128
     eb0:	00090503          	lb	a0,0(s2)
     eb4:	0100                	addi	s0,sp,128
     eb6:	1e05                	addi	t3,t3,-31
     eb8:	0306                	slli	t1,t1,0x1
     eba:	0900                	addi	s0,sp,144
     ebc:	0000                	unimp
     ebe:	0501                	addi	a0,a0,0
     ec0:	0344                	addi	s1,sp,388
     ec2:	7fa0                	flw	fs0,120(a5)
     ec4:	0a09                	addi	s4,s4,2
     ec6:	0100                	addi	s0,sp,128
     ec8:	4b05                	li	s6,1
     eca:	04090003          	lb	zero,64(s2)
     ece:	0100                	addi	s0,sp,128
     ed0:	4405                	li	s0,1
     ed2:	02090003          	lb	zero,32(s2)
     ed6:	0100                	addi	s0,sp,128
     ed8:	0a05                	addi	s4,s4,1
     eda:	04090003          	lb	zero,64(s2)
     ede:	0100                	addi	s0,sp,128
     ee0:	1e05                	addi	t3,t3,-31
     ee2:	0900e003          	0x900e003
     ee6:	0004                	0x4
     ee8:	0501                	addi	a0,a0,0
     eea:	03030603          	lb	a2,48(t1)
     eee:	0409                	addi	s0,s0,2
     ef0:	0100                	addi	s0,sp,128
     ef2:	097f9d03          	lh	s10,151(t6)
     ef6:	0000                	unimp
     ef8:	0301                	addi	t1,t1,0
     efa:	00e5                	addi	ra,ra,25
     efc:	0009                	c.nop	2
     efe:	0100                	addi	s0,sp,128
     f00:	00090203          	lb	tp,0(s2)
     f04:	0100                	addi	s0,sp,128
     f06:	00090203          	lb	tp,0(s2)
     f0a:	0100                	addi	s0,sp,128
     f0c:	1e05                	addi	t3,t3,-31
     f0e:	0306                	slli	t1,t1,0x1
     f10:	00000977          	0x977
     f14:	0501                	addi	a0,a0,0
     f16:	0325                	addi	t1,t1,9
     f18:	0905                	addi	s2,s2,1
     f1a:	0002                	c.slli64	zero
     f1c:	0301                	addi	t1,t1,0
     f1e:	0902                	c.slli64	s2
     f20:	0004                	0x4
     f22:	0501                	addi	a0,a0,0
     f24:	031e                	slli	t1,t1,0x7
     f26:	0979                	addi	s2,s2,30
     f28:	0004                	0x4
     f2a:	0501                	addi	a0,a0,0
     f2c:	0319                	addi	t1,t1,6
     f2e:	0900                	addi	s0,sp,144
     f30:	0002                	c.slli64	zero
     f32:	0501                	addi	a0,a0,0
     f34:	0325                	addi	t1,t1,9
     f36:	00040907          	0x40907
     f3a:	0501                	addi	a0,a0,0
     f3c:	09020303          	lb	t1,144(tp) # 90 <MSTATUS_MIE+0x88>
     f40:	0004                	0x4
     f42:	0601                	addi	a2,a2,0
     f44:	097f9303          	lh	t1,151(t6)
     f48:	0006                	c.slli	zero,0x1
     f4a:	0501                	addi	a0,a0,0
     f4c:	0648                	addi	a0,sp,772
     f4e:	00090003          	lb	zero,0(s2)
     f52:	0100                	addi	s0,sp,128
     f54:	0105                	addi	sp,sp,1
     f56:	0900ee03          	0x900ee03
     f5a:	0004                	0x4
     f5c:	0501                	addi	a0,a0,0
     f5e:	0630                	addi	a2,sp,776
     f60:	0a090203          	lb	tp,160(s2)
     f64:	0100                	addi	s0,sp,128
     f66:	0305                	addi	t1,t1,1
     f68:	00090203          	lb	tp,0(s2)
     f6c:	0100                	addi	s0,sp,128
     f6e:	3005                	jal	78e <eclic_set_negedge_trig+0xa>
     f70:	0306                	slli	t1,t1,0x1
     f72:	097e                	slli	s2,s2,0x1f
     f74:	0000                	unimp
     f76:	0301                	addi	t1,t1,0
     f78:	0900                	addi	s0,sp,144
     f7a:	0006                	c.slli	zero,0x1
     f7c:	0501                	addi	a0,a0,0
     f7e:	0314                	addi	a3,sp,384
     f80:	0902                	c.slli64	s2
     f82:	0002                	c.slli64	zero
     f84:	0501                	addi	a0,a0,0
     f86:	01030603          	lb	a2,16(t1)
     f8a:	0209                	addi	tp,tp,2
     f8c:	0100                	addi	s0,sp,128
     f8e:	00090403          	lb	s0,0(s2)
     f92:	0100                	addi	s0,sp,128
     f94:	097f8d03          	lb	s10,151(t6)
     f98:	0000                	unimp
     f9a:	0501                	addi	a0,a0,0
     f9c:	0644                	addi	s1,sp,772
     f9e:	00090003          	lb	zero,0(s2)
     fa2:	0100                	addi	s0,sp,128
     fa4:	4b05                	li	s6,1
     fa6:	06090003          	lb	zero,96(s2)
     faa:	0100                	addi	s0,sp,128
     fac:	4405                	li	s0,1
     fae:	02090003          	lb	zero,32(s2)
     fb2:	0100                	addi	s0,sp,128
     fb4:	0a05                	addi	s4,s4,1
     fb6:	02090003          	lb	zero,32(s2)
     fba:	0100                	addi	s0,sp,128
     fbc:	1a05                	addi	s4,s4,-31
     fbe:	0900f603          	0x900f603
     fc2:	0004                	0x4
     fc4:	0501                	addi	a0,a0,0
     fc6:	030a                	slli	t1,t1,0x2
     fc8:	7f8a                	flw	ft11,160(sp)
     fca:	0409                	addi	s0,s0,2
     fcc:	0100                	addi	s0,sp,128
     fce:	0305                	addi	t1,t1,1
     fd0:	0306                	slli	t1,t1,0x1
     fd2:	00f6                	slli	ra,ra,0x1d
     fd4:	0409                	addi	s0,s0,2
     fd6:	0100                	addi	s0,sp,128
     fd8:	00090203          	lb	tp,0(s2)
     fdc:	0100                	addi	s0,sp,128
     fde:	00090203          	lb	tp,0(s2)
     fe2:	0100                	addi	s0,sp,128
     fe4:	1a05                	addi	s4,s4,-31
     fe6:	0306                	slli	t1,t1,0x1
     fe8:	097c                	addi	a5,sp,156
     fea:	0000                	unimp
     fec:	0501                	addi	a0,a0,0
     fee:	0301                	addi	t1,t1,0
     ff0:	0905                	addi	s2,s2,1
     ff2:	000a                	c.slli	zero,0x2
     ff4:	0501                	addi	a0,a0,0
     ff6:	031a                	slli	t1,t1,0x6
     ff8:	0004097b          	0x4097b
     ffc:	0501                	addi	a0,a0,0
     ffe:	0315                	addi	t1,t1,5
    1000:	0900                	addi	s0,sp,144
    1002:	0004                	0x4
    1004:	0501                	addi	a0,a0,0
    1006:	0301                	addi	t1,t1,0
    1008:	0905                	addi	s2,s2,1
    100a:	0004                	0x4
    100c:	0501                	addi	a0,a0,0
    100e:	03030643          	fmadd.d	fa2,ft6,fa6,ft0,rne
    1012:	0809                	addi	a6,a6,2
    1014:	0100                	addi	s0,sp,128
    1016:	0205                	addi	tp,tp,1
    1018:	00090203          	lb	tp,0(s2)
    101c:	0100                	addi	s0,sp,128
    101e:	4305                	li	t1,1
    1020:	0306                	slli	t1,t1,0x1
    1022:	097e                	slli	s2,s2,0x1f
    1024:	0000                	unimp
    1026:	0301                	addi	t1,t1,0
    1028:	0900                	addi	s0,sp,144
    102a:	0008                	0x8
    102c:	0501                	addi	a0,a0,0
    102e:	09020313          	addi	t1,tp,144 # 90 <MSTATUS_MIE+0x88>
    1032:	0002                	c.slli64	zero
    1034:	0501                	addi	a0,a0,0
    1036:	0602                	c.slli64	a2
    1038:	02090103          	lb	sp,32(s2)
    103c:	0100                	addi	s0,sp,128
    103e:	0505                	addi	a0,a0,1
    1040:	0306                	slli	t1,t1,0x1
    1042:	0900                	addi	s0,sp,144
    1044:	0000                	unimp
    1046:	0501                	addi	a0,a0,0
    1048:	030a                	slli	t1,t1,0x2
    104a:	0902                	c.slli64	s2
    104c:	0002                	c.slli64	zero
    104e:	0501                	addi	a0,a0,0
    1050:	0305                	addi	t1,t1,1
    1052:	097e                	slli	s2,s2,0x1f
    1054:	0002                	c.slli64	zero
    1056:	0501                	addi	a0,a0,0
    1058:	0602                	c.slli64	a2
    105a:	04090603          	lb	a2,64(s2)
    105e:	0100                	addi	s0,sp,128
    1060:	4405                	li	s0,1
    1062:	0306                	slli	t1,t1,0x1
    1064:	7ef9                	lui	t4,0xffffe
    1066:	0009                	c.nop	2
    1068:	0100                	addi	s0,sp,128
    106a:	4b05                	li	s6,1
    106c:	04090003          	lb	zero,64(s2)
    1070:	0100                	addi	s0,sp,128
    1072:	4405                	li	s0,1
    1074:	02090003          	lb	zero,32(s2)
    1078:	0100                	addi	s0,sp,128
    107a:	0a05                	addi	s4,s4,1
    107c:	04090003          	lb	zero,64(s2)
    1080:	0100                	addi	s0,sp,128
    1082:	0b05                	addi	s6,s6,1
    1084:	09018703          	lb	a4,144(gp)
    1088:	0004                	0x4
    108a:	0501                	addi	a0,a0,0
    108c:	0329                	addi	t1,t1,10
    108e:	0905                	addi	s2,s2,1
    1090:	0002                	c.slli64	zero
    1092:	0501                	addi	a0,a0,0
    1094:	097b030b          	0x97b030b
    1098:	0006                	c.slli	zero,0x1
    109a:	0501                	addi	a0,a0,0
    109c:	0324                	addi	s1,sp,392
    109e:	0905                	addi	s2,s2,1
    10a0:	0002                	c.slli64	zero
    10a2:	0501                	addi	a0,a0,0
    10a4:	097b030b          	0x97b030b
    10a8:	0004                	0x4
    10aa:	0501                	addi	a0,a0,0
    10ac:	0602                	c.slli64	a2
    10ae:	04090303          	lb	t1,64(s2)
    10b2:	0100                	addi	s0,sp,128
    10b4:	0305                	addi	t1,t1,1
    10b6:	097ef603          	0x97ef603
    10ba:	0000                	unimp
    10bc:	0501                	addi	a0,a0,0
    10be:	0302                	c.slli64	t1
    10c0:	018c                	addi	a1,sp,192
    10c2:	0009                	c.nop	2
    10c4:	0100                	addi	s0,sp,128
    10c6:	00090203          	lb	tp,0(s2)
    10ca:	0100                	addi	s0,sp,128
    10cc:	00090203          	lb	tp,0(s2)
    10d0:	0100                	addi	s0,sp,128
    10d2:	2405                	jal	12f2 <CSR_MTVT2+0xb06>
    10d4:	0306                	slli	t1,t1,0x1
    10d6:	097e                	slli	s2,s2,0x1f
    10d8:	0000                	unimp
    10da:	0501                	addi	a0,a0,0
    10dc:	0302                	c.slli64	t1
    10de:	0902                	c.slli64	s2
    10e0:	0004                	0x4
    10e2:	0501                	addi	a0,a0,0
    10e4:	ec030603          	lb	a2,-320(t1)
    10e8:	097e                	slli	s2,s2,0x1f
    10ea:	0006                	c.slli	zero,0x1
    10ec:	0501                	addi	a0,a0,0
    10ee:	0648                	addi	a0,sp,772
    10f0:	00090003          	lb	zero,0(s2)
    10f4:	0100                	addi	s0,sp,128
    10f6:	0205                	addi	tp,tp,1
    10f8:	0306                	slli	t1,t1,0x1
    10fa:	0196                	slli	gp,gp,0x5
    10fc:	0409                	addi	s0,s0,2
    10fe:	0100                	addi	s0,sp,128
    1100:	0105                	addi	sp,sp,1
    1102:	0306                	slli	t1,t1,0x1
    1104:	0901                	addi	s2,s2,0
    1106:	0000                	unimp
    1108:	0501                	addi	a0,a0,0
    110a:	0631                	addi	a2,a2,12
    110c:	0a090303          	lb	t1,160(s2)
    1110:	0100                	addi	s0,sp,128
    1112:	0205                	addi	tp,tp,1
    1114:	00090203          	lb	tp,0(s2)
    1118:	0100                	addi	s0,sp,128
    111a:	3105                	jal	d3a <CSR_MTVT2+0x54e>
    111c:	0306                	slli	t1,t1,0x1
    111e:	097e                	slli	s2,s2,0x1f
    1120:	0000                	unimp
    1122:	0301                	addi	t1,t1,0
    1124:	0900                	addi	s0,sp,144
    1126:	0006                	c.slli	zero,0x1
    1128:	0501                	addi	a0,a0,0
    112a:	09020313          	addi	t1,tp,144 # 90 <MSTATUS_MIE+0x88>
    112e:	0002                	c.slli64	zero
    1130:	0501                	addi	a0,a0,0
    1132:	0602                	c.slli64	a2
    1134:	02090103          	lb	sp,32(s2)
    1138:	0100                	addi	s0,sp,128
    113a:	00090403          	lb	s0,0(s2)
    113e:	0100                	addi	s0,sp,128
    1140:	0305                	addi	t1,t1,1
    1142:	097ee303          	0x97ee303
    1146:	0000                	unimp
    1148:	0501                	addi	a0,a0,0
    114a:	0644                	addi	s1,sp,772
    114c:	00090003          	lb	zero,0(s2)
    1150:	0100                	addi	s0,sp,128
    1152:	4b05                	li	s6,1
    1154:	06090003          	lb	zero,96(s2)
    1158:	0100                	addi	s0,sp,128
    115a:	4405                	li	s0,1
    115c:	02090003          	lb	zero,32(s2)
    1160:	0100                	addi	s0,sp,128
    1162:	0a05                	addi	s4,s4,1
    1164:	02090003          	lb	zero,32(s2)
    1168:	0100                	addi	s0,sp,128
    116a:	1405                	addi	s0,s0,-31
    116c:	0901a003          	lw	zero,144(gp)
    1170:	0004                	0x4
    1172:	0501                	addi	a0,a0,0
    1174:	030a                	slli	t1,t1,0x2
    1176:	7ee0                	flw	fs0,124(a3)
    1178:	0409                	addi	s0,s0,2
    117a:	0100                	addi	s0,sp,128
    117c:	0205                	addi	tp,tp,1
    117e:	0306                	slli	t1,t1,0x1
    1180:	01a0                	addi	s0,sp,200
    1182:	0409                	addi	s0,s0,2
    1184:	0100                	addi	s0,sp,128
    1186:	1405                	addi	s0,s0,-31
    1188:	0306                	slli	t1,t1,0x1
    118a:	0900                	addi	s0,sp,144
    118c:	0000                	unimp
    118e:	0501                	addi	a0,a0,0
    1190:	0301                	addi	t1,t1,0
    1192:	0905                	addi	s2,s2,1
    1194:	000a                	c.slli	zero,0x2
    1196:	0501                	addi	a0,a0,0
    1198:	0314                	addi	a3,sp,384
    119a:	0004097b          	0x4097b
    119e:	0501                	addi	a0,a0,0
    11a0:	0602                	c.slli64	a2
    11a2:	04090203          	lb	tp,64(s2)
    11a6:	0100                	addi	s0,sp,128
    11a8:	00090203          	lb	tp,0(s2)
    11ac:	0100                	addi	s0,sp,128
    11ae:	1d05                	addi	s10,s10,-31
    11b0:	0306                	slli	t1,t1,0x1
    11b2:	097e                	slli	s2,s2,0x1f
    11b4:	0000                	unimp
    11b6:	0501                	addi	a0,a0,0
    11b8:	09000327          	0x9000327
    11bc:	0004                	0x4
    11be:	0501                	addi	a0,a0,0
    11c0:	031d                	addi	t1,t1,7
    11c2:	0900                	addi	s0,sp,144
    11c4:	0004                	0x4
    11c6:	0501                	addi	a0,a0,0
    11c8:	0301                	addi	t1,t1,0
    11ca:	00040903          	lb	s2,0(s0)
    11ce:	0501                	addi	a0,a0,0
    11d0:	061a                	slli	a2,a2,0x6
    11d2:	08090203          	lb	tp,128(s2)
    11d6:	0100                	addi	s0,sp,128
    11d8:	0305                	addi	t1,t1,1
    11da:	00090103          	lb	sp,0(s2)
    11de:	0100                	addi	s0,sp,128
    11e0:	1a05                	addi	s4,s4,-31
    11e2:	00090003          	lb	zero,0(s2)
    11e6:	0100                	addi	s0,sp,128
    11e8:	00090003          	lb	zero,0(s2)
    11ec:	0100                	addi	s0,sp,128
    11ee:	04090003          	lb	zero,64(s2)
    11f2:	0100                	addi	s0,sp,128
    11f4:	0305                	addi	t1,t1,1
    11f6:	00090103          	lb	sp,0(s2)
    11fa:	0100                	addi	s0,sp,128
    11fc:	0f05                	addi	t5,t5,1
    11fe:	0306                	slli	t1,t1,0x1
    1200:	0900                	addi	s0,sp,144
    1202:	0000                	unimp
    1204:	0501                	addi	a0,a0,0
    1206:	01030603          	lb	a2,16(t1)
    120a:	0409                	addi	s0,s0,2
    120c:	0100                	addi	s0,sp,128
    120e:	00090103          	lb	sp,0(s2)
    1212:	0100                	addi	s0,sp,128
    1214:	00090003          	lb	zero,0(s2)
    1218:	0100                	addi	s0,sp,128
    121a:	0f05                	addi	t5,t5,1
    121c:	0306                	slli	t1,t1,0x1
    121e:	097f                	0x97f
    1220:	0000                	unimp
    1222:	0501                	addi	a0,a0,0
    1224:	09010303          	lb	t1,144(sp)
    1228:	0004                	0x4
    122a:	0501                	addi	a0,a0,0
    122c:	0301                	addi	t1,t1,0
    122e:	0901                	addi	s2,s2,0
    1230:	0004                	0x4
    1232:	0501                	addi	a0,a0,0
    1234:	03030627          	0x3030627
    1238:	0209                	addi	tp,tp,2
    123a:	0100                	addi	s0,sp,128
    123c:	0305                	addi	t1,t1,1
    123e:	00090203          	lb	tp,0(s2)
    1242:	0100                	addi	s0,sp,128
    1244:	097ed703          	lhu	a4,151(t4) # ffffe097 <_stack_end+0xdfff6097>
    1248:	0000                	unimp
    124a:	0501                	addi	a0,a0,0
    124c:	0644                	addi	s1,sp,772
    124e:	00090003          	lb	zero,0(s2)
    1252:	0100                	addi	s0,sp,128
    1254:	4b05                	li	s6,1
    1256:	06090003          	lb	zero,96(s2)
    125a:	0100                	addi	s0,sp,128
    125c:	4405                	li	s0,1
    125e:	02090003          	lb	zero,32(s2)
    1262:	0100                	addi	s0,sp,128
    1264:	0a05                	addi	s4,s4,1
    1266:	02090003          	lb	zero,32(s2)
    126a:	0100                	addi	s0,sp,128
    126c:	0305                	addi	t1,t1,1
    126e:	0306                	slli	t1,t1,0x1
    1270:	040901ab          	0x40901ab
    1274:	0100                	addi	s0,sp,128
    1276:	0b05                	addi	s6,s6,1
    1278:	0306                	slli	t1,t1,0x1
    127a:	0900                	addi	s0,sp,144
    127c:	0000                	unimp
    127e:	0501                	addi	a0,a0,0
    1280:	02030603          	lb	a2,32(t1)
    1284:	0409                	addi	s0,s0,2
    1286:	0100                	addi	s0,sp,128
    1288:	097ecf03          	lbu	t5,151(t4)
    128c:	0000                	unimp
    128e:	0501                	addi	a0,a0,0
    1290:	0648                	addi	a0,sp,772
    1292:	00090003          	lb	zero,0(s2)
    1296:	0100                	addi	s0,sp,128
    1298:	0105                	addi	sp,sp,1
    129a:	0901b203          	0x901b203
    129e:	0004                	0x4
    12a0:	0501                	addi	a0,a0,0
    12a2:	062a                	slli	a2,a2,0xa
    12a4:	02090203          	lb	tp,32(s2)
    12a8:	0100                	addi	s0,sp,128
    12aa:	0305                	addi	t1,t1,1
    12ac:	00090203          	lb	tp,0(s2)
    12b0:	0100                	addi	s0,sp,128
    12b2:	097ece03          	lbu	t3,151(t4)
    12b6:	0000                	unimp
    12b8:	0501                	addi	a0,a0,0
    12ba:	0644                	addi	s1,sp,772
    12bc:	00090003          	lb	zero,0(s2)
    12c0:	0100                	addi	s0,sp,128
    12c2:	4b05                	li	s6,1
    12c4:	06090003          	lb	zero,96(s2)
    12c8:	0100                	addi	s0,sp,128
    12ca:	4405                	li	s0,1
    12cc:	02090003          	lb	zero,32(s2)
    12d0:	0100                	addi	s0,sp,128
    12d2:	0a05                	addi	s4,s4,1
    12d4:	02090003          	lb	zero,32(s2)
    12d8:	0100                	addi	s0,sp,128
    12da:	0305                	addi	t1,t1,1
    12dc:	0306                	slli	t1,t1,0x1
    12de:	01b4                	addi	a3,sp,200
    12e0:	0409                	addi	s0,s0,2
    12e2:	0100                	addi	s0,sp,128
    12e4:	0b05                	addi	s6,s6,1
    12e6:	0306                	slli	t1,t1,0x1
    12e8:	0900                	addi	s0,sp,144
    12ea:	0000                	unimp
    12ec:	0501                	addi	a0,a0,0
    12ee:	02030603          	lb	a2,32(t1)
    12f2:	0409                	addi	s0,s0,2
    12f4:	0100                	addi	s0,sp,128
    12f6:	097ec603          	lbu	a2,151(t4)
    12fa:	0000                	unimp
    12fc:	0501                	addi	a0,a0,0
    12fe:	0648                	addi	a0,sp,772
    1300:	00090003          	lb	zero,0(s2)
    1304:	0100                	addi	s0,sp,128
    1306:	0105                	addi	sp,sp,1
    1308:	0901bb03          	0x901bb03
    130c:	0004                	0x4
    130e:	0501                	addi	a0,a0,0
    1310:	062c                	addi	a1,sp,776
    1312:	02090603          	lb	a2,32(s2)
    1316:	0100                	addi	s0,sp,128
    1318:	0305                	addi	t1,t1,1
    131a:	00090203          	lb	tp,0(s2)
    131e:	0100                	addi	s0,sp,128
    1320:	097ec103          	lbu	sp,151(t4)
    1324:	0000                	unimp
    1326:	0501                	addi	a0,a0,0
    1328:	0644                	addi	s1,sp,772
    132a:	00090003          	lb	zero,0(s2)
    132e:	0100                	addi	s0,sp,128
    1330:	4b05                	li	s6,1
    1332:	06090003          	lb	zero,96(s2)
    1336:	0100                	addi	s0,sp,128
    1338:	4405                	li	s0,1
    133a:	02090003          	lb	zero,32(s2)
    133e:	0100                	addi	s0,sp,128
    1340:	0a05                	addi	s4,s4,1
    1342:	02090003          	lb	zero,32(s2)
    1346:	0100                	addi	s0,sp,128
    1348:	0305                	addi	t1,t1,1
    134a:	0306                	slli	t1,t1,0x1
    134c:	01c1                	addi	gp,gp,16
    134e:	0409                	addi	s0,s0,2
    1350:	0100                	addi	s0,sp,128
    1352:	0b05                	addi	s6,s6,1
    1354:	0306                	slli	t1,t1,0x1
    1356:	0900                	addi	s0,sp,144
    1358:	0000                	unimp
    135a:	0501                	addi	a0,a0,0
    135c:	02030603          	lb	a2,32(t1)
    1360:	0409                	addi	s0,s0,2
    1362:	0100                	addi	s0,sp,128
    1364:	097eb903          	0x97eb903
    1368:	0000                	unimp
    136a:	0501                	addi	a0,a0,0
    136c:	0648                	addi	a0,sp,772
    136e:	00090003          	lb	zero,0(s2)
    1372:	0100                	addi	s0,sp,128
    1374:	0105                	addi	sp,sp,1
    1376:	0901c803          	lbu	a6,144(gp)
    137a:	0004                	0x4
    137c:	0501                	addi	a0,a0,0
    137e:	062e                	slli	a2,a2,0xb
    1380:	02090203          	lb	tp,32(s2)
    1384:	0100                	addi	s0,sp,128
    1386:	0305                	addi	t1,t1,1
    1388:	00090203          	lb	tp,0(s2)
    138c:	0100                	addi	s0,sp,128
    138e:	097eb803          	0x97eb803
    1392:	0000                	unimp
    1394:	0501                	addi	a0,a0,0
    1396:	0644                	addi	s1,sp,772
    1398:	00090003          	lb	zero,0(s2)
    139c:	0100                	addi	s0,sp,128
    139e:	4b05                	li	s6,1
    13a0:	06090003          	lb	zero,96(s2)
    13a4:	0100                	addi	s0,sp,128
    13a6:	4405                	li	s0,1
    13a8:	02090003          	lb	zero,32(s2)
    13ac:	0100                	addi	s0,sp,128
    13ae:	0a05                	addi	s4,s4,1
    13b0:	02090003          	lb	zero,32(s2)
    13b4:	0100                	addi	s0,sp,128
    13b6:	0305                	addi	t1,t1,1
    13b8:	0306                	slli	t1,t1,0x1
    13ba:	01ca                	slli	gp,gp,0x12
    13bc:	0409                	addi	s0,s0,2
    13be:	0100                	addi	s0,sp,128
    13c0:	00090203          	lb	tp,0(s2)
    13c4:	0100                	addi	s0,sp,128
    13c6:	0f05                	addi	t5,t5,1
    13c8:	0306                	slli	t1,t1,0x1
    13ca:	0900                	addi	s0,sp,144
    13cc:	0000                	unimp
    13ce:	0501                	addi	a0,a0,0
    13d0:	02030603          	lb	a2,32(t1)
    13d4:	0409                	addi	s0,s0,2
    13d6:	0100                	addi	s0,sp,128
    13d8:	097eae03          	lw	t3,151(t4)
    13dc:	0000                	unimp
    13de:	0501                	addi	a0,a0,0
    13e0:	0648                	addi	a0,sp,772
    13e2:	00090003          	lb	zero,0(s2)
    13e6:	0100                	addi	s0,sp,128
    13e8:	0105                	addi	sp,sp,1
    13ea:	0901d303          	lhu	t1,144(gp)
    13ee:	0004                	0x4
    13f0:	0501                	addi	a0,a0,0
    13f2:	062e                	slli	a2,a2,0xb
    13f4:	02090203          	lb	tp,32(s2)
    13f8:	0100                	addi	s0,sp,128
    13fa:	0305                	addi	t1,t1,1
    13fc:	00090203          	lb	tp,0(s2)
    1400:	0100                	addi	s0,sp,128
    1402:	097ead03          	lw	s10,151(t4)
    1406:	0000                	unimp
    1408:	0501                	addi	a0,a0,0
    140a:	0644                	addi	s1,sp,772
    140c:	00090003          	lb	zero,0(s2)
    1410:	0100                	addi	s0,sp,128
    1412:	4b05                	li	s6,1
    1414:	06090003          	lb	zero,96(s2)
    1418:	0100                	addi	s0,sp,128
    141a:	4405                	li	s0,1
    141c:	02090003          	lb	zero,32(s2)
    1420:	0100                	addi	s0,sp,128
    1422:	0a05                	addi	s4,s4,1
    1424:	02090003          	lb	zero,32(s2)
    1428:	0100                	addi	s0,sp,128
    142a:	0305                	addi	t1,t1,1
    142c:	0306                	slli	t1,t1,0x1
    142e:	01d5                	addi	gp,gp,21
    1430:	0409                	addi	s0,s0,2
    1432:	0100                	addi	s0,sp,128
    1434:	00090203          	lb	tp,0(s2)
    1438:	0100                	addi	s0,sp,128
    143a:	0f05                	addi	t5,t5,1
    143c:	0306                	slli	t1,t1,0x1
    143e:	0900                	addi	s0,sp,144
    1440:	0000                	unimp
    1442:	0501                	addi	a0,a0,0
    1444:	02030603          	lb	a2,32(t1)
    1448:	0409                	addi	s0,s0,2
    144a:	0100                	addi	s0,sp,128
    144c:	097ea303          	lw	t1,151(t4)
    1450:	0000                	unimp
    1452:	0501                	addi	a0,a0,0
    1454:	0648                	addi	a0,sp,772
    1456:	00090003          	lb	zero,0(s2)
    145a:	0100                	addi	s0,sp,128
    145c:	0105                	addi	sp,sp,1
    145e:	0901de03          	lhu	t3,144(gp)
    1462:	0004                	0x4
    1464:	0901                	addi	s2,s2,0
    1466:	0002                	c.slli64	zero
    1468:	0100                	addi	s0,sp,128
    146a:	01              	Address 0x000000000000146a is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	4d44                	lw	s1,28(a0)
   2:	3041                	jal	fffff882 <_stack_end+0xdfff7882>
   4:	435f 6168 6e6e      	0x6e6e6168435f
   a:	6c65                	lui	s8,0x19
   c:	5f34                	lw	a3,120(a4)
   e:	5249                	li	tp,-14
  10:	6e51                	lui	t3,0x14
  12:	5400                	lw	s0,40(s0)
  14:	4d49                	li	s10,18
  16:	5245                	li	tp,-15
  18:	5f30                	lw	a2,120(a4)
  1a:	5055                	c.li	zero,-11
  1c:	495f 5152 006e      	0x6e5152495f
  22:	4d44                	lw	s1,28(a0)
  24:	3141                	jal	fffffca4 <_stack_end+0xdfff7ca4>
  26:	435f 6168 6e6e      	0x6e6e6168435f
  2c:	6c65                	lui	s8,0x19
  2e:	5f30                	lw	a2,120(a4)
  30:	5249                	li	tp,-14
  32:	6e51                	lui	t3,0x14
  34:	4400                	lw	s0,8(s0)
  36:	414d                	li	sp,19
  38:	5f30                	lw	a2,120(a4)
  3a:	6e616843          	fmadd.q	fa6,ft2,ft6,fa3,unknown
  3e:	656e                	flw	fa0,216(sp)
  40:	316c                	fld	fa1,224(a0)
  42:	495f 5152 006e      	0x6e5152495f
  48:	5845                	li	a6,-15
  4a:	4954                	lw	a3,20(a0)
  4c:	5f34                	lw	a3,120(a4)
  4e:	5249                	li	tp,-14
  50:	6e51                	lui	t3,0x14
  52:	6500                	flw	fs0,8(a0)
  54:	63696c63          	bltu	s2,s6,68c <eclic_set_irq_priority+0xc>
  58:	695f 696e 0074      	0x74696e695f
  5e:	5845                	li	a6,-15
  60:	4954                	lw	a3,20(a0)
  62:	5f31                	li	t5,-20
  64:	5249                	li	tp,-14
  66:	6e51                	lui	t3,0x14
  68:	5400                	lw	s0,40(s0)
  6a:	4d41                	li	s10,16
  6c:	4550                	lw	a2,12(a0)
  6e:	5f52                	lw	t5,52(sp)
  70:	5249                	li	tp,-14
  72:	6e51                	lui	t3,0x14
  74:	4100                	lw	s0,0(a0)
  76:	4344                	lw	s1,4(a4)
  78:	5f30                	lw	a2,120(a4)
  7a:	5f31                	li	t5,-20
  7c:	5249                	li	tp,-14
  7e:	6e51                	lui	t3,0x14
  80:	7400                	flw	fs0,40(s0)
  82:	6d65                	lui	s10,0x19
  84:	0070                	addi	a2,sp,12
  86:	726f6873          	csrrsi	a6,0x726,30
  8a:	2074                	fld	fa3,192(s0)
  8c:	6e69                	lui	t3,0x1a
  8e:	0074                	addi	a3,sp,12
  90:	5f5f 6d74 0070      	0x706d745f5f
  96:	4954                	lw	a3,20(a0)
  98:	454d                	li	a0,19
  9a:	3052                	fld	ft0,304(sp)
  9c:	435f 6168 6e6e      	0x6e6e6168435f
  a2:	6c65                	lui	s8,0x19
  a4:	495f 5152 006e      	0x6e5152495f
  aa:	4d44                	lw	s1,28(a0)
  ac:	3041                	jal	fffff92c <_stack_end+0xdfff792c>
  ae:	435f 6168 6e6e      	0x6e6e6168435f
  b4:	6c65                	lui	s8,0x19
  b6:	5f30                	lw	a2,120(a4)
  b8:	5249                	li	tp,-14
  ba:	6e51                	lui	t3,0x14
  bc:	6d00                	flw	fs0,24(a0)
  be:	6961                	lui	s2,0x18
  c0:	006e                	c.slli	zero,0x1b
  c2:	31495053          	0x31495053
  c6:	495f 5152 006e      	0x6e5152495f
  cc:	4954                	lw	a3,20(a0)
  ce:	454d                	li	a0,19
  d0:	3052                	fld	ft0,304(sp)
  d2:	425f 4b52 495f      	0x495f4b52425f
  d8:	5152                	lw	sp,52(sp)
  da:	006e                	c.slli	zero,0x1b
  dc:	314e4143          	fmadd.s	ft2,ft8,fs4,ft6,rmm
  e0:	525f 3058 495f      	0x495f3058525f
  e6:	5152                	lw	sp,52(sp)
  e8:	006e                	c.slli	zero,0x1b
  ea:	6975                	lui	s2,0x1d
  ec:	746e                	flw	fs0,248(sp)
  ee:	5f38                	lw	a4,120(a4)
  f0:	0074                	addi	a3,sp,12
  f2:	6365                	lui	t1,0x19
  f4:	696c                	flw	fa1,84(a0)
  f6:	6e655f63          	bge	a0,t1,7f4 <CSR_MTVT2+0x8>
  fa:	6261                	lui	tp,0x18
  fc:	656c                	flw	fa1,76(a0)
  fe:	695f 746e 7265      	0x7265746e695f
 104:	7572                	flw	fa0,60(sp)
 106:	7470                	flw	fa2,108(s0)
 108:	4400                	lw	s0,8(s0)
 10a:	414d                	li	sp,19
 10c:	5f31                	li	t5,-20
 10e:	6e616843          	fmadd.q	fa6,ft2,ft6,fa3,unknown
 112:	656e                	flw	fa0,216(sp)
 114:	346c                	fld	fa1,232(s0)
 116:	495f 5152 006e      	0x6e5152495f
 11c:	4954                	lw	a3,20(a0)
 11e:	454d                	li	a0,19
 120:	3552                	fld	fa0,304(sp)
 122:	495f 5152 006e      	0x6e5152495f
 128:	4d44                	lw	s1,28(a0)
 12a:	3141                	jal	fffffdaa <_stack_end+0xdfff7daa>
 12c:	435f 6168 6e6e      	0x6e6e6168435f
 132:	6c65                	lui	s8,0x19
 134:	5f31                	li	t5,-20
 136:	5249                	li	tp,-14
 138:	6e51                	lui	t3,0x14
 13a:	5400                	lw	s0,40(s0)
 13c:	4d49                	li	s10,18
 13e:	5245                	li	tp,-15
 140:	5f32                	lw	t5,44(sp)
 142:	5249                	li	tp,-14
 144:	6e51                	lui	t3,0x14
 146:	4c00                	lw	s0,24(s0)
 148:	4456                	lw	s0,84(sp)
 14a:	495f 5152 006e      	0x6e5152495f
 150:	304e4143          	fmadd.s	ft2,ft8,ft4,ft6,rmm
 154:	545f 5f58 5249      	0x52495f58545f
 15a:	6e51                	lui	t3,0x14
 15c:	4300                	lw	s0,0(a4)
 15e:	4e41                	li	t3,16
 160:	5f30                	lw	a2,120(a4)
 162:	5852                	lw	a6,52(sp)
 164:	5f31                	li	t5,-20
 166:	5249                	li	tp,-14
 168:	6e51                	lui	t3,0x14
 16a:	6c00                	flw	fs0,24(s0)
 16c:	20676e6f          	jal	t3,76372 <CSR_MTVT2+0x75b86>
 170:	6f6c                	flw	fa1,92(a4)
 172:	676e                	flw	fa4,216(sp)
 174:	6920                	flw	fs0,80(a0)
 176:	746e                	flw	fs0,248(sp)
 178:	5500                	lw	s0,40(a0)
 17a:	54524153          	0x54524153
 17e:	5f30                	lw	a2,120(a4)
 180:	5249                	li	tp,-14
 182:	6e51                	lui	t3,0x14
 184:	4300                	lw	s0,0(a4)
 186:	4e41                	li	t3,16
 188:	5f30                	lw	a2,120(a4)
 18a:	5852                	lw	a6,52(sp)
 18c:	5f30                	lw	a2,120(a4)
 18e:	5249                	li	tp,-14
 190:	6e51                	lui	t3,0x14
 192:	5200                	lw	s0,32(a2)
 194:	4354                	lw	a3,4(a4)
 196:	495f 5152 006e      	0x6e5152495f
 19c:	4954                	lw	a3,20(a0)
 19e:	454d                	li	a0,19
 1a0:	3452                	fld	fs0,304(sp)
 1a2:	495f 5152 006e      	0x6e5152495f
 1a8:	4d46                	lw	s10,80(sp)
 1aa:	52495f43          	fmadd.d	ft10,fs2,ft4,fa0,unknown
 1ae:	6e51                	lui	t3,0x14
 1b0:	4300                	lw	s0,0(a4)
 1b2:	4e41                	li	t3,16
 1b4:	5f30                	lw	a2,120(a4)
 1b6:	5745                	li	a4,-15
 1b8:	434d                	li	t1,19
 1ba:	495f 5152 006e      	0x6e5152495f
 1c0:	4d44                	lw	s1,28(a0)
 1c2:	3041                	jal	fffffa42 <_stack_end+0xdfff7a42>
 1c4:	435f 6168 6e6e      	0x6e6e6168435f
 1ca:	6c65                	lui	s8,0x19
 1cc:	52495f33          	0x52495f33
 1d0:	6e51                	lui	t3,0x14
 1d2:	5200                	lw	s0,32(a2)
 1d4:	435f5543          	fmadd.d	fa0,ft10,fs5,fs0,unknown
 1d8:	4354                	lw	a3,4(a4)
 1da:	495f 5152 006e      	0x6e5152495f
 1e0:	3249                	jal	fffffb62 <_stack_end+0xdfff7b62>
 1e2:	455f3043          	0x455f3043
 1e6:	5f56                	lw	t5,116(sp)
 1e8:	5249                	li	tp,-14
  for(;time;time--)asm volatile("nop");
 1ea:	6e51                	lui	t3,0x14
}
 1ec:	5500                	lw	s0,40(a0)
  for(;time;time--)asm volatile("nop");
 1ee:	5241                	li	tp,-16
 1f0:	3454                	fld	fa3,168(s0)
 1f2:	495f 5152 006e      	0x6e5152495f
  USART_CTL0(USART0) &=~ USART_CTL0_TBEIE;
 1f8:	3249                	jal	fffffb7a <_stack_end+0xdfff7b7a>
 1fa:	455f3043          	0x455f3043
 1fe:	5f52                	lw	t5,52(sp)
 200:	5249                	li	tp,-14
void USART0_IRQHandler(void){
 202:	6e51                	lui	t3,0x14
 204:	5500                	lw	s0,40(a0)
 206:	53464253          	0x53464253
 20a:	575f 554b 5f50      	0x5f50554b575f
 210:	5249                	li	tp,-14
 212:	6e51                	lui	t3,0x14
 214:	4300                	lw	s0,0(a4)
 216:	494c                	lw	a1,20(a0)
 218:	4e495f43          	fmadd.q	ft10,fs2,ft4,fs1,unknown
 21c:	5f54                	lw	a3,60(a4)
  USART_CTL0(USART0) &=~ USART_CTL0_TBEIE;
 21e:	4d54                	lw	a3,28(a0)
 220:	0052                	c.slli	zero,0x14
 222:	3249                	jal	fffffba4 <_stack_end+0xdfff7ba4>
 224:	455f3143          	0x455f3143
  USART_DATA(USART0) = 'U';
 228:	5f56                	lw	t5,116(sp)
 22a:	5249                	li	tp,-14
 22c:	6e51                	lui	t3,0x14
  GPO_T(RLED);
 22e:	4500                	lw	s0,8(a0)
 230:	5458                	lw	a4,44(s0)
 232:	3149                	jal	fffffeb4 <_stack_end+0xdfff7eb4>
 234:	5f30                	lw	a2,120(a4)
  sleep(300000);
 236:	3531                	jal	42 <MSTATUS_MIE+0x3a>
 238:	495f 5152 006e      	0x6e5152495f
  GPO_T(RLED);
 23e:	6f6c                	flw	fa1,92(a4)
 240:	676e                	flw	fa4,216(sp)
 242:	6420                	flw	fs0,72(s0)
 244:	6c62756f          	jal	a0,2790a <CSR_MTVT2+0x2711e>
}
 248:	0065                	c.nop	25
 24a:	6e75                	lui	t3,0x1d
 24c:	6e676973          	csrrsi	s2,0x6e6,14
 250:	6465                	lui	s0,0x19
 252:	6320                	flw	fs0,64(a4)
 254:	6168                	flw	fa0,68(a0)
 256:	0072                	c.slli	zero,0x1c
 258:	4d44                	lw	s1,28(a0)
 25a:	3041                	jal	fffffada <_stack_end+0xdfff7ada>
 25c:	435f 6168 6e6e      	0x6e6e6168435f
 262:	6c65                	lui	s8,0x19
 264:	5f35                	li	t5,-19
 266:	5249                	li	tp,-14
 268:	6e51                	lui	t3,0x14
 26a:	4400                	lw	s0,8(s0)
 26c:	414d                	li	sp,19
  eclic_init(ECLIC_NUM_INTERRUPTS);
 26e:	5f30                	lw	a2,120(a4)
 270:	6e616843          	fmadd.q	fa6,ft2,ft6,fa3,unknown
  RCU_APB2EN |= RCU_APB2EN_PAEN | RCU_APB2EN_PBEN | RCU_APB2EN_PCEN;
 274:	656e                	flw	fa0,216(sp)
 276:	326c                	fld	fa1,224(a2)
 278:	495f 5152 006e      	0x6e5152495f
  GPIO_config(RLED); GPIO_config(YLED); GPIO_config(GLED);
 27e:	6f6c                	flw	fa1,92(a4)
  RCU_APB2EN |= RCU_APB2EN_PAEN | RCU_APB2EN_PBEN | RCU_APB2EN_PCEN;
 280:	676e                	flw	fa4,216(sp)
 282:	6c20                	flw	fs0,88(s0)
 284:	20676e6f          	jal	t3,7648a <CSR_MTVT2+0x75c9e>
  GPIO_config(RLED); GPIO_config(YLED); GPIO_config(GLED);
 288:	6e75                	lui	t3,0x1d
 28a:	6e676973          	csrrsi	s2,0x6e6,14
  eclic_set_vmode( USART0_IRQn );
 28e:	6465                	lui	s0,0x19
 290:	6920                	flw	fs0,80(a0)
  GPIO_config(RLED); GPIO_config(YLED); GPIO_config(GLED);
 292:	746e                	flw	fs0,248(sp)
 294:	4500                	lw	s0,8(a0)
 296:	5458                	lw	a4,44(s0)
 298:	3249                	jal	fffffc1a <_stack_end+0xdfff7c1a>
 29a:	495f 5152 006e      	0x6e5152495f
 2a0:	5845                	li	a6,-15
 2a2:	4954                	lw	a3,20(a0)
 2a4:	5f30                	lw	a2,120(a4)
 2a6:	5249                	li	tp,-14
 2a8:	6e51                	lui	t3,0x14
 2aa:	7300                	flw	fs0,32(a4)
 2ac:	6f68                	flw	fa0,92(a4)
 2ae:	7472                	flw	fs0,60(sp)
 2b0:	7520                	flw	fs0,104(a0)
 2b2:	736e                	flw	ft6,248(sp)
 2b4:	6769                	lui	a4,0x1a
 2b6:	656e                	flw	fa0,216(sp)
 2b8:	2064                	fld	fs1,192(s0)
 2ba:	6e69                	lui	t3,0x1a
 2bc:	0074                	addi	a3,sp,12
 2be:	4345                	li	t1,17
 2c0:	494c                	lw	a1,20(a0)
 2c2:	554e5f43          	0x554e5f43
  GPIO_config(SBTN); GPIO_config(RBTN);
 2c6:	5f4d                	li	t5,-13
 2c8:	4e49                	li	t3,18
  GPIO_config(UART0_RX); GPIO_config(UART0_TX);
 2ca:	4554                	lw	a3,12(a0)
 2cc:	5252                	lw	tp,52(sp)
 2ce:	5055                	c.li	zero,-11
  GPIO_config(SBTN); GPIO_config(RBTN);
 2d0:	5354                	lw	a3,36(a4)
 2d2:	6500                	flw	fs0,8(a0)
 2d4:	63696c63          	bltu	s2,s6,90c <CSR_MTVT2+0x120>
 2d8:	735f 7465 765f      	0x765f7465735f
 2de:	6f6d                	lui	t5,0x1b
 2e0:	6564                	flw	fs1,76(a0)
 2e2:	2f00                	fld	fs0,24(a4)
 2e4:	656d                	lui	a0,0x1b
 2e6:	6964                	flw	fs1,84(a0)
 2e8:	2f61                	jal	a80 <CSR_MTVT2+0x294>
  GPIO_config(UART0_RX); GPIO_config(UART0_TX);
 2ea:	7865                	lui	a6,0xffff9
 2ec:	2f74                	fld	fa3,216(a4)
 2ee:	6564                	flw	fs1,76(a0)
 2f0:	2f76                	fld	ft10,344(sp)
 2f2:	7270                	flw	fa2,100(a2)
 2f4:	312f676f          	jal	a4,f6606 <CSR_MTVT2+0xf5e1a>
 2f8:	722d                	lui	tp,0xfffeb
 2fa:	7369                	lui	t1,0xffffa
 2fc:	44472f63          	0x44472f63
 300:	46563233          	0x46563233
 304:	3031                	jal	fffffb10 <_stack_end+0xdfff7b10>
 306:	75745f33          	0x75745f33
  RCU_APB2EN |= RCU_APB2EN_USART0EN | RCU_APB2EN_AFEN;
 30a:	6f74                	flw	fa3,92(a4)
 30c:	2f72                	fld	ft10,280(sp)
 30e:	3431                	jal	fffffd1a <_stack_end+0xdfff7d1a>
 310:	435f 695f 746e      	0x746e695f435f
  USART_BAUD(USART0) = 8000000 / 9600;
 316:	7265                	lui	tp,0xffff9
 318:	7572                	flw	fa0,60(sp)
 31a:	7470                	flw	fa2,108(s0)
 31c:	54520073          	0x54520073
  USART_CTL0(USART0) = USART_CTL0_UEN | USART_CTL0_REN | USART_CTL0_TEN;
 320:	4c415f43          	0x4c415f43
 324:	5241                	li	tp,-16
  eclic_set_vmode( USART0_IRQn );
 326:	5f4d                	li	t5,-13
  eclic_enable_interrupt( USART0_IRQn );
 328:	5249                	li	tp,-14
 32a:	6e51                	lui	t3,0x14
 32c:	4300                	lw	s0,0(a4)
  eclic_global_interrupt_enable();
 32e:	4e41                	li	t3,16
 330:	5f31                	li	t5,-20
    sleep(100000);
 332:	5854                	lw	a3,52(s0)
    GPO_T(YLED);
 334:	495f 5152 006e      	0x6e5152495f
    if( GPI_ON(SBTN) )GPO_ON(GLED); else GPO_OFF(GLED);
 33a:	2f637273          	csrrci	tp,0x2f6,6
 33e:	616d                	addi	sp,sp,240
    if( GPI_ON(RBTN) )USART_CTL0(USART0) |= USART_CTL0_TBEIE;
 340:	6e69                	lui	t3,0x1a
 342:	632e                	flw	ft6,200(sp)
    sleep(100000);
 344:	5300                	lw	s0,32(a4)
 346:	4950                	lw	a2,20(a0)
    GPO_T(YLED);
 348:	5f30                	lw	a2,120(a4)
 34a:	5249                	li	tp,-14
 34c:	6e51                	lui	t3,0x14
 34e:	4500                	lw	s0,8(a0)
 350:	5458                	lw	a4,44(s0)
 352:	3549                	jal	1d4 <clear_bss_loop>
    if( GPI_ON(SBTN) )GPO_ON(GLED); else GPO_OFF(GLED);
 354:	395f 495f 5152      	0x5152495f395f
 35a:	006e                	c.slli	zero,0x1b
 35c:	43494c43          	fmadd.d	fs8,fs2,fs4,fs0,rmm
    if( GPI_ON(RBTN) )USART_CTL0(USART0) |= USART_CTL0_TBEIE;
 360:	495f 544e 535f      	0x535f544e495f
 366:	5446                	lw	s0,112(sp)
 368:	5300                	lw	s0,32(a4)
 36a:	7379                	lui	t1,0xffffe
 36c:	6574                	flw	fa3,76(a0)
 36e:	436d                	li	t1,27
 370:	4365726f          	jal	tp,577a6 <CSR_MTVT2+0x56fba>
    sleep(100000);
 374:	6f6c                	flw	fa1,92(a4)
 376:	54006b63          	bltu	zero,zero,8cc <CSR_MTVT2+0xe0>
    if( GPI_ON(SBTN) )GPO_ON(GLED); else GPO_OFF(GLED);
 37a:	4d49                	li	s10,18
 37c:	5245                	li	tp,-15
 37e:	5f30                	lw	a2,120(a4)
    asm volatile ("li x6, 0xffffffff":::"x6");
 380:	5254                	lw	a3,36(a2)
 382:	4d435f47          	0x4d435f47
    asm volatile ("csrw pmpaddr0, x6":::);
 386:	5f54                	lw	a3,60(a4)
    asm volatile ("li x6, 0x7f":::"x6");
 388:	5249                	li	tp,-14
 38a:	6e51                	lui	t3,0x14
    asm volatile ("csrw pmpcfg0, x6":::);
 38c:	4300                	lw	s0,0(a4)
 38e:	4e41                	li	t3,16
}
 390:	5f31                	li	t5,-20
    clear_csr (mstatus,MSTATUS_MPP);
 392:	5852                	lw	a6,52(sp)
 394:	5f31                	li	t5,-20
 396:	5249                	li	tp,-14
 398:	6e51                	lui	t3,0x14
 39a:	5500                	lw	s0,40(a0)
    asm volatile ("la x6, 1f    ":::"x6");
 39c:	53464253          	0x53464253
 3a0:	495f 5152 006e      	0x6e5152495f
    asm volatile ("csrw mepc, x6":::);
 3a6:	4954                	lw	a3,20(a0)
    asm volatile ("mret":::);
 3a8:	454d                	li	a0,19
 3aa:	3652                	fld	fa2,304(sp)
} 
 3ac:	495f 5152 006e      	0x6e5152495f
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME);
 3b2:	4d44                	lw	s1,28(a0)
}
 3b4:	3141                	jal	34 <MSTATUS_MIE+0x2c>
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME + 4);
 3b6:	435f 6168 6e6e      	0x6e6e6168435f
}
 3bc:	6c65                	lui	s8,0x19
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME + 4);
 3be:	5f32                	lw	t5,44(sp)
 3c0:	5249                	li	tp,-14
 3c2:	6e51                	lui	t3,0x14
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME);
 3c4:	4300                	lw	s0,0(a4)
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME + 4);
 3c6:	494c                	lw	a1,20(a0)
    if (hi == mtime_hi())
 3c8:	4e495f43          	fmadd.q	ft10,fs2,ft4,fs1,unknown
}
 3cc:	5f54                	lw	a3,60(a4)
  return TIMER_FREQ;
 3ce:	4d50                	lw	a2,28(a0)
 3d0:	0049564f          	fnmadd.s	fa2,fs2,ft4,ft0,unknown
 3d4:	4954                	lw	a3,20(a0)
 3d6:	454d                	li	a0,19
}
 3d8:	3352                	fld	ft6,304(sp)
 3da:	495f 5152 006e      	0x6e5152495f
    uint32_t lo = read_csr(minstret);
 3e0:	5355                	li	t1,-11
 3e2:	5241                	li	tp,-16
    if (hi == read_csr(minstreth))
 3e4:	3054                	fld	fa3,160(s0)
 3e6:	495f 5152 6148      	0x61485152495f
}
 3ec:	646e                	flw	fs0,216(sp)
    uint32_t hi = read_csr(mcycleh);
 3ee:	656c                	flw	fa1,76(a0)
 3f0:	0072                	c.slli	zero,0x1c
    uint32_t lo = read_csr(mcycle);
 3f2:	20554e47          	fmsub.s	ft8,fa0,ft5,ft4,rmm
    if (hi == read_csr(mcycleh))
 3f6:	20373143          	fmadd.s	ft2,fa4,ft3,ft4,rup
 3fa:	2e38                	fld	fa4,88(a2)
 3fc:	20302e33          	0x20302e33
  return TIMER_FREQ;
 400:	6d2d                	lui	s10,0xb
 402:	7261                	lui	tp,0xffff8
 404:	723d6863          	bltu	s10,gp,b34 <CSR_MTVT2+0x348>
 408:	3376                	fld	ft6,376(sp)
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME);
 40a:	6932                	flw	fs2,12(sp)
 40c:	616d                	addi	sp,sp,240
  return TIMER_FREQ;
 40e:	6d2d2063          	0x6d2d2063
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME);
 412:	6261                	lui	tp,0x18
 414:	3d69                	jal	2ae <main+0x40>
 416:	6c69                	lui	s8,0x1a
 418:	3370                	fld	fa2,224(a4)
  } while (start_mtime == tmp);
 41a:	2032                	fld	ft0,264(sp)
 41c:	6d2d                	lui	s10,0xb
  uint32_t start_mcycle = read_csr(mcycle);
 41e:	646f6d63          	bltu	t5,t1,a78 <CSR_MTVT2+0x28c>
  return *(volatile uint32_t *)(TIMER_CTRL_ADDR + TIMER_MTIME);
 422:	6c65                	lui	s8,0x19
 424:	6d3d                	lui	s10,0xf
 426:	6465                	lui	s0,0x19
 428:	6e61                	lui	t3,0x18
    delta_mtime = mtime_lo() - start_mtime;
 42a:	2079                	jal	4b8 <eclic_set_pending+0x10>
 42c:	672d                	lui	a4,0xb
  } while (delta_mtime < n);
 42e:	2d20                	fld	fs0,88(a0)
 430:	2d20734f          	0x2d20734f
  uint32_t delta_mcycle = read_csr(mcycle) - start_mcycle;
 434:	6666                	flw	fa2,88(sp)
 436:	6572                	flw	fa0,28(sp)
 438:	7365                	lui	t1,0xffff9
         + ((delta_mcycle % delta_mtime) * mtime_freq) / delta_mtime;
 43a:	6174                	flw	fa3,68(a0)
 43c:	646e                	flw	fs0,216(sp)
  return (delta_mcycle / delta_mtime) * mtime_freq
 43e:	6e69                	lui	t3,0x1a
 440:	662d2067          	0x662d2067
         + ((delta_mcycle % delta_mtime) * mtime_freq) / delta_mtime;
 444:	6f6e                	flw	ft10,216(sp)
 446:	622d                	lui	tp,0xb
 448:	6975                	lui	s2,0x1d
  return (delta_mcycle / delta_mtime) * mtime_freq
 44a:	746c                	flw	fa1,108(s0)
 44c:	6e69                	lui	t3,0x1a
}
 44e:	702d                	c.lui	zero,0xfffeb
 450:	6972                	flw	fs2,28(sp)
{
 452:	746e                	flw	fs0,248(sp)
  measure_cpu_freq(1);
 454:	0066                	c.slli	zero,0x19
{
 456:	314e4143          	fmadd.s	ft2,ft8,fs4,ft6,rmm
}
 45a:	455f 4d57 5f43      	0x5f434d57455f
 460:	5249                	li	tp,-14
  cpu_freq = measure_cpu_freq(100);
 462:	6e51                	lui	t3,0x14
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_CFG_OFFSET)=0;
 464:	5400                	lw	s0,40(s0)
 466:	4d49                	li	s10,18
 468:	5245                	li	tp,-15
 46a:	5f31                	li	t5,-20
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_MTH_OFFSET)=0;
 46c:	5249                	li	tp,-14
 46e:	6e51                	lui	t3,0x14
  vuint32_t * upper = (vuint32_t*)(base + num_irq*4);
 470:	4300                	lw	s0,0(a4)
 472:	494c                	lw	a1,20(a0)
 474:	4e495f43          	fmadd.q	ft10,fs2,ft4,fs1,unknown
  for (ptr = base; ptr < upper; ptr=ptr+4){
 478:	5f54                	lw	a3,60(a4)
 47a:	5742                	lw	a4,48(sp)
}
 47c:	4945                	li	s2,17
    *ptr = 0;
 47e:	4400                	lw	s0,8(s0)
 480:	414d                	li	sp,19
  for (ptr = base; ptr < upper; ptr=ptr+4){
 482:	5f31                	li	t5,-20
 484:	6e616843          	fmadd.q	fa6,ft2,ft6,fa3,unknown
    *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_IE_OFFSET+source*4) = 1;
 488:	656e                	flw	fa0,216(sp)
 48a:	336c                	fld	fa1,224(a4)
 48c:	495f 5152 006e      	0x6e5152495f
 492:	5355                	li	t1,-11
 494:	5241                	li	tp,-16
}
 496:	3254                	fld	fa3,160(a2)
    *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_IE_OFFSET+source*4) = 0;
 498:	495f 5152 006e      	0x6e5152495f
 49e:	5355                	li	t1,-11
 4a0:	5241                	li	tp,-16
 4a2:	3154                	fld	fa3,160(a0)
 4a4:	495f 5152 006e      	0x6e5152495f
    *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_IP_OFFSET+source*4) = 1;
 4aa:	5845                	li	a6,-15
 4ac:	4954                	lw	a3,20(a0)
 4ae:	52495f33          	0x52495f33
 4b2:	6e51                	lui	t3,0x14
 4b4:	5300                	lw	s0,32(a4)
 4b6:	4950                	lw	a2,20(a0)
 4b8:	5f32                	lw	t5,44(sp)
}
 4ba:	5249                	li	tp,-14
    *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_IP_OFFSET+source*4) = 0;
 4bc:	6e51                	lui	t3,0x14
 4be:	5500                	lw	s0,40(a0)
 4c0:	5241                	li	tp,-16
 4c2:	3354                	fld	fa3,160(a4)
 4c4:	495f 5152 006e      	0x6e5152495f
 4ca:	47445757          	0x47445757
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4) = intctrl;
 4ce:	5f54                	lw	a3,60(a4)
 4d0:	5249                	li	tp,-14
 4d2:	6e51                	lui	t3,0x14
 4d4:	4900                	lw	s0,16(a0)
 4d6:	4332                	lw	t1,12(sp)
 4d8:	5f31                	li	t5,-20
 4da:	5245                	li	tp,-15
}
 4dc:	495f 5152 006e      	0x6e5152495f
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
 4e2:	5845                	li	a6,-15
 4e4:	434d                	li	t1,19
 4e6:	495f 5152 006e      	0x6e5152495f
}
 4ec:	43494c43          	fmadd.d	fs8,fs2,fs4,fs0,rmm
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4) = intattr;
 4f0:	495f 544e 525f      	0x525f544e495f
 4f6:	5345                	li	t1,-15
 4f8:	5245                	li	tp,-15
 4fa:	4556                	lw	a0,84(sp)
}
 4fc:	0044                	addi	s1,sp,4
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4);
 4fe:	4d44                	lw	s1,28(a0)
 500:	3041                	jal	fffffd80 <_stack_end+0xdfff7d80>
 502:	435f 6168 6e6e      	0x6e6e6168435f
 508:	6c65                	lui	s8,0x19
 50a:	5f36                	lw	t5,108(sp)
}
 50c:	5249                	li	tp,-14
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_CFG_OFFSET) = cliccfg;
 50e:	6e51                	lui	t3,0x14
 510:	7300                	flw	fs0,32(a4)
 512:	656c                	flw	fa1,76(a0)
 514:	7065                	c.lui	zero,0xffff9
}
 516:	6700                	flw	fs0,8(a4)
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_CFG_OFFSET);
 518:	7465                	lui	s0,0xffff9
 51a:	745f 6d69 7265      	0x72656d69745f
}
 520:	665f 6572 0071      	0x716572665f
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_MTH_OFFSET) = mth;
 526:	5f746567          	0x5f746567
}
 52a:	5f757063          	bgeu	a0,s7,b0a <CSR_MTVT2+0x31e>
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_MTH_OFFSET);
 52e:	7266                	flw	ft4,120(sp)
 530:	7165                	addi	sp,sp,-400
 532:	6d00                	flw	fs0,24(a0)
}
 534:	6974                	flw	fa3,84(a0)
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_CFG_OFFSET);
 536:	656d                	lui	a0,0x1b
 538:	6c5f 006f 656e      	0x656e006f6c5f
  uint8_t nlbits_shifted = nlbits << ECLIC_CFG_NLBITS_LSB;
 53e:	6e695f77          	0x6e695f77
  uint8_t new_cliccfg = (old_cliccfg & (~ECLIC_CFG_NLBITS_MASK)) | (ECLIC_CFG_NLBITS_MASK & nlbits_shifted); 
 542:	6174                	flw	fa3,68(a0)
 544:	7474                	flw	fa3,108(s0)
 546:	0072                	c.slli	zero,0x1c
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_CFG_OFFSET) = cliccfg;
 548:	5f746567          	0x5f746567
}
 54c:	6c637963          	bgeu	t1,t1,c1e <CSR_MTVT2+0x432>
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_CFG_OFFSET);
 550:	5f65                	li	t5,-7
 552:	6176                	flw	ft2,92(sp)
 554:	756c                	flw	fa1,108(a0)
  nlbits = (nlbits & ECLIC_CFG_NLBITS_MASK) >> ECLIC_CFG_NLBITS_LSB;
 556:	0065                	c.nop	25
}
 558:	7075                	c.lui	zero,0xffffd
 55a:	6570                	flw	fa2,76(a0)
void eclic_set_irq_lvl(uint32_t source, uint8_t lvl) {
 55c:	0072                	c.slli	zero,0x1c
 55e:	6365                	lui	t1,0x19
 560:	696c                	flw	fa1,84(a0)
 562:	65675f63          	bge	a4,s6,bc0 <CSR_MTVT2+0x3d4>
  uint8_t nlbits = eclic_get_nlbits();
 566:	5f74                	lw	a3,124(a4)
  lvl = lvl >> (8-nlbits);
 568:	746d                	lui	s0,0xffffb
 56a:	0068                	addi	a0,sp,12
 56c:	5f646c6f          	jal	s8,46b62 <CSR_MTVT2+0x46376>
 570:	6e69                	lui	t3,0x1a
 572:	6174                	flw	fa3,68(a0)
 574:	7474                	flw	fa3,108(s0)
 576:	0072                	c.slli	zero,0x1c
 578:	6975                	lui	s2,0x1d
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
 57a:	746e                	flw	fs0,248(sp)
 57c:	3436                	fld	fs0,360(sp)
  lvl = lvl >> (8-nlbits);
 57e:	745f 6500 6c63      	0x6c636500745f
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
 584:	6369                	lui	t1,0x1a
  lvl = lvl >> (8-nlbits);
 586:	675f 7465 695f      	0x695f7465675f
  lvl = lvl << (8-nlbits);
 58c:	7172                	flw	ft2,60(sp)
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
 58e:	705f 6972 726f      	0x726f6972705f
  current_intctrl = current_intctrl << nlbits;
 594:	7469                	lui	s0,0xffffa
  current_intctrl = current_intctrl >> nlbits;
 596:	0079                	c.nop	30
 598:	657a6973          	csrrsi	s2,0x657,20
 59c:	745f 6500 6c63      	0x6c636500745f
  eclic_set_intctrl(source, (current_intctrl | lvl));
 5a2:	6369                	lui	t1,0x1a
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4) = intctrl;
 5a4:	675f 7465 6e5f      	0x6e5f7465675f
}
 5aa:	626c                	flw	fa1,68(a2)
 5ac:	7469                	lui	s0,0xffffa
 5ae:	656e0073          	0x656e0073
uint8_t eclic_get_irq_lvl(uint32_t source) {
 5b2:	6c635f77          	0x6c635f77
 5b6:	6369                	lui	t1,0x1a
  uint8_t nlbits = eclic_get_nlbits();
 5b8:	00676663          	bltu	a4,t1,5c4 <eclic_get_irq_lvl+0x14>
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
 5bc:	6365                	lui	t1,0x19
 5be:	696c                	flw	fa1,84(a0)
 5c0:	65735f63          	bge	t1,s7,c1e <CSR_MTVT2+0x432>
 5c4:	5f74                	lw	a3,124(a4)
 5c6:	6e69                	lui	t3,0x1a
  intctrl = intctrl >> (8-nlbits);
 5c8:	6374                	flw	fa3,68(a4)
 5ca:	7274                	flw	fa3,100(a2)
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
 5cc:	006c                	addi	a1,sp,12
 5ce:	6365                	lui	t1,0x19
  intctrl = intctrl >> (8-nlbits);
 5d0:	696c                	flw	fa1,84(a0)
 5d2:	65735f63          	bge	t1,s7,c30 <CSR_MTVT2+0x444>
 5d6:	5f74                	lw	a3,124(a4)
 5d8:	7269                	lui	tp,0xffffa
 5da:	5f71                	li	t5,-4
}
 5dc:	7270                	flw	fa2,100(a2)
 5de:	6f69                	lui	t5,0x1a
  intctrl = intctrl >> (8-nlbits);
 5e0:	6972                	flw	fs2,28(sp)
 5e2:	7974                	flw	fa3,116(a0)
  uint8_t lvl = intctrl << (8-nlbits);
 5e4:	6500                	flw	fs0,8(a0)
 5e6:	63696c63          	bltu	s2,s6,c1e <CSR_MTVT2+0x432>
}
 5ea:	735f 7465 6d5f      	0x6d5f7465735f
void eclic_set_irq_lvl_abs(uint32_t source, uint8_t lvl_abs) {
 5f0:	6874                	flw	fa3,84(s0)
 5f2:	6500                	flw	fs0,8(a0)
 5f4:	63696c63          	bltu	s2,s6,c2c <CSR_MTVT2+0x440>
 5f8:	675f 7465 695f      	0x695f7465675f
  uint8_t lvl = lvl_abs << (8-nlbits);
 5fe:	7172                	flw	ft2,60(sp)
 600:	6c5f 6c76 6400      	0x64006c766c5f
 606:	6c65                	lui	s8,0x19
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
 608:	6174                	flw	fa3,68(a0)
 60a:	6d5f 7963 6c63      	0x6c6379636d5f
 610:	0065                	c.nop	25
 612:	72617473          	csrrci	s0,0x726,2
  uint8_t lvl = lvl_abs << (8-nlbits);
 616:	5f74                	lw	a3,124(a4)
 618:	746d                	lui	s0,0xffffb
 61a:	6d69                	lui	s10,0x1a
  current_intctrl = current_intctrl << nlbits;
 61c:	0065                	c.nop	25
 61e:	6365                	lui	t1,0x19
  current_intctrl = current_intctrl >> nlbits;
 620:	696c                	flw	fa1,84(a0)
 622:	65735f63          	bge	t1,s7,c80 <CSR_MTVT2+0x494>
  uint8_t lvl = lvl_abs << (8-nlbits);
 626:	5f74                	lw	a3,124(a4)
 628:	656c                	flw	fa1,76(a0)
  current_intctrl = current_intctrl >> nlbits;
 62a:	6576                	flw	fa0,92(sp)
 62c:	5f6c                	lw	a1,124(a4)
  eclic_set_intctrl(source, (current_intctrl | lvl));
 62e:	7274                	flw	fa3,100(a2)
 630:	6769                	lui	a4,0x1a
 632:	6500                	flw	fs0,8(a0)
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4) = intctrl;
 634:	63696c63          	bltu	s2,s6,c6c <CSR_MTVT2+0x480>
}
 638:	675f 7465 695f      	0x695f7465675f
 63e:	7172                	flw	ft2,60(sp)
 640:	6c5f 6c76 615f      	0x615f6c766c5f
uint8_t eclic_get_irq_lvl_abs(uint32_t source) {
 646:	7362                	flw	ft6,56(sp)
 648:	6500                	flw	fs0,8(a0)
  uint8_t nlbits = eclic_get_nlbits();
 64a:	63696c63          	bltu	s2,s6,c82 <CSR_MTVT2+0x496>
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
 64e:	735f 7465 635f      	0x635f7465735f
 654:	696c                	flw	fa1,84(a0)
 656:	67666363          	bltu	a2,s6,cbc <CSR_MTVT2+0x4d0>
  intctrl = intctrl >> (8-nlbits);
 65a:	6500                	flw	fs0,8(a0)
 65c:	63696c63          	bltu	s2,s6,c94 <CSR_MTVT2+0x4a8>
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
 660:	675f 7465 695f      	0x695f7465675f
  intctrl = intctrl >> (8-nlbits);
 666:	746e                	flw	fs0,248(sp)
 668:	6c727463          	bgeu	tp,t2,d30 <CSR_MTVT2+0x544>
}
 66c:	6500                	flw	fs0,8(a0)
 66e:	63696c63          	bltu	s2,s6,ca6 <CSR_MTVT2+0x4ba>
  intctrl = intctrl >> (8-nlbits);
 672:	675f 7465 695f      	0x695f7465675f
}
 678:	746e                	flw	fs0,248(sp)
 67a:	7461                	lui	s0,0xffff8
 67c:	7274                	flw	fa3,100(a2)
 67e:	6200                	flw	fs0,0(a2)
uint8_t eclic_set_irq_priority(uint32_t source, uint8_t priority) {
 680:	7361                	lui	t1,0xffff8
 682:	0065                	c.nop	25
 684:	746d                	lui	s0,0xffffb
 686:	6576                	flw	fa0,92(sp)
 688:	61765f63          	bge	a2,s7,ca6 <CSR_MTVT2+0x4ba>
	if (nlbits >= ECLICINTCTLBITS) {
 68c:	756c                	flw	fa1,108(a0)
		return 0;
 68e:	0065                	c.nop	25
	if (nlbits >= ECLICINTCTLBITS) {
 690:	72756f73          	csrrsi	t5,0x727,10
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
 694:	65006563          	bltu	zero,a6,cde <CSR_MTVT2+0x4f2>
 698:	63696c63          	bltu	s2,s6,cd0 <CSR_MTVT2+0x4e4>
 69c:	735f 7465 6e5f      	0x6e5f7465735f
	priority = priority << (8 - ECLICINTCTLBITS);
 6a2:	626c                	flw	fa1,68(a2)
	current_intctrl = current_intctrl >> (8-nlbits);
 6a4:	7469                	lui	s0,0xffffa
 6a6:	65670073          	0x65670073
	priority = priority << (8 - ECLICINTCTLBITS);
 6aa:	5f74                	lw	a3,124(a4)
	current_intctrl = current_intctrl >> (8-nlbits);
 6ac:	6e69                	lui	t3,0x1a
 6ae:	65727473          	csrrci	s0,0x657,4
	priority = priority << (8 - ECLICINTCTLBITS);
 6b2:	5f74                	lw	a3,124(a4)
	current_intctrl = current_intctrl << (8-nlbits);
 6b4:	6176                	flw	ft2,92(sp)
 6b6:	756c                	flw	fa1,108(a0)
	eclic_set_intctrl(source, (current_intctrl | priority));
 6b8:	0065                	c.nop	25
 6ba:	6d70                	flw	fa2,92(a0)
 6bc:	5f70                	lw	a2,124(a4)
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4) = intctrl;
 6be:	6e65706f          	j	57da4 <CSR_MTVT2+0x575b8>
}
 6c2:	615f 6c6c 735f      	0x735f6c6c615f
 6c8:	6170                	flw	fa2,68(a0)
 6ca:	65006563          	bltu	zero,a6,d14 <CSR_MTVT2+0x528>
uint8_t eclic_get_irq_priority(uint32_t source) {
 6ce:	63696c63          	bltu	s2,s6,d06 <CSR_MTVT2+0x51a>
 6d2:	735f 7465 705f      	0x705f7465735f
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
 6d8:	6465736f          	jal	t1,57d1e <CSR_MTVT2+0x57532>
 6dc:	745f6567          	0x745f6567
 6e0:	6972                	flw	fs2,28(sp)
 6e2:	75630067          	jr	1878(t1) # ffff8756 <_stack_end+0xdfff0756>
	intctrl = intctrl << nlbits;
 6e6:	7272                	flw	ft4,60(sp)
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_CTRL_OFFSET+source*4);
 6e8:	6e65                	lui	t3,0x19
 6ea:	5f74                	lw	a3,124(a4)
	intctrl = intctrl << nlbits;
 6ec:	6e69                	lui	t3,0x1a
 6ee:	6374                	flw	fa3,68(a4)
 6f0:	7274                	flw	fa3,100(a2)
 6f2:	006c                	addi	a1,sp,12
 6f4:	6365                	lui	t1,0x19
}
 6f6:	696c                	flw	fa1,84(a0)
 6f8:	65735f63          	bge	t1,s7,d56 <CSR_MTVT2+0x56a>
	intctrl = intctrl << nlbits;
 6fc:	5f74                	lw	a3,124(a4)
	uint8_t priority = intctrl >> (nlbits+(8 - ECLICINTCTLBITS));
 6fe:	7269                	lui	tp,0xffffa
 700:	5f71                	li	t5,-4
 702:	766c                	flw	fa1,108(a2)
 704:	006c                	addi	a1,sp,12
 706:	72617473          	csrrci	s0,0x726,2
}
 70a:	5f74                	lw	a3,124(a4)
 70c:	636d                	lui	t1,0x1b
 70e:	6379                	lui	t1,0x1e
 710:	656c                	flw	fa1,76(a0)
  uint32_t mtvec_value = read_csr(mtvec);
 712:	6f00                	flw	fs0,24(a4)
 714:	646c                	flw	fa1,76(s0)
  mtvec_value = mtvec_value & 0xFFFFFFC0;
 716:	635f 696c 6363      	0x6363696c635f
  mtvec_value = mtvec_value | 0x00000003;
 71c:	6766                	flw	fa4,88(sp)
  write_csr(mtvec,mtvec_value);
 71e:	6500                	flw	fs0,8(a0)
 720:	63696c63          	bltu	s2,s6,d58 <CSR_MTVT2+0x56c>
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4);
 724:	735f 7465 6e5f      	0x6e5f7465735f
 72a:	6765                	lui	a4,0x19
 72c:	6465                	lui	s0,0x19
 72e:	745f6567          	0x745f6567
  uint8_t new_intattr = (old_intattr | 0x1); 
 732:	6972                	flw	fs2,28(sp)
 734:	63650067          	jr	1590(a0) # 1b636 <CSR_MTVT2+0x1ae4a>
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4) = intattr;
 738:	696c                	flw	fa1,84(a0)
}
 73a:	65735f63          	bge	t1,s7,d98 <CSR_MTVT2+0x5ac>
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4);
 73e:	5f74                	lw	a3,124(a4)
 740:	6e69                	lui	t3,0x1a
 742:	6174                	flw	fa3,68(a0)
 744:	7474                	flw	fa3,108(s0)
 746:	0072                	c.slli	zero,0x1c
 748:	696c                	flw	fa1,84(a0)
  uint8_t new_intattr = (old_intattr & (~0x1));
 74a:	2f62                	fld	ft10,24(sp)
 74c:	6946                	flw	fs2,80(sp)
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4) = intattr;
 74e:	6d72                	flw	fs10,28(sp)
 750:	65726177          	0x65726177
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4);
 754:	5349522f          	0x5349522f
 758:	642f5643          	0x642f5643
 75c:	6972                	flw	fs2,28(sp)
 75e:	6576                	flw	fa0,92(sp)
 760:	7372                	flw	ft6,60(sp)
  uint8_t new_intattr = (old_intattr & (~0x2));
 762:	30326e2f          	0x30326e2f
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4) = intattr;
 766:	5f30                	lw	a2,120(a4)
 768:	7566                	flw	fa0,120(sp)
}
 76a:	636e                	flw	ft6,216(sp)
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4);
 76c:	632e                	flw	ft6,200(sp)
 76e:	6d00                	flw	fs0,24(a0)
 770:	6974                	flw	fa3,84(a0)
 772:	656d                	lui	a0,0x1b
 774:	665f 6572 0071      	0x716572665f
  new_intattr = (old_intattr & (~0x4));
 77a:	656d                	lui	a0,0x1b
 77c:	7361                	lui	t1,0xffff8
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4) = intattr;
 77e:	7275                	lui	tp,0xffffd
 780:	5f65                	li	t5,-7
}
 782:	5f757063          	bgeu	a0,s7,d62 <CSR_MTVT2+0x576>
  return *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4);
 786:	7266                	flw	ft4,120(sp)
 788:	7165                	addi	sp,sp,-400
 78a:	7600                	flw	fs0,40(a2)
 78c:	6975                	lui	s2,0x1d
 78e:	746e                	flw	fs0,248(sp)
 790:	745f3233          	0x745f3233
  new_intattr = (old_intattr | 0x4);
 794:	6500                	flw	fs0,8(a0)
  *(volatile uint8_t*)(ECLIC_ADDR_BASE+ECLIC_INT_ATTR_OFFSET+source*4) = intattr;
 796:	63696c63          	bltu	s2,s6,dce <CSR_MTVT2+0x5e2>
}
 79a:	6d5f 646f 5f65      	0x5f65646f6d5f
 7a0:	6e65                	lui	t3,0x19
 7a2:	6261                	lui	tp,0x18
 7a4:	656c                	flw	fa1,76(a0)
 7a6:	6500                	flw	fs0,8(a0)
 7a8:	63696c63          	bltu	s2,s6,de0 <CSR_MTVT2+0x5f4>
 7ac:	735f 7465 695f      	0x695f7465735f
 7b2:	7172                	flw	ft2,60(sp)
 7b4:	6c5f 6c76 615f      	0x615f6c766c5f
 7ba:	7362                	flw	ft6,56(sp)
 7bc:	6e00                	flw	fs0,24(a2)
 7be:	626c                	flw	fa1,68(a2)
 7c0:	7469                	lui	s0,0xffffa
 7c2:	68735f73          	csrrwi	t5,0x687,6
 7c6:	6669                	lui	a2,0x1a
 7c8:	6574                	flw	fa3,76(a0)
 7ca:	0064                	addi	s1,sp,12
 7cc:	6365                	lui	t1,0x19
 7ce:	696c                	flw	fa1,84(a0)
 7d0:	65675f63          	bge	a4,s6,e2e <CSR_MTVT2+0x642>
 7d4:	5f74                	lw	a3,124(a4)
 7d6:	63696c63          	bltu	s2,s6,e0e <CSR_MTVT2+0x622>
 7da:	00676663          	bltu	a4,t1,7e6 <CSR_MMISC_CTL+0x16>
 7de:	6365                	lui	t1,0x19
 7e0:	696c                	flw	fa1,84(a0)
 7e2:	65735f63          	bge	t1,s7,e40 <CSR_MTVT2+0x654>
 7e6:	5f74                	lw	a3,124(a4)
 7e8:	6f6e                	flw	ft10,216(sp)
 7ea:	766e                	flw	fa2,248(sp)
 7ec:	6f6d                	lui	t5,0x1b
 7ee:	6564                	flw	fs1,76(a0)
 7f0:	6500                	flw	fs0,8(a0)
 7f2:	63696c63          	bltu	s2,s6,e2a <CSR_MTVT2+0x63e>
 7f6:	635f 656c 7261      	0x7261656c635f
 7fc:	705f 6e65 6964      	0x69646e65705f
 802:	676e                	flw	fa4,216(sp)
 804:	6500                	flw	fs0,8(a0)
 806:	63696c63          	bltu	s2,s6,e3e <CSR_MTVT2+0x652>
 80a:	735f 7465 705f      	0x705f7465735f
 810:	6e65                	lui	t3,0x19
 812:	6964                	flw	fs1,84(a0)
 814:	676e                	flw	fa4,216(sp)
 816:	6400                	flw	fs0,8(s0)
 818:	6c65                	lui	s8,0x19
 81a:	6174                	flw	fa3,68(a0)
 81c:	6d5f 6974 656d      	0x656d69746d5f
 822:	6d00                	flw	fs0,24(a0)
 824:	6974                	flw	fa3,84(a0)
 826:	656d                	lui	a0,0x1b
 828:	685f 0069 756e      	0x756e0069685f
 82e:	5f6d                	li	t5,-5
 830:	7269                	lui	tp,0xffffa
 832:	0071                	c.nop	28
 834:	5f746567          	0x5f746567
 838:	6974                	flw	fa3,84(a0)
 83a:	656d                	lui	a0,0x1b
 83c:	5f72                	lw	t5,60(sp)
 83e:	6176                	flw	ft2,92(sp)
 840:	756c                	flw	fa1,108(a0)
 842:	0065                	c.nop	25
 844:	74697773          	csrrci	a4,0x746,18
 848:	6d5f6863          	bltu	t5,s5,f18 <CSR_MTVT2+0x72c>
 84c:	7532                	flw	fa0,44(sp)
 84e:	6d5f 646f 0065      	0x65646f6d5f
 854:	6365                	lui	t1,0x19
 856:	696c                	flw	fa1,84(a0)
 858:	69645f63          	bge	s0,s6,ef6 <CSR_MTVT2+0x70a>
 85c:	6c626173          	csrrsi	sp,0x6c6,4
 860:	5f65                	li	t5,-7
 862:	6e69                	lui	t3,0x1a
 864:	6574                	flw	fa3,76(a0)
 866:	7272                	flw	ft4,60(sp)
 868:	7075                	c.lui	zero,0xffffd
 86a:	0074                	addi	a3,sp,12

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347          	fmsub.d	ft6,ft6,ft4,ft7,rmm
   4:	2820                	fld	fs0,80(s0)
   6:	2029                	jal	10 <MSTATUS_MIE+0x8>
   8:	2e38                	fld	fa4,88(a2)
   a:	00302e33          	sgtz	t3,gp

Disassembly of section .riscv.attributes:

00000000 <.riscv.attributes>:
   0:	2a41                	jal	190 <_start+0x34>
   2:	0000                	unimp
   4:	7200                	flw	fs0,32(a2)
   6:	7369                	lui	t1,0xffffa
   8:	01007663          	bgeu	zero,a6,14 <MSTATUS_MIE+0xc>
   c:	0020                	addi	s0,sp,8
   e:	0000                	unimp
  10:	1004                	addi	s1,sp,32
  12:	7205                	lui	tp,0xfffe1
  14:	3376                	fld	ft6,376(sp)
  16:	6932                	flw	fs2,12(sp)
  18:	7032                	flw	ft0,44(sp)
  1a:	5f30                	lw	a2,120(a4)
  1c:	326d                	jal	fffff9c6 <_stack_end+0xdfff79c6>
  1e:	3070                	fld	fa2,224(s0)
  20:	615f 7032 5f30      	0x5f307032615f
  26:	30703263          	0x30703263
	...

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	000c                	0xc
   2:	0000                	unimp
   4:	ffff                	0xffff
   6:	ffff                	0xffff
   8:	0001                	nop
   a:	7c01                	lui	s8,0xfffe0
   c:	0d01                	addi	s10,s10,0
   e:	0002                	c.slli64	zero
  10:	000c                	0xc
  12:	0000                	unimp
  14:	0000                	unimp
  16:	0000                	unimp
  18:	01ea                	slli	gp,gp,0x1a
  1a:	0000                	unimp
  1c:	000a                	c.slli	zero,0x2
  1e:	0000                	unimp
  20:	000c                	0xc
  22:	0000                	unimp
  24:	0000                	unimp
  26:	0000                	unimp
  28:	026e                	slli	tp,tp,0x1b
  2a:	0000                	unimp
  2c:	0112                	slli	sp,sp,0x4
  2e:	0000                	unimp
  30:	0058                	addi	a4,sp,4
  32:	0000                	unimp
  34:	0000                	unimp
  36:	0000                	unimp
  38:	01f4                	addi	a3,sp,204
  3a:	0000                	unimp
  3c:	007a                	c.slli	zero,0x1e
  3e:	0000                	unimp
  40:	0e42                	slli	t3,t3,0x10
  42:	4240                	lw	s0,4(a2)
  44:	8e460a8f          	0x8e460a8f
  48:	6009                	c.lui	zero,0x2
  4a:	058a                	slli	a1,a1,0x2
  4c:	0181                	addi	gp,gp,0
  4e:	0285                	addi	t0,t0,1
  50:	0386                	slli	t2,t2,0x1
  52:	068b0487          	0x68b0487
  56:	078c                	addi	a1,sp,960
  58:	088d                	addi	a7,a7,3
  5a:	0b90                	addi	a2,sp,464
  5c:	0c91                	addi	s9,s9,4
  5e:	0d9c                	addi	a5,sp,720
  60:	0e9d                	addi	t4,t4,7
  62:	0f9e                	slli	t6,t6,0x7
  64:	109f c16c c542      	0xc542c16c109f
  6a:	c642                	sw	a6,12(sp)
  6c:	c742                	sw	a6,140(sp)
  6e:	ca42                	sw	a6,20(sp)
  70:	cb42                	sw	a6,148(sp)
  72:	cc42                	sw	a6,24(sp)
  74:	cd42                	sw	a6,152(sp)
  76:	ce42                	sw	a6,28(sp)
  78:	cf42                	sw	a6,156(sp)
  7a:	d042                	sw	a6,32(sp)
  7c:	d142                	sw	a6,160(sp)
  7e:	dc42                	sw	a6,56(sp)
  80:	dd42                	sw	a6,184(sp)
  82:	de42                	sw	a6,60(sp)
  84:	df42                	sw	a6,188(sp)
  86:	0e42                	slli	t3,t3,0x10
  88:	0000                	unimp
  8a:	0000                	unimp
  8c:	000c                	0xc
  8e:	0000                	unimp
  90:	ffff                	0xffff
  92:	ffff                	0xffff
  94:	0001                	nop
  96:	7c01                	lui	s8,0xfffe0
  98:	0d01                	addi	s10,s10,0
  9a:	0002                	c.slli64	zero
  9c:	000c                	0xc
  9e:	0000                	unimp
  a0:	008c                	addi	a1,sp,64
  a2:	0000                	unimp
  a4:	0380                	addi	s0,sp,448
  a6:	0000                	unimp
  a8:	0012                	c.slli	zero,0x4
  aa:	0000                	unimp
  ac:	000c                	0xc
  ae:	0000                	unimp
  b0:	008c                	addi	a1,sp,64
  b2:	0000                	unimp
  b4:	0392                	slli	t2,t2,0x4
  b6:	0000                	unimp
  b8:	001c                	0x1c
  ba:	0000                	unimp
  bc:	000c                	0xc
  be:	0000                	unimp
  c0:	008c                	addi	a1,sp,64
  c2:	0000                	unimp
  c4:	03ae                	slli	t2,t2,0xb
  c6:	0000                	unimp
  c8:	0008                	0x8
  ca:	0000                	unimp
  cc:	000c                	0xc
  ce:	0000                	unimp
  d0:	008c                	addi	a1,sp,64
  d2:	0000                	unimp
  d4:	03b6                	slli	t2,t2,0xd
  d6:	0000                	unimp
  d8:	0008                	0x8
  da:	0000                	unimp
  dc:	000c                	0xc
  de:	0000                	unimp
  e0:	008c                	addi	a1,sp,64
  e2:	0000                	unimp
  e4:	03be                	slli	t2,t2,0xf
  e6:	0000                	unimp
  e8:	0010                	0x10
  ea:	0000                	unimp
  ec:	000c                	0xc
  ee:	0000                	unimp
  f0:	008c                	addi	a1,sp,64
  f2:	0000                	unimp
  f4:	03ce                	slli	t2,t2,0x13
  f6:	0000                	unimp
  f8:	000e                	c.slli	zero,0x3
  fa:	0000                	unimp
  fc:	000c                	0xc
  fe:	0000                	unimp
 100:	008c                	addi	a1,sp,64
 102:	0000                	unimp
 104:	03dc                	addi	a5,sp,452
 106:	0000                	unimp
 108:	0012                	c.slli	zero,0x4
 10a:	0000                	unimp
 10c:	000c                	0xc
 10e:	0000                	unimp
 110:	008c                	addi	a1,sp,64
 112:	0000                	unimp
 114:	03ee                	slli	t2,t2,0x1b
 116:	0000                	unimp
 118:	0012                	c.slli	zero,0x4
 11a:	0000                	unimp
 11c:	000c                	0xc
 11e:	0000                	unimp
 120:	008c                	addi	a1,sp,64
 122:	0000                	unimp
 124:	0400                	addi	s0,sp,512
 126:	0000                	unimp
 128:	0052                	c.slli	zero,0x14
 12a:	0000                	unimp
 12c:	0018                	0x18
 12e:	0000                	unimp
 130:	008c                	addi	a1,sp,64
 132:	0000                	unimp
 134:	0452                	slli	s0,s0,0x14
 136:	0000                	unimp
 138:	0012                	c.slli	zero,0x4
 13a:	0000                	unimp
 13c:	0e42                	slli	t3,t3,0x10
 13e:	4410                	lw	a2,8(s0)
 140:	0181                	addi	gp,gp,0
 142:	c144                	sw	s1,4(a0)
 144:	0e46                	slli	t3,t3,0x11
 146:	0000                	unimp
 148:	000c                	0xc
 14a:	0000                	unimp
 14c:	008c                	addi	a1,sp,64
 14e:	0000                	unimp
 150:	0464                	addi	s1,sp,524
 152:	0000                	unimp
 154:	0022                	c.slli	zero,0x8
 156:	0000                	unimp
 158:	000c                	0xc
 15a:	0000                	unimp
 15c:	008c                	addi	a1,sp,64
 15e:	0000                	unimp
 160:	0486                	slli	s1,s1,0x1
 162:	0000                	unimp
 164:	0012                	c.slli	zero,0x4
 166:	0000                	unimp
 168:	000c                	0xc
 16a:	0000                	unimp
 16c:	008c                	addi	a1,sp,64
 16e:	0000                	unimp
 170:	0498                	addi	a4,sp,576
 172:	0000                	unimp
 174:	0010                	0x10
 176:	0000                	unimp
 178:	000c                	0xc
 17a:	0000                	unimp
 17c:	008c                	addi	a1,sp,64
 17e:	0000                	unimp
 180:	04a8                	addi	a0,sp,584
 182:	0000                	unimp
 184:	0014                	0x14
 186:	0000                	unimp
 188:	000c                	0xc
 18a:	0000                	unimp
 18c:	008c                	addi	a1,sp,64
 18e:	0000                	unimp
 190:	04bc                	addi	a5,sp,584
 192:	0000                	unimp
 194:	0012                	c.slli	zero,0x4
 196:	0000                	unimp
 198:	000c                	0xc
 19a:	0000                	unimp
 19c:	008c                	addi	a1,sp,64
 19e:	0000                	unimp
 1a0:	04ce                	slli	s1,s1,0x13
 1a2:	0000                	unimp
 1a4:	0010                	0x10
 1a6:	0000                	unimp
 1a8:	000c                	0xc
 1aa:	0000                	unimp
 1ac:	008c                	addi	a1,sp,64
 1ae:	0000                	unimp
 1b0:	04de                	slli	s1,s1,0x17
 1b2:	0000                	unimp
 1b4:	0010                	0x10
 1b6:	0000                	unimp
 1b8:	000c                	0xc
 1ba:	0000                	unimp
 1bc:	008c                	addi	a1,sp,64
 1be:	0000                	unimp
 1c0:	04ee                	slli	s1,s1,0x1b
 1c2:	0000                	unimp
 1c4:	0010                	0x10
 1c6:	0000                	unimp
 1c8:	000c                	0xc
 1ca:	0000                	unimp
 1cc:	008c                	addi	a1,sp,64
 1ce:	0000                	unimp
 1d0:	04fe                	slli	s1,s1,0x1f
 1d2:	0000                	unimp
 1d4:	0010                	0x10
 1d6:	0000                	unimp
 1d8:	000c                	0xc
 1da:	0000                	unimp
 1dc:	008c                	addi	a1,sp,64
 1de:	0000                	unimp
 1e0:	050e                	slli	a0,a0,0x3
 1e2:	0000                	unimp
 1e4:	000a                	c.slli	zero,0x2
 1e6:	0000                	unimp
 1e8:	000c                	0xc
  for(;time;time--)asm volatile("nop");
 1ea:	0000                	unimp
}
 1ec:	008c                	addi	a1,sp,64
  for(;time;time--)asm volatile("nop");
 1ee:	0000                	unimp
 1f0:	0518                	addi	a4,sp,640
 1f2:	0000                	unimp
void USART0_IRQHandler(void){
 1f4:	000a                	c.slli	zero,0x2
 1f6:	0000                	unimp
  USART_CTL0(USART0) &=~ USART_CTL0_TBEIE;
 1f8:	000c                	0xc
 1fa:	0000                	unimp
void USART0_IRQHandler(void){
 1fc:	008c                	addi	a1,sp,64
  USART_CTL0(USART0) &=~ USART_CTL0_TBEIE;
 1fe:	0000                	unimp
 200:	0522                	slli	a0,a0,0x8
void USART0_IRQHandler(void){
 202:	0000                	unimp
 204:	000a                	c.slli	zero,0x2
 206:	0000                	unimp
 208:	000c                	0xc
 20a:	0000                	unimp
 20c:	008c                	addi	a1,sp,64
 20e:	0000                	unimp
 210:	052c                	addi	a1,sp,648
 212:	0000                	unimp
 214:	000a                	c.slli	zero,0x2
 216:	0000                	unimp
 218:	000c                	0xc
 21a:	0000                	unimp
 21c:	008c                	addi	a1,sp,64
  USART_CTL0(USART0) &=~ USART_CTL0_TBEIE;
 21e:	0000                	unimp
 220:	0536                	slli	a0,a0,0xd
 222:	0000                	unimp
 224:	0018                	0x18
  USART_DATA(USART0) = 'U';
 226:	0000                	unimp
 228:	000c                	0xc
 22a:	0000                	unimp
 22c:	008c                	addi	a1,sp,64
  GPO_T(RLED);
 22e:	0000                	unimp
 230:	054e                	slli	a0,a0,0x13
 232:	0000                	unimp
 234:	000e                	c.slli	zero,0x3
  sleep(300000);
 236:	0000                	unimp
 238:	001c                	0x1c
 23a:	0000                	unimp
 23c:	008c                	addi	a1,sp,64
  GPO_T(RLED);
 23e:	0000                	unimp
 240:	055c                	addi	a5,sp,644
 242:	0000                	unimp
 244:	0054                	addi	a3,sp,4
  sleep(300000);
 246:	0000                	unimp
}
 248:	0e42                	slli	t3,t3,0x10
 24a:	4620                	lw	s0,72(a2)
 24c:	0288                	addi	a0,sp,320
 24e:	0181                	addi	gp,gp,0
 250:	4602                	lw	a2,0(sp)
 252:	42c1                	li	t0,16
 254:	42c8                	lw	a0,4(a3)
 256:	000e                	c.slli	zero,0x3
 258:	001c                	0x1c
 25a:	0000                	unimp
 25c:	008c                	addi	a1,sp,64
 25e:	0000                	unimp
 260:	05b0                	addi	a2,sp,712
 262:	0000                	unimp
 264:	0040                	addi	s0,sp,4
 266:	0000                	unimp
 268:	0e42                	slli	t3,t3,0x10
 26a:	4410                	lw	a2,8(s0)
 26c:	0288                	addi	a0,sp,320
  eclic_init(ECLIC_NUM_INTERRUPTS);
 26e:	0181                	addi	gp,gp,0
 270:	c168                	sw	a0,68(a0)
 272:	c842                	sw	a6,16(sp)
  RCU_APB2EN |= RCU_APB2EN_PAEN | RCU_APB2EN_PBEN | RCU_APB2EN_PCEN;
 274:	0e4e                	slli	t3,t3,0x13
 276:	0000                	unimp
 278:	0020                	addi	s0,sp,8
  GPIO_config(RLED); GPIO_config(YLED); GPIO_config(GLED);
 27a:	0000                	unimp
 27c:	008c                	addi	a1,sp,64
 27e:	0000                	unimp
  RCU_APB2EN |= RCU_APB2EN_PAEN | RCU_APB2EN_PBEN | RCU_APB2EN_PCEN;
 280:	05f0                	addi	a2,sp,716
 282:	0000                	unimp
 284:	0052                	c.slli	zero,0x14
  GPIO_config(RLED); GPIO_config(YLED); GPIO_config(GLED);
 286:	0000                	unimp
 288:	0e42                	slli	t3,t3,0x10
 28a:	4610                	lw	a2,8(a2)
 28c:	0288                	addi	a0,sp,320
  eclic_set_vmode( USART0_IRQn );
 28e:	0389                	addi	t2,t2,2
 290:	0181                	addi	gp,gp,0
  GPIO_config(RLED); GPIO_config(YLED); GPIO_config(GLED);
 292:	4202                	lw	tp,0(sp)
 294:	42c1                	li	t0,16
 296:	42c8                	lw	a0,4(a3)
 298:	42c9                	li	t0,18
 29a:	000e                	c.slli	zero,0x3
 29c:	001c                	0x1c
 29e:	0000                	unimp
 2a0:	008c                	addi	a1,sp,64
 2a2:	0000                	unimp
 2a4:	0642                	slli	a2,a2,0x10
 2a6:	0000                	unimp
 2a8:	003e                	c.slli	zero,0xf
 2aa:	0000                	unimp
 2ac:	0e42                	slli	t3,t3,0x10
 2ae:	4410                	lw	a2,8(s0)
 2b0:	0288                	addi	a0,sp,320
 2b2:	0181                	addi	gp,gp,0
 2b4:	c166                	sw	s9,128(sp)
 2b6:	c842                	sw	a6,16(sp)
 2b8:	0e4e                	slli	t3,t3,0x13
 2ba:	0000                	unimp
 2bc:	001c                	0x1c
 2be:	0000                	unimp
 2c0:	008c                	addi	a1,sp,64
 2c2:	0000                	unimp
 2c4:	0680                	addi	s0,sp,832
  GPIO_config(SBTN); GPIO_config(RBTN);
 2c6:	0000                	unimp
 2c8:	004c                	addi	a1,sp,4
  GPIO_config(UART0_RX); GPIO_config(UART0_TX);
 2ca:	0000                	unimp
 2cc:	0e42                	slli	t3,t3,0x10
 2ce:	4620                	lw	s0,72(a2)
  GPIO_config(SBTN); GPIO_config(RBTN);
 2d0:	0288                	addi	a0,sp,320
 2d2:	0181                	addi	gp,gp,0
 2d4:	3c02                	fld	fs8,32(sp)
 2d6:	42c1                	li	t0,16
 2d8:	44c8                	lw	a0,12(s1)
 2da:	000e                	c.slli	zero,0x3
 2dc:	001c                	0x1c
 2de:	0000                	unimp
 2e0:	008c                	addi	a1,sp,64
 2e2:	0000                	unimp
 2e4:	06cc                	addi	a1,sp,836
 2e6:	0000                	unimp
 2e8:	0046                	c.slli	zero,0x11
  GPIO_config(UART0_RX); GPIO_config(UART0_TX);
 2ea:	0000                	unimp
 2ec:	0e42                	slli	t3,t3,0x10
 2ee:	4410                	lw	a2,8(s0)
 2f0:	0288                	addi	a0,sp,320
 2f2:	0181                	addi	gp,gp,0
 2f4:	c166                	sw	s9,128(sp)
 2f6:	c842                	sw	a6,16(sp)
 2f8:	0e56                	slli	t3,t3,0x15
 2fa:	0000                	unimp
 2fc:	000c                	0xc
 2fe:	0000                	unimp
 300:	008c                	addi	a1,sp,64
 302:	0000                	unimp
 304:	0712                	slli	a4,a4,0x4
 306:	0000                	unimp
  RCU_APB2EN |= RCU_APB2EN_USART0EN | RCU_APB2EN_AFEN;
 308:	0012                	c.slli	zero,0x4
 30a:	0000                	unimp
 30c:	000c                	0xc
 30e:	0000                	unimp
 310:	008c                	addi	a1,sp,64
  USART_BAUD(USART0) = 8000000 / 9600;
 312:	0000                	unimp
 314:	0724                	addi	s1,sp,904
 316:	0000                	unimp
 318:	0018                	0x18
 31a:	0000                	unimp
 31c:	000c                	0xc
  USART_CTL0(USART0) = USART_CTL0_UEN | USART_CTL0_REN | USART_CTL0_TEN;
 31e:	0000                	unimp
 320:	008c                	addi	a1,sp,64
 322:	0000                	unimp
 324:	073c                	addi	a5,sp,904
  eclic_set_vmode( USART0_IRQn );
 326:	0000                	unimp
  eclic_enable_interrupt( USART0_IRQn );
 328:	0018                	0x18
 32a:	0000                	unimp
 32c:	000c                	0xc
  eclic_global_interrupt_enable();
 32e:	0000                	unimp
 330:	008c                	addi	a1,sp,64
    sleep(100000);
 332:	0000                	unimp
    GPO_T(YLED);
 334:	0754                	addi	a3,sp,900
 336:	0000                	unimp
    if( GPI_ON(SBTN) )GPO_ON(GLED); else GPO_OFF(GLED);
 338:	0018                	0x18
 33a:	0000                	unimp
 33c:	000c                	0xc
 33e:	0000                	unimp
    if( GPI_ON(RBTN) )USART_CTL0(USART0) |= USART_CTL0_TBEIE;
 340:	008c                	addi	a1,sp,64
 342:	0000                	unimp
    sleep(100000);
 344:	076c                	addi	a1,sp,908
 346:	0000                	unimp
    GPO_T(YLED);
 348:	0018                	0x18
 34a:	0000                	unimp
 34c:	000c                	0xc
 34e:	0000                	unimp
 350:	008c                	addi	a1,sp,64
 352:	0000                	unimp
    if( GPI_ON(SBTN) )GPO_ON(GLED); else GPO_OFF(GLED);
 354:	0784                	addi	s1,sp,960
 356:	0000                	unimp
 358:	0018                	0x18
	...
